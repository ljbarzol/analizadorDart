--- Análisis de: algoritmo2.dart (Usuario: vic28code) ---


--- Resultado del Análisis (AST) ---
('program',
 [('function',
   ('type', 'void'),
   'main',
   [],
   [('variable_declaration',
     ('generic', 'List', [('type', 'int')]),
     'numeros',
     ('array',
      [('int_lit', 1),
       ('int_lit', 3),
       ('int_lit', 5),
       ('int_lit', 7),
       ('int_lit', 9),
       ('int_lit', 11),
       ('int_lit', 13),
       ('int_lit', 15),
       ('int_lit', 17),
       ('int_lit', 19)])),
    ('variable_declaration', ('type', 'int'), 'objetivo', ('int_lit', 13)),
    ('variable_declaration',
     ('type', 'int'),
     'resultado',
     ('call',
      ('var', 'busquedaBinaria'),
      [('var', 'numeros'), ('var', 'objetivo')])),
    ('if_else',
     ('!=', ('var', 'resultado'), ('uminus', ('int_lit', 1))),
     ('block',
      [('print',
        ('string_lit',
         [('str', 'Elemento encontrado en la posición '),
          ('var', 'resultado'),
          ('str', '')]))]),
     ('block',
      [('print', ('string_lit', [('str', 'Elemento no encontrado')]))])),
    ('for',
     ('variable_declaration', ('type', 'int'), 'i', ('int_lit', 0)),
     ('<', ('var', 'i'), ('member_access', ('var', 'numeros'), 'length')),
     ('postfix', '++', ('var', 'i')),
     ('block',
      [('if_else',
        ('==',
         ('subscript', ('var', 'numeros'), ('var', 'i')),
         ('var', 'objetivo')),
        ('block',
         [('print',
           ('string_lit', [('str', 'Encontrado con for: ${numeros[i]}')])),
          ('break',)]),
        ('if_else',
         ('==',
          ('%',
           ('subscript', ('var', 'numeros'), ('var', 'i')),
           ('int_lit', 2)),
          ('int_lit', 0)),
         ('block', [('continue',)]),
         ('block',
          [('print',
            ('string_lit',
             [('str', 'Valor actual en for: ${numeros[i]}')]))])))])),
    ('variable_declaration', ('type', 'int'), 'index', ('int_lit', 0)),
    ('while',
     ('<', ('var', 'index'), ('member_access', ('var', 'numeros'), 'length')),
     ('block',
      [('if',
        ('==',
         ('subscript', ('var', 'numeros'), ('var', 'index')),
         ('var', 'objetivo')),
        ('block',
         [('print',
           ('string_lit',
            [('str', 'Encontrado con while: ${numeros[index]}')])),
          ('break',)])),
       ('postfix', '++', ('var', 'index'))]))]),
  ('function',
   ('type', 'int'),
   'busquedaBinaria',
   [(('generic', 'List', [('type', 'int')]), 'lista'),
    (('type', 'int'), 'valor')],
   [('variable_declaration', ('type', 'int'), 'izquierda', ('int_lit', 0)),
    ('variable_declaration',
     ('type', 'int'),
     'derecha',
     ('-', ('member_access', ('var', 'lista'), 'length'), ('int_lit', 1))),
    ('while',
     ('<=', ('var', 'izquierda'), ('var', 'derecha')),
     ('block',
      [('variable_declaration',
        ('type', 'int'),
        'medio',
        ('~/',
         ('+', ('var', 'izquierda'), ('var', 'derecha')),
         ('int_lit', 2))),
       ('if_else',
        ('==',
         ('subscript', ('var', 'lista'), ('var', 'medio')),
         ('var', 'valor')),
        ('block', [('return', ('var', 'medio'))]),
        ('if_else',
         ('<',
          ('subscript', ('var', 'lista'), ('var', 'medio')),
          ('var', 'valor')),
         ('block',
          [('=',
            ('var', 'izquierda'),
            ('+', ('var', 'medio'), ('int_lit', 1)))]),
         ('block',
          [('=',
            ('var', 'derecha'),
            ('-', ('var', 'medio'), ('int_lit', 1)))])))])),
    ('return', ('uminus', ('int_lit', 1)))])])
