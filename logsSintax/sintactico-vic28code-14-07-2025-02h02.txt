--- Análisis de: algoritmo2.dart (Usuario: vic28code) ---


--- Resultado del Análisis (AST) ---
('program',
 [('function',
   ('type', 'void'),
   'main',
   [],
   [('variable_declaration',
     ('generic', 'List', [('type', 'int')]),
     'numeros',
     ('array', [1, 3, 5, 7, 9, 11, 13, 15, 17, 19])),
    ('variable_declaration', ('type', 'int'), 'objetivo', 13),
    ('variable_declaration',
     ('type', 'int'),
     'resultado',
     ('call',
      ('var', 'busquedaBinaria'),
      [('var', 'numeros'), ('var', 'objetivo')])),
    ('if_else',
     ('!=', ('var', 'resultado'), ('uminus', 1)),
     ('block',
      [('print',
        [('str', 'Elemento encontrado en la posición '),
         ('var', 'resultado'),
         ('str', '')])]),
     ('block', [('print', [('str', 'Elemento no encontrado')])])),
    ('for',
     ('variable_declaration', ('type', 'int'), 'i', 0),
     ('<', ('var', 'i'), ('member_access', ('var', 'numeros'), 'length')),
     ('postfix', '++', ('var', 'i')),
     ('block',
      [('if_else',
        ('==',
         ('subscript', ('var', 'numeros'), ('var', 'i')),
         ('var', 'objetivo')),
        ('block',
         [('print', [('str', 'Encontrado con for: ${numeros[i]}')]),
          ('break',)]),
        ('if_else',
         ('==', ('%', ('subscript', ('var', 'numeros'), ('var', 'i')), 2), 0),
         ('block', [('continue',)]),
         ('block',
          [('print', [('str', 'Valor actual en for: ${numeros[i]}')])])))])),
    ('variable_declaration', ('type', 'int'), 'index', 0),
    ('while',
     ('<', ('var', 'index'), ('member_access', ('var', 'numeros'), 'length')),
     ('block',
      [('if',
        ('==',
         ('subscript', ('var', 'numeros'), ('var', 'index')),
         ('var', 'objetivo')),
        ('block',
         [('print', [('str', 'Encontrado con while: ${numeros[index]}')]),
          ('break',)])),
       ('postfix', '++', ('var', 'index'))]))]),
  ('function',
   ('type', 'int'),
   'busquedaBinaria',
   [(('generic', 'List', [('type', 'int')]), 'lista'),
    (('type', 'int'), 'valor')],
   [('variable_declaration', ('type', 'int'), 'izquierda', 0),
    ('variable_declaration',
     ('type', 'int'),
     'derecha',
     ('-', ('member_access', ('var', 'lista'), 'length'), 1)),
    ('while',
     ('<=', ('var', 'izquierda'), ('var', 'derecha')),
     ('block',
      [('variable_declaration',
        ('type', 'int'),
        'medio',
        ('~/', ('+', ('var', 'izquierda'), ('var', 'derecha')), 2)),
       ('if_else',
        ('==',
         ('subscript', ('var', 'lista'), ('var', 'medio')),
         ('var', 'valor')),
        ('block', [('return', ('var', 'medio'))]),
        ('if_else',
         ('<',
          ('subscript', ('var', 'lista'), ('var', 'medio')),
          ('var', 'valor')),
         ('block', [('=', ('var', 'izquierda'), ('+', ('var', 'medio'), 1))]),
         ('block',
          [('=', ('var', 'derecha'), ('-', ('var', 'medio'), 1))])))])),
    ('return', ('uminus', 1))])])
