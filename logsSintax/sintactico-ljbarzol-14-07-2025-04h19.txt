--- Análisis de: algoritmo1.dart (Usuario: ljbarzol) ---


--- Resultado del Análisis (AST) ---
('program',
 [('import', 'dart:io'),
  ('const_declaration', ('type', 'int'), 'LIMITE_SUPERIOR', ('int_lit', 20)),
  ('function',
   ('type', 'int'),
   'calcularFactorialIterativo',
   [(('type', 'int'), 'n')],
   [('if',
     ('<', ('var', 'n'), ('int_lit', 0)),
     ('throw',
      ('call',
       ('var', 'ArgumentError'),
       [('string_lit', [('str', 'El número no puede ser negativo')])]))),
    ('variable_declaration', ('type', 'int'), 'resultado', ('int_lit', 1)),
    ('for',
     ('variable_declaration', ('type', 'int'), 'i', ('int_lit', 2)),
     ('<=', ('var', 'i'), ('var', 'n')),
     ('postfix', '++', ('var', 'i')),
     ('block', [('*=', ('var', 'resultado'), ('var', 'i'))])),
    ('return', ('var', 'resultado'))]),
  ('function',
   ('type', 'int'),
   'calcularFactorialRecursivo',
   [(('type', 'int'), 'n')],
   [('if',
     ('<', ('var', 'n'), ('int_lit', 0)),
     ('throw',
      ('call',
       ('var', 'ArgumentError'),
       [('string_lit', [('str', 'El número no puede ser negativo')])]))),
    ('if',
     ('||',
      ('==', ('var', 'n'), ('int_lit', 0)),
      ('==', ('var', 'n'), ('int_lit', 1))),
     ('return', ('int_lit', 1))),
    ('return',
     ('*',
      ('var', 'n'),
      ('call',
       ('var', 'calcularFactorialRecursivo'),
       [('-', ('var', 'n'), ('int_lit', 1))])))]),
  ('function',
   ('type', 'bool'),
   'validarEntrada',
   [(('type', 'dynamic'), 'valor')],
   [('if',
     ('is!', ('var', 'valor'), ('type', 'int')),
     ('return', ('bool_lit', 'false'))),
    ('return',
     ('&&',
      ('>=', ('var', 'valor'), ('int_lit', 0)),
      ('<=', ('var', 'valor'), ('var', 'LIMITE_SUPERIOR'))))]),
  ('function',
   ('type', 'void'),
   'mostrarResultado',
   [(('type', 'int'), 'numero'), (('type', 'int'), 'resultado')],
   [('print',
     ('string_lit',
      [('str', 'El factorial de '),
       ('var', 'numero'),
       ('str', ' es '),
       ('var', 'resultado'),
       ('str', '')]))]),
  ('function',
   ('type', 'void'),
   'main',
   [],
   [('print',
     ('string_lit',
      [('str', 'Ingrese un número entero positivo (máximo '),
       ('var', 'LIMITE_SUPERIOR'),
       ('str', '):')])),
    ('variable_declaration',
     ('nullable_type', ('type', 'String')),
     'entrada',
     ('call', ('member_access', ('var', 'stdin'), 'readLineSync'), [])),
    ('try',
     ('block',
      [('variable_declaration',
        ('type', 'int'),
        'numero',
        ('static_call',
         ('type', 'int'),
         'parse',
         [('null_coalescing',
           ('var', 'entrada'),
           ('string_lit', [('str', '0')]))])),
       ('if',
        ('not', ('call', ('var', 'validarEntrada'), [('var', 'numero')])),
        ('block',
         [('print',
           ('string_lit',
            [('str',
              'Número inválido. Intente nuevamente con un entero entre 0 y '),
             ('var', 'LIMITE_SUPERIOR'),
             ('str', '.')])),
          ('return', None)])),
       ('variable_declaration',
        ('type', 'int'),
        'resultadoIterativo',
        ('call', ('var', 'calcularFactorialIterativo'), [('var', 'numero')])),
       ('variable_declaration',
        ('type', 'int'),
        'resultadoRecursivo',
        ('call', ('var', 'calcularFactorialRecursivo'), [('var', 'numero')])),
       ('if_else',
        ('!=', ('var', 'resultadoIterativo'), ('var', 'resultadoRecursivo')),
        ('block',
         [('print',
           ('string_lit',
            [('str',
              '¡Alerta! Los métodos iterativo y recursivo no coinciden.')]))]),
        ('block',
         [('call',
           ('var', 'mostrarResultado'),
           [('var', 'numero'), ('var', 'resultadoIterativo')])]))]),
     [('catch',
       None,
       'e',
       ('block',
        [('print',
          ('string_lit',
           [('str', 'Error de entrada: '), ('var', 'e'), ('str', '')]))]))],
     None)])])
