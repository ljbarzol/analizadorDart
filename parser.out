Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    COMMENT
    CONTINUE
    EXTENDS
    FINAL
    IMPLEMENTS
    MODULE
    NULLCOALESCING
    QMARK_DOT
    SQUOTE
    SWITCH
    THEN

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> empty
Rule 4     declaration -> class
Rule 5     declaration -> function_declaration
Rule 6     declaration -> variable_declaration SEMICOLON
Rule 7     declaration -> import_statement
Rule 8     declaration -> const_declaration SEMICOLON
Rule 9     import_statement -> IMPORT STRING_LITERAL SEMICOLON
Rule 10    const_declaration -> CONST declaration_type ID EQUALS expression
Rule 11    class -> CLASS ID LBRACE class_body RBRACE
Rule 12    class_body -> class_member class_body
Rule 13    class_body -> empty
Rule 14    class_member -> class_property
Rule 15    class_member -> function_declaration
Rule 16    class_member -> constructor_declaration
Rule 17    function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
Rule 18    function_name -> ID
Rule 19    function_name -> MAIN
Rule 20    class_property -> declaration_type ID SEMICOLON
Rule 21    constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON
Rule 22    constructor_params -> constructor_param_list
Rule 23    constructor_params -> empty
Rule 24    constructor_param_list -> constructor_param_list COMMA constructor_param
Rule 25    constructor_param_list -> constructor_param
Rule 26    constructor_param -> THIS DOT ID
Rule 27    declaration_type -> primitive_type
Rule 28    declaration_type -> generic_type
Rule 29    declaration_type -> ID
Rule 30    primitive_type -> INT
Rule 31    primitive_type -> DOUBLE
Rule 32    primitive_type -> STRING
Rule 33    primitive_type -> BOOL
Rule 34    primitive_type -> VOID
Rule 35    primitive_type -> VAR
Rule 36    primitive_type -> DYNAMIC
Rule 37    generic_type -> ID MINSIGN type_list MAXSIGN
Rule 38    type_list -> type_list COMMA declaration_type
Rule 39    type_list -> declaration_type
Rule 40    expression -> expression AND expression
Rule 41    expression -> expression OR expression
Rule 42    expression -> expression EQEQ expression
Rule 43    expression -> expression NEQ expression
Rule 44    expression -> expression MINSIGN expression
Rule 45    expression -> expression MAXSIGN expression
Rule 46    expression -> expression MINSIGNEQ expression
Rule 47    expression -> expression MAXSIGNEQ expression
Rule 48    expression -> expression IS declaration_type
Rule 49    expression -> expression IS NOT declaration_type
Rule 50    expression -> NOT expression
Rule 51    expression -> MINUS expression
Rule 52    expression -> expression PLUSPLUS
Rule 53    expression -> expression MINUSMINUS
Rule 54    expression -> expression DOT ID
Rule 55    expression -> expression LBRACKET expression RBRACKET
Rule 56    expression -> expression LPAREN arguments RPAREN
Rule 57    arguments -> expression_list
Rule 58    arguments -> empty
Rule 59    expression -> expression NOT
Rule 60    expression -> expression PLUS expression
Rule 61    expression -> expression MINUS expression
Rule 62    expression -> expression TIMES expression
Rule 63    expression -> expression DIVIDE expression
Rule 64    expression -> expression INTDIV expression
Rule 65    expression -> term
Rule 66    term -> factor
Rule 67    factor -> primitive_type DOT ID LPAREN arguments RPAREN
Rule 68    factor -> NUMBER
Rule 69    factor -> STRING_LITERAL
Rule 70    factor -> ID
Rule 71    factor -> LPAREN expression RPAREN
Rule 72    instructions -> instruction instructions
Rule 73    instructions -> empty
Rule 74    instruction -> variable_declaration SEMICOLON
Rule 75    instruction -> expression SEMICOLON
Rule 76    instruction -> print_statement
Rule 77    instruction -> if_else
Rule 78    instruction -> while_loop
Rule 79    instruction -> for_loop
Rule 80    instruction -> return_statement
Rule 81    instruction -> block_statement
Rule 82    instruction -> throw_statement
Rule 83    block_statement -> LBRACE instructions RBRACE
Rule 84    throw_statement -> THROW expression SEMICOLON
Rule 85    variable_declaration -> declaration_type ID
Rule 86    variable_declaration -> declaration_type ID EQUALS expression
Rule 87    expression -> expression EQUALS expression
Rule 88    expression -> expression PLUSEQ expression
Rule 89    expression -> expression MINUSEQ expression
Rule 90    expression -> expression TIMESEQ expression
Rule 91    expression -> expression DIVEQ expression
Rule 92    expression -> expression NULLASSIGN expression
Rule 93    expression -> expression QMARK expression COLON expression
Rule 94    print_statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 95    parameters -> parameters COMMA declaration_type ID
Rule 96    parameters -> declaration_type ID
Rule 97    parameters -> empty
Rule 98    return_statement -> RETURN expression SEMICOLON
Rule 99    return_statement -> RETURN SEMICOLON
Rule 100   body -> instructions
Rule 101   if_else -> IF LPAREN expression RPAREN instruction
Rule 102   if_else -> IF LPAREN expression RPAREN instruction ELSE instruction
Rule 103   while_loop -> WHILE LPAREN expression RPAREN instruction
Rule 104   for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
Rule 105   for_initializer -> variable_declaration
Rule 106   for_initializer -> expression
Rule 107   for_initializer -> empty
Rule 108   expression_opt -> expression
Rule 109   expression_opt -> empty
Rule 110   expression -> LBRACKET expression_list RBRACKET
Rule 111   expression -> LBRACE set_or_map_contents RBRACE
Rule 112   set_or_map_contents -> expression set_or_map_tail
Rule 113   set_or_map_contents -> empty
Rule 114   set_or_map_tail -> COLON expression map_tail
Rule 115   set_or_map_tail -> set_tail
Rule 116   map_tail -> COMMA map_entries
Rule 117   map_tail -> empty
Rule 118   map_entries -> map_entries COMMA map_entry
Rule 119   map_entries -> map_entry
Rule 120   map_entry -> expression COLON expression
Rule 121   set_tail -> COMMA expression_list
Rule 122   set_tail -> empty
Rule 123   expression_list -> expression COMMA expression_list
Rule 124   expression_list -> expression
Rule 125   expression_list -> empty
Rule 126   empty -> <empty>

Terminals, with rules where they appear

AND                  : 40
BOOL                 : 33
BREAK                : 
CASE                 : 
CLASS                : 11
COLON                : 93 114 120
COMMA                : 24 38 95 116 118 121 123
COMMENT              : 
CONST                : 10
CONTINUE             : 
DIVEQ                : 91
DIVIDE               : 63
DOT                  : 26 54 67
DOUBLE               : 31
DYNAMIC              : 36
ELSE                 : 102
EQEQ                 : 42
EQUALS               : 10 86 87
EXTENDS              : 
FINAL                : 
FOR                  : 104
ID                   : 10 11 18 20 21 26 29 37 54 67 70 85 86 95 96
IF                   : 101 102
IMPLEMENTS           : 
IMPORT               : 9
INT                  : 30
INTDIV               : 64
IS                   : 48 49
LBRACE               : 11 17 83 111
LBRACKET             : 55 110
LPAREN               : 17 21 56 67 71 94 101 102 103 104
MAIN                 : 19
MAXSIGN              : 37 45
MAXSIGNEQ            : 47
MINSIGN              : 37 44
MINSIGNEQ            : 46
MINUS                : 51 61
MINUSEQ              : 89
MINUSMINUS           : 53
MODULE               : 
NEQ                  : 43
NOT                  : 49 50 59
NULLASSIGN           : 92
NULLCOALESCING       : 
NUMBER               : 68
OR                   : 41
PLUS                 : 60
PLUSEQ               : 88
PLUSPLUS             : 52
PRINT                : 94
QMARK                : 93
QMARK_DOT            : 
RBRACE               : 11 17 83 111
RBRACKET             : 55 110
RETURN               : 98 99
RPAREN               : 17 21 56 67 71 94 101 102 103 104
SEMICOLON            : 6 8 9 20 21 74 75 84 94 98 99 104 104
SQUOTE               : 
STRING               : 32
STRING_LITERAL       : 9 69
SWITCH               : 
THEN                 : 
THIS                 : 26
THROW                : 84
TIMES                : 62
TIMESEQ              : 90
VAR                  : 35
VOID                 : 34
WHILE                : 103
error                : 

Nonterminals, with rules where they appear

arguments            : 56 67
block_statement      : 81
body                 : 17
class                : 4
class_body           : 11 12
class_member         : 12
class_property       : 14
const_declaration    : 8
constructor_declaration : 16
constructor_param    : 24 25
constructor_param_list : 22 24
constructor_params   : 21
declaration          : 2
declaration_list     : 1 2
declaration_type     : 10 17 20 38 39 48 49 85 86 95 96
empty                : 3 13 23 58 73 97 107 109 113 117 122 125
expression           : 10 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 49 50 51 52 53 54 55 55 56 59 60 60 61 61 62 62 63 63 64 64 71 75 84 86 87 87 88 88 89 89 90 90 91 91 92 92 93 93 93 94 98 101 102 103 106 108 112 114 120 120 123 124
expression_list      : 57 110 121 123
expression_opt       : 104 104
factor               : 66
for_initializer      : 104
for_loop             : 79
function_declaration : 5 15
function_name        : 17
generic_type         : 28
if_else              : 77
import_statement     : 7
instruction          : 72 101 102 102 103 104
instructions         : 72 83 100
map_entries          : 116 118
map_entry            : 118 119
map_tail             : 114
parameters           : 17 95
primitive_type       : 27 67
print_statement      : 76
program              : 0
return_statement     : 80
set_or_map_contents  : 111
set_or_map_tail      : 112
set_tail             : 115
term                 : 65
throw_statement      : 82
type_list            : 37 38
variable_declaration : 6 74 105
while_loop           : 78

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . empty
    (126) empty -> .

    CLASS           reduce using rule 126 (empty -> .)
    IMPORT          reduce using rule 126 (empty -> .)
    CONST           reduce using rule 126 (empty -> .)
    ID              reduce using rule 126 (empty -> .)
    INT             reduce using rule 126 (empty -> .)
    DOUBLE          reduce using rule 126 (empty -> .)
    STRING          reduce using rule 126 (empty -> .)
    BOOL            reduce using rule 126 (empty -> .)
    VOID            reduce using rule 126 (empty -> .)
    VAR             reduce using rule 126 (empty -> .)
    DYNAMIC         reduce using rule 126 (empty -> .)
    $end            reduce using rule 126 (empty -> .)

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . class
    (5) declaration -> . function_declaration
    (6) declaration -> . variable_declaration SEMICOLON
    (7) declaration -> . import_statement
    (8) declaration -> . const_declaration SEMICOLON
    (11) class -> . CLASS ID LBRACE class_body RBRACE
    (17) function_declaration -> . declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (85) variable_declaration -> . declaration_type ID
    (86) variable_declaration -> . declaration_type ID EQUALS expression
    (9) import_statement -> . IMPORT STRING_LITERAL SEMICOLON
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    $end            reduce using rule 1 (program -> declaration_list .)
    CLASS           shift and go to state 10
    IMPORT          shift and go to state 13
    CONST           shift and go to state 14
    ID              shift and go to state 11
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    declaration                    shift and go to state 4
    class                          shift and go to state 5
    function_declaration           shift and go to state 6
    variable_declaration           shift and go to state 7
    import_statement               shift and go to state 8
    const_declaration              shift and go to state 9
    declaration_type               shift and go to state 12
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 3

    (3) declaration_list -> empty .

    CLASS           reduce using rule 3 (declaration_list -> empty .)
    IMPORT          reduce using rule 3 (declaration_list -> empty .)
    CONST           reduce using rule 3 (declaration_list -> empty .)
    ID              reduce using rule 3 (declaration_list -> empty .)
    INT             reduce using rule 3 (declaration_list -> empty .)
    DOUBLE          reduce using rule 3 (declaration_list -> empty .)
    STRING          reduce using rule 3 (declaration_list -> empty .)
    BOOL            reduce using rule 3 (declaration_list -> empty .)
    VOID            reduce using rule 3 (declaration_list -> empty .)
    VAR             reduce using rule 3 (declaration_list -> empty .)
    DYNAMIC         reduce using rule 3 (declaration_list -> empty .)
    $end            reduce using rule 3 (declaration_list -> empty .)


state 4

    (2) declaration_list -> declaration_list declaration .

    CLASS           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    IMPORT          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    CONST           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DOUBLE          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    STRING          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    BOOL            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VAR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DYNAMIC         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 5

    (4) declaration -> class .

    CLASS           reduce using rule 4 (declaration -> class .)
    IMPORT          reduce using rule 4 (declaration -> class .)
    CONST           reduce using rule 4 (declaration -> class .)
    ID              reduce using rule 4 (declaration -> class .)
    INT             reduce using rule 4 (declaration -> class .)
    DOUBLE          reduce using rule 4 (declaration -> class .)
    STRING          reduce using rule 4 (declaration -> class .)
    BOOL            reduce using rule 4 (declaration -> class .)
    VOID            reduce using rule 4 (declaration -> class .)
    VAR             reduce using rule 4 (declaration -> class .)
    DYNAMIC         reduce using rule 4 (declaration -> class .)
    $end            reduce using rule 4 (declaration -> class .)


state 6

    (5) declaration -> function_declaration .

    CLASS           reduce using rule 5 (declaration -> function_declaration .)
    IMPORT          reduce using rule 5 (declaration -> function_declaration .)
    CONST           reduce using rule 5 (declaration -> function_declaration .)
    ID              reduce using rule 5 (declaration -> function_declaration .)
    INT             reduce using rule 5 (declaration -> function_declaration .)
    DOUBLE          reduce using rule 5 (declaration -> function_declaration .)
    STRING          reduce using rule 5 (declaration -> function_declaration .)
    BOOL            reduce using rule 5 (declaration -> function_declaration .)
    VOID            reduce using rule 5 (declaration -> function_declaration .)
    VAR             reduce using rule 5 (declaration -> function_declaration .)
    DYNAMIC         reduce using rule 5 (declaration -> function_declaration .)
    $end            reduce using rule 5 (declaration -> function_declaration .)


state 7

    (6) declaration -> variable_declaration . SEMICOLON

    SEMICOLON       shift and go to state 24


state 8

    (7) declaration -> import_statement .

    CLASS           reduce using rule 7 (declaration -> import_statement .)
    IMPORT          reduce using rule 7 (declaration -> import_statement .)
    CONST           reduce using rule 7 (declaration -> import_statement .)
    ID              reduce using rule 7 (declaration -> import_statement .)
    INT             reduce using rule 7 (declaration -> import_statement .)
    DOUBLE          reduce using rule 7 (declaration -> import_statement .)
    STRING          reduce using rule 7 (declaration -> import_statement .)
    BOOL            reduce using rule 7 (declaration -> import_statement .)
    VOID            reduce using rule 7 (declaration -> import_statement .)
    VAR             reduce using rule 7 (declaration -> import_statement .)
    DYNAMIC         reduce using rule 7 (declaration -> import_statement .)
    $end            reduce using rule 7 (declaration -> import_statement .)


state 9

    (8) declaration -> const_declaration . SEMICOLON

    SEMICOLON       shift and go to state 25


state 10

    (11) class -> CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 26


state 11

    (29) declaration_type -> ID .
    (37) generic_type -> ID . MINSIGN type_list MAXSIGN

  ! shift/reduce conflict for MINSIGN resolved as shift
    ID              reduce using rule 29 (declaration_type -> ID .)
    MAIN            reduce using rule 29 (declaration_type -> ID .)
    MAXSIGN         reduce using rule 29 (declaration_type -> ID .)
    COMMA           reduce using rule 29 (declaration_type -> ID .)
    AND             reduce using rule 29 (declaration_type -> ID .)
    OR              reduce using rule 29 (declaration_type -> ID .)
    EQEQ            reduce using rule 29 (declaration_type -> ID .)
    NEQ             reduce using rule 29 (declaration_type -> ID .)
    MINSIGNEQ       reduce using rule 29 (declaration_type -> ID .)
    MAXSIGNEQ       reduce using rule 29 (declaration_type -> ID .)
    IS              reduce using rule 29 (declaration_type -> ID .)
    PLUSPLUS        reduce using rule 29 (declaration_type -> ID .)
    MINUSMINUS      reduce using rule 29 (declaration_type -> ID .)
    DOT             reduce using rule 29 (declaration_type -> ID .)
    LBRACKET        reduce using rule 29 (declaration_type -> ID .)
    LPAREN          reduce using rule 29 (declaration_type -> ID .)
    NOT             reduce using rule 29 (declaration_type -> ID .)
    PLUS            reduce using rule 29 (declaration_type -> ID .)
    MINUS           reduce using rule 29 (declaration_type -> ID .)
    TIMES           reduce using rule 29 (declaration_type -> ID .)
    DIVIDE          reduce using rule 29 (declaration_type -> ID .)
    INTDIV          reduce using rule 29 (declaration_type -> ID .)
    EQUALS          reduce using rule 29 (declaration_type -> ID .)
    PLUSEQ          reduce using rule 29 (declaration_type -> ID .)
    MINUSEQ         reduce using rule 29 (declaration_type -> ID .)
    TIMESEQ         reduce using rule 29 (declaration_type -> ID .)
    DIVEQ           reduce using rule 29 (declaration_type -> ID .)
    NULLASSIGN      reduce using rule 29 (declaration_type -> ID .)
    QMARK           reduce using rule 29 (declaration_type -> ID .)
    SEMICOLON       reduce using rule 29 (declaration_type -> ID .)
    RBRACKET        reduce using rule 29 (declaration_type -> ID .)
    RPAREN          reduce using rule 29 (declaration_type -> ID .)
    COLON           reduce using rule 29 (declaration_type -> ID .)
    RBRACE          reduce using rule 29 (declaration_type -> ID .)
    MINSIGN         shift and go to state 27

  ! MINSIGN         [ reduce using rule 29 (declaration_type -> ID .) ]


state 12

    (17) function_declaration -> declaration_type . function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (85) variable_declaration -> declaration_type . ID
    (86) variable_declaration -> declaration_type . ID EQUALS expression
    (18) function_name -> . ID
    (19) function_name -> . MAIN

    ID              shift and go to state 29
    MAIN            shift and go to state 30

    function_name                  shift and go to state 28

state 13

    (9) import_statement -> IMPORT . STRING_LITERAL SEMICOLON

    STRING_LITERAL  shift and go to state 31


state 14

    (10) const_declaration -> CONST . declaration_type ID EQUALS expression
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 11
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    declaration_type               shift and go to state 32
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 15

    (27) declaration_type -> primitive_type .

    ID              reduce using rule 27 (declaration_type -> primitive_type .)
    MAIN            reduce using rule 27 (declaration_type -> primitive_type .)
    MAXSIGN         reduce using rule 27 (declaration_type -> primitive_type .)
    COMMA           reduce using rule 27 (declaration_type -> primitive_type .)
    AND             reduce using rule 27 (declaration_type -> primitive_type .)
    OR              reduce using rule 27 (declaration_type -> primitive_type .)
    EQEQ            reduce using rule 27 (declaration_type -> primitive_type .)
    NEQ             reduce using rule 27 (declaration_type -> primitive_type .)
    MINSIGN         reduce using rule 27 (declaration_type -> primitive_type .)
    MINSIGNEQ       reduce using rule 27 (declaration_type -> primitive_type .)
    MAXSIGNEQ       reduce using rule 27 (declaration_type -> primitive_type .)
    IS              reduce using rule 27 (declaration_type -> primitive_type .)
    PLUSPLUS        reduce using rule 27 (declaration_type -> primitive_type .)
    MINUSMINUS      reduce using rule 27 (declaration_type -> primitive_type .)
    DOT             reduce using rule 27 (declaration_type -> primitive_type .)
    LBRACKET        reduce using rule 27 (declaration_type -> primitive_type .)
    LPAREN          reduce using rule 27 (declaration_type -> primitive_type .)
    NOT             reduce using rule 27 (declaration_type -> primitive_type .)
    PLUS            reduce using rule 27 (declaration_type -> primitive_type .)
    MINUS           reduce using rule 27 (declaration_type -> primitive_type .)
    TIMES           reduce using rule 27 (declaration_type -> primitive_type .)
    DIVIDE          reduce using rule 27 (declaration_type -> primitive_type .)
    INTDIV          reduce using rule 27 (declaration_type -> primitive_type .)
    EQUALS          reduce using rule 27 (declaration_type -> primitive_type .)
    PLUSEQ          reduce using rule 27 (declaration_type -> primitive_type .)
    MINUSEQ         reduce using rule 27 (declaration_type -> primitive_type .)
    TIMESEQ         reduce using rule 27 (declaration_type -> primitive_type .)
    DIVEQ           reduce using rule 27 (declaration_type -> primitive_type .)
    NULLASSIGN      reduce using rule 27 (declaration_type -> primitive_type .)
    QMARK           reduce using rule 27 (declaration_type -> primitive_type .)
    SEMICOLON       reduce using rule 27 (declaration_type -> primitive_type .)
    RBRACKET        reduce using rule 27 (declaration_type -> primitive_type .)
    RPAREN          reduce using rule 27 (declaration_type -> primitive_type .)
    COLON           reduce using rule 27 (declaration_type -> primitive_type .)
    RBRACE          reduce using rule 27 (declaration_type -> primitive_type .)


state 16

    (28) declaration_type -> generic_type .

    ID              reduce using rule 28 (declaration_type -> generic_type .)
    MAIN            reduce using rule 28 (declaration_type -> generic_type .)
    MAXSIGN         reduce using rule 28 (declaration_type -> generic_type .)
    COMMA           reduce using rule 28 (declaration_type -> generic_type .)
    AND             reduce using rule 28 (declaration_type -> generic_type .)
    OR              reduce using rule 28 (declaration_type -> generic_type .)
    EQEQ            reduce using rule 28 (declaration_type -> generic_type .)
    NEQ             reduce using rule 28 (declaration_type -> generic_type .)
    MINSIGN         reduce using rule 28 (declaration_type -> generic_type .)
    MINSIGNEQ       reduce using rule 28 (declaration_type -> generic_type .)
    MAXSIGNEQ       reduce using rule 28 (declaration_type -> generic_type .)
    IS              reduce using rule 28 (declaration_type -> generic_type .)
    PLUSPLUS        reduce using rule 28 (declaration_type -> generic_type .)
    MINUSMINUS      reduce using rule 28 (declaration_type -> generic_type .)
    DOT             reduce using rule 28 (declaration_type -> generic_type .)
    LBRACKET        reduce using rule 28 (declaration_type -> generic_type .)
    LPAREN          reduce using rule 28 (declaration_type -> generic_type .)
    NOT             reduce using rule 28 (declaration_type -> generic_type .)
    PLUS            reduce using rule 28 (declaration_type -> generic_type .)
    MINUS           reduce using rule 28 (declaration_type -> generic_type .)
    TIMES           reduce using rule 28 (declaration_type -> generic_type .)
    DIVIDE          reduce using rule 28 (declaration_type -> generic_type .)
    INTDIV          reduce using rule 28 (declaration_type -> generic_type .)
    EQUALS          reduce using rule 28 (declaration_type -> generic_type .)
    PLUSEQ          reduce using rule 28 (declaration_type -> generic_type .)
    MINUSEQ         reduce using rule 28 (declaration_type -> generic_type .)
    TIMESEQ         reduce using rule 28 (declaration_type -> generic_type .)
    DIVEQ           reduce using rule 28 (declaration_type -> generic_type .)
    NULLASSIGN      reduce using rule 28 (declaration_type -> generic_type .)
    QMARK           reduce using rule 28 (declaration_type -> generic_type .)
    SEMICOLON       reduce using rule 28 (declaration_type -> generic_type .)
    RBRACKET        reduce using rule 28 (declaration_type -> generic_type .)
    RPAREN          reduce using rule 28 (declaration_type -> generic_type .)
    COLON           reduce using rule 28 (declaration_type -> generic_type .)
    RBRACE          reduce using rule 28 (declaration_type -> generic_type .)


state 17

    (30) primitive_type -> INT .

    ID              reduce using rule 30 (primitive_type -> INT .)
    MAIN            reduce using rule 30 (primitive_type -> INT .)
    MAXSIGN         reduce using rule 30 (primitive_type -> INT .)
    COMMA           reduce using rule 30 (primitive_type -> INT .)
    DOT             reduce using rule 30 (primitive_type -> INT .)
    AND             reduce using rule 30 (primitive_type -> INT .)
    OR              reduce using rule 30 (primitive_type -> INT .)
    EQEQ            reduce using rule 30 (primitive_type -> INT .)
    NEQ             reduce using rule 30 (primitive_type -> INT .)
    MINSIGN         reduce using rule 30 (primitive_type -> INT .)
    MINSIGNEQ       reduce using rule 30 (primitive_type -> INT .)
    MAXSIGNEQ       reduce using rule 30 (primitive_type -> INT .)
    IS              reduce using rule 30 (primitive_type -> INT .)
    PLUSPLUS        reduce using rule 30 (primitive_type -> INT .)
    MINUSMINUS      reduce using rule 30 (primitive_type -> INT .)
    LBRACKET        reduce using rule 30 (primitive_type -> INT .)
    LPAREN          reduce using rule 30 (primitive_type -> INT .)
    NOT             reduce using rule 30 (primitive_type -> INT .)
    PLUS            reduce using rule 30 (primitive_type -> INT .)
    MINUS           reduce using rule 30 (primitive_type -> INT .)
    TIMES           reduce using rule 30 (primitive_type -> INT .)
    DIVIDE          reduce using rule 30 (primitive_type -> INT .)
    INTDIV          reduce using rule 30 (primitive_type -> INT .)
    EQUALS          reduce using rule 30 (primitive_type -> INT .)
    PLUSEQ          reduce using rule 30 (primitive_type -> INT .)
    MINUSEQ         reduce using rule 30 (primitive_type -> INT .)
    TIMESEQ         reduce using rule 30 (primitive_type -> INT .)
    DIVEQ           reduce using rule 30 (primitive_type -> INT .)
    NULLASSIGN      reduce using rule 30 (primitive_type -> INT .)
    QMARK           reduce using rule 30 (primitive_type -> INT .)
    SEMICOLON       reduce using rule 30 (primitive_type -> INT .)
    RBRACKET        reduce using rule 30 (primitive_type -> INT .)
    RPAREN          reduce using rule 30 (primitive_type -> INT .)
    COLON           reduce using rule 30 (primitive_type -> INT .)
    RBRACE          reduce using rule 30 (primitive_type -> INT .)


state 18

    (31) primitive_type -> DOUBLE .

    ID              reduce using rule 31 (primitive_type -> DOUBLE .)
    MAIN            reduce using rule 31 (primitive_type -> DOUBLE .)
    MAXSIGN         reduce using rule 31 (primitive_type -> DOUBLE .)
    COMMA           reduce using rule 31 (primitive_type -> DOUBLE .)
    DOT             reduce using rule 31 (primitive_type -> DOUBLE .)
    AND             reduce using rule 31 (primitive_type -> DOUBLE .)
    OR              reduce using rule 31 (primitive_type -> DOUBLE .)
    EQEQ            reduce using rule 31 (primitive_type -> DOUBLE .)
    NEQ             reduce using rule 31 (primitive_type -> DOUBLE .)
    MINSIGN         reduce using rule 31 (primitive_type -> DOUBLE .)
    MINSIGNEQ       reduce using rule 31 (primitive_type -> DOUBLE .)
    MAXSIGNEQ       reduce using rule 31 (primitive_type -> DOUBLE .)
    IS              reduce using rule 31 (primitive_type -> DOUBLE .)
    PLUSPLUS        reduce using rule 31 (primitive_type -> DOUBLE .)
    MINUSMINUS      reduce using rule 31 (primitive_type -> DOUBLE .)
    LBRACKET        reduce using rule 31 (primitive_type -> DOUBLE .)
    LPAREN          reduce using rule 31 (primitive_type -> DOUBLE .)
    NOT             reduce using rule 31 (primitive_type -> DOUBLE .)
    PLUS            reduce using rule 31 (primitive_type -> DOUBLE .)
    MINUS           reduce using rule 31 (primitive_type -> DOUBLE .)
    TIMES           reduce using rule 31 (primitive_type -> DOUBLE .)
    DIVIDE          reduce using rule 31 (primitive_type -> DOUBLE .)
    INTDIV          reduce using rule 31 (primitive_type -> DOUBLE .)
    EQUALS          reduce using rule 31 (primitive_type -> DOUBLE .)
    PLUSEQ          reduce using rule 31 (primitive_type -> DOUBLE .)
    MINUSEQ         reduce using rule 31 (primitive_type -> DOUBLE .)
    TIMESEQ         reduce using rule 31 (primitive_type -> DOUBLE .)
    DIVEQ           reduce using rule 31 (primitive_type -> DOUBLE .)
    NULLASSIGN      reduce using rule 31 (primitive_type -> DOUBLE .)
    QMARK           reduce using rule 31 (primitive_type -> DOUBLE .)
    SEMICOLON       reduce using rule 31 (primitive_type -> DOUBLE .)
    RBRACKET        reduce using rule 31 (primitive_type -> DOUBLE .)
    RPAREN          reduce using rule 31 (primitive_type -> DOUBLE .)
    COLON           reduce using rule 31 (primitive_type -> DOUBLE .)
    RBRACE          reduce using rule 31 (primitive_type -> DOUBLE .)


state 19

    (32) primitive_type -> STRING .

    ID              reduce using rule 32 (primitive_type -> STRING .)
    MAIN            reduce using rule 32 (primitive_type -> STRING .)
    MAXSIGN         reduce using rule 32 (primitive_type -> STRING .)
    COMMA           reduce using rule 32 (primitive_type -> STRING .)
    DOT             reduce using rule 32 (primitive_type -> STRING .)
    AND             reduce using rule 32 (primitive_type -> STRING .)
    OR              reduce using rule 32 (primitive_type -> STRING .)
    EQEQ            reduce using rule 32 (primitive_type -> STRING .)
    NEQ             reduce using rule 32 (primitive_type -> STRING .)
    MINSIGN         reduce using rule 32 (primitive_type -> STRING .)
    MINSIGNEQ       reduce using rule 32 (primitive_type -> STRING .)
    MAXSIGNEQ       reduce using rule 32 (primitive_type -> STRING .)
    IS              reduce using rule 32 (primitive_type -> STRING .)
    PLUSPLUS        reduce using rule 32 (primitive_type -> STRING .)
    MINUSMINUS      reduce using rule 32 (primitive_type -> STRING .)
    LBRACKET        reduce using rule 32 (primitive_type -> STRING .)
    LPAREN          reduce using rule 32 (primitive_type -> STRING .)
    NOT             reduce using rule 32 (primitive_type -> STRING .)
    PLUS            reduce using rule 32 (primitive_type -> STRING .)
    MINUS           reduce using rule 32 (primitive_type -> STRING .)
    TIMES           reduce using rule 32 (primitive_type -> STRING .)
    DIVIDE          reduce using rule 32 (primitive_type -> STRING .)
    INTDIV          reduce using rule 32 (primitive_type -> STRING .)
    EQUALS          reduce using rule 32 (primitive_type -> STRING .)
    PLUSEQ          reduce using rule 32 (primitive_type -> STRING .)
    MINUSEQ         reduce using rule 32 (primitive_type -> STRING .)
    TIMESEQ         reduce using rule 32 (primitive_type -> STRING .)
    DIVEQ           reduce using rule 32 (primitive_type -> STRING .)
    NULLASSIGN      reduce using rule 32 (primitive_type -> STRING .)
    QMARK           reduce using rule 32 (primitive_type -> STRING .)
    SEMICOLON       reduce using rule 32 (primitive_type -> STRING .)
    RBRACKET        reduce using rule 32 (primitive_type -> STRING .)
    RPAREN          reduce using rule 32 (primitive_type -> STRING .)
    COLON           reduce using rule 32 (primitive_type -> STRING .)
    RBRACE          reduce using rule 32 (primitive_type -> STRING .)


state 20

    (33) primitive_type -> BOOL .

    ID              reduce using rule 33 (primitive_type -> BOOL .)
    MAIN            reduce using rule 33 (primitive_type -> BOOL .)
    MAXSIGN         reduce using rule 33 (primitive_type -> BOOL .)
    COMMA           reduce using rule 33 (primitive_type -> BOOL .)
    DOT             reduce using rule 33 (primitive_type -> BOOL .)
    AND             reduce using rule 33 (primitive_type -> BOOL .)
    OR              reduce using rule 33 (primitive_type -> BOOL .)
    EQEQ            reduce using rule 33 (primitive_type -> BOOL .)
    NEQ             reduce using rule 33 (primitive_type -> BOOL .)
    MINSIGN         reduce using rule 33 (primitive_type -> BOOL .)
    MINSIGNEQ       reduce using rule 33 (primitive_type -> BOOL .)
    MAXSIGNEQ       reduce using rule 33 (primitive_type -> BOOL .)
    IS              reduce using rule 33 (primitive_type -> BOOL .)
    PLUSPLUS        reduce using rule 33 (primitive_type -> BOOL .)
    MINUSMINUS      reduce using rule 33 (primitive_type -> BOOL .)
    LBRACKET        reduce using rule 33 (primitive_type -> BOOL .)
    LPAREN          reduce using rule 33 (primitive_type -> BOOL .)
    NOT             reduce using rule 33 (primitive_type -> BOOL .)
    PLUS            reduce using rule 33 (primitive_type -> BOOL .)
    MINUS           reduce using rule 33 (primitive_type -> BOOL .)
    TIMES           reduce using rule 33 (primitive_type -> BOOL .)
    DIVIDE          reduce using rule 33 (primitive_type -> BOOL .)
    INTDIV          reduce using rule 33 (primitive_type -> BOOL .)
    EQUALS          reduce using rule 33 (primitive_type -> BOOL .)
    PLUSEQ          reduce using rule 33 (primitive_type -> BOOL .)
    MINUSEQ         reduce using rule 33 (primitive_type -> BOOL .)
    TIMESEQ         reduce using rule 33 (primitive_type -> BOOL .)
    DIVEQ           reduce using rule 33 (primitive_type -> BOOL .)
    NULLASSIGN      reduce using rule 33 (primitive_type -> BOOL .)
    QMARK           reduce using rule 33 (primitive_type -> BOOL .)
    SEMICOLON       reduce using rule 33 (primitive_type -> BOOL .)
    RBRACKET        reduce using rule 33 (primitive_type -> BOOL .)
    RPAREN          reduce using rule 33 (primitive_type -> BOOL .)
    COLON           reduce using rule 33 (primitive_type -> BOOL .)
    RBRACE          reduce using rule 33 (primitive_type -> BOOL .)


state 21

    (34) primitive_type -> VOID .

    ID              reduce using rule 34 (primitive_type -> VOID .)
    MAIN            reduce using rule 34 (primitive_type -> VOID .)
    MAXSIGN         reduce using rule 34 (primitive_type -> VOID .)
    COMMA           reduce using rule 34 (primitive_type -> VOID .)
    DOT             reduce using rule 34 (primitive_type -> VOID .)
    AND             reduce using rule 34 (primitive_type -> VOID .)
    OR              reduce using rule 34 (primitive_type -> VOID .)
    EQEQ            reduce using rule 34 (primitive_type -> VOID .)
    NEQ             reduce using rule 34 (primitive_type -> VOID .)
    MINSIGN         reduce using rule 34 (primitive_type -> VOID .)
    MINSIGNEQ       reduce using rule 34 (primitive_type -> VOID .)
    MAXSIGNEQ       reduce using rule 34 (primitive_type -> VOID .)
    IS              reduce using rule 34 (primitive_type -> VOID .)
    PLUSPLUS        reduce using rule 34 (primitive_type -> VOID .)
    MINUSMINUS      reduce using rule 34 (primitive_type -> VOID .)
    LBRACKET        reduce using rule 34 (primitive_type -> VOID .)
    LPAREN          reduce using rule 34 (primitive_type -> VOID .)
    NOT             reduce using rule 34 (primitive_type -> VOID .)
    PLUS            reduce using rule 34 (primitive_type -> VOID .)
    MINUS           reduce using rule 34 (primitive_type -> VOID .)
    TIMES           reduce using rule 34 (primitive_type -> VOID .)
    DIVIDE          reduce using rule 34 (primitive_type -> VOID .)
    INTDIV          reduce using rule 34 (primitive_type -> VOID .)
    EQUALS          reduce using rule 34 (primitive_type -> VOID .)
    PLUSEQ          reduce using rule 34 (primitive_type -> VOID .)
    MINUSEQ         reduce using rule 34 (primitive_type -> VOID .)
    TIMESEQ         reduce using rule 34 (primitive_type -> VOID .)
    DIVEQ           reduce using rule 34 (primitive_type -> VOID .)
    NULLASSIGN      reduce using rule 34 (primitive_type -> VOID .)
    QMARK           reduce using rule 34 (primitive_type -> VOID .)
    SEMICOLON       reduce using rule 34 (primitive_type -> VOID .)
    RBRACKET        reduce using rule 34 (primitive_type -> VOID .)
    RPAREN          reduce using rule 34 (primitive_type -> VOID .)
    COLON           reduce using rule 34 (primitive_type -> VOID .)
    RBRACE          reduce using rule 34 (primitive_type -> VOID .)


state 22

    (35) primitive_type -> VAR .

    ID              reduce using rule 35 (primitive_type -> VAR .)
    MAIN            reduce using rule 35 (primitive_type -> VAR .)
    MAXSIGN         reduce using rule 35 (primitive_type -> VAR .)
    COMMA           reduce using rule 35 (primitive_type -> VAR .)
    DOT             reduce using rule 35 (primitive_type -> VAR .)
    AND             reduce using rule 35 (primitive_type -> VAR .)
    OR              reduce using rule 35 (primitive_type -> VAR .)
    EQEQ            reduce using rule 35 (primitive_type -> VAR .)
    NEQ             reduce using rule 35 (primitive_type -> VAR .)
    MINSIGN         reduce using rule 35 (primitive_type -> VAR .)
    MINSIGNEQ       reduce using rule 35 (primitive_type -> VAR .)
    MAXSIGNEQ       reduce using rule 35 (primitive_type -> VAR .)
    IS              reduce using rule 35 (primitive_type -> VAR .)
    PLUSPLUS        reduce using rule 35 (primitive_type -> VAR .)
    MINUSMINUS      reduce using rule 35 (primitive_type -> VAR .)
    LBRACKET        reduce using rule 35 (primitive_type -> VAR .)
    LPAREN          reduce using rule 35 (primitive_type -> VAR .)
    NOT             reduce using rule 35 (primitive_type -> VAR .)
    PLUS            reduce using rule 35 (primitive_type -> VAR .)
    MINUS           reduce using rule 35 (primitive_type -> VAR .)
    TIMES           reduce using rule 35 (primitive_type -> VAR .)
    DIVIDE          reduce using rule 35 (primitive_type -> VAR .)
    INTDIV          reduce using rule 35 (primitive_type -> VAR .)
    EQUALS          reduce using rule 35 (primitive_type -> VAR .)
    PLUSEQ          reduce using rule 35 (primitive_type -> VAR .)
    MINUSEQ         reduce using rule 35 (primitive_type -> VAR .)
    TIMESEQ         reduce using rule 35 (primitive_type -> VAR .)
    DIVEQ           reduce using rule 35 (primitive_type -> VAR .)
    NULLASSIGN      reduce using rule 35 (primitive_type -> VAR .)
    QMARK           reduce using rule 35 (primitive_type -> VAR .)
    SEMICOLON       reduce using rule 35 (primitive_type -> VAR .)
    RBRACKET        reduce using rule 35 (primitive_type -> VAR .)
    RPAREN          reduce using rule 35 (primitive_type -> VAR .)
    COLON           reduce using rule 35 (primitive_type -> VAR .)
    RBRACE          reduce using rule 35 (primitive_type -> VAR .)


state 23

    (36) primitive_type -> DYNAMIC .

    ID              reduce using rule 36 (primitive_type -> DYNAMIC .)
    MAIN            reduce using rule 36 (primitive_type -> DYNAMIC .)
    MAXSIGN         reduce using rule 36 (primitive_type -> DYNAMIC .)
    COMMA           reduce using rule 36 (primitive_type -> DYNAMIC .)
    DOT             reduce using rule 36 (primitive_type -> DYNAMIC .)
    AND             reduce using rule 36 (primitive_type -> DYNAMIC .)
    OR              reduce using rule 36 (primitive_type -> DYNAMIC .)
    EQEQ            reduce using rule 36 (primitive_type -> DYNAMIC .)
    NEQ             reduce using rule 36 (primitive_type -> DYNAMIC .)
    MINSIGN         reduce using rule 36 (primitive_type -> DYNAMIC .)
    MINSIGNEQ       reduce using rule 36 (primitive_type -> DYNAMIC .)
    MAXSIGNEQ       reduce using rule 36 (primitive_type -> DYNAMIC .)
    IS              reduce using rule 36 (primitive_type -> DYNAMIC .)
    PLUSPLUS        reduce using rule 36 (primitive_type -> DYNAMIC .)
    MINUSMINUS      reduce using rule 36 (primitive_type -> DYNAMIC .)
    LBRACKET        reduce using rule 36 (primitive_type -> DYNAMIC .)
    LPAREN          reduce using rule 36 (primitive_type -> DYNAMIC .)
    NOT             reduce using rule 36 (primitive_type -> DYNAMIC .)
    PLUS            reduce using rule 36 (primitive_type -> DYNAMIC .)
    MINUS           reduce using rule 36 (primitive_type -> DYNAMIC .)
    TIMES           reduce using rule 36 (primitive_type -> DYNAMIC .)
    DIVIDE          reduce using rule 36 (primitive_type -> DYNAMIC .)
    INTDIV          reduce using rule 36 (primitive_type -> DYNAMIC .)
    EQUALS          reduce using rule 36 (primitive_type -> DYNAMIC .)
    PLUSEQ          reduce using rule 36 (primitive_type -> DYNAMIC .)
    MINUSEQ         reduce using rule 36 (primitive_type -> DYNAMIC .)
    TIMESEQ         reduce using rule 36 (primitive_type -> DYNAMIC .)
    DIVEQ           reduce using rule 36 (primitive_type -> DYNAMIC .)
    NULLASSIGN      reduce using rule 36 (primitive_type -> DYNAMIC .)
    QMARK           reduce using rule 36 (primitive_type -> DYNAMIC .)
    SEMICOLON       reduce using rule 36 (primitive_type -> DYNAMIC .)
    RBRACKET        reduce using rule 36 (primitive_type -> DYNAMIC .)
    RPAREN          reduce using rule 36 (primitive_type -> DYNAMIC .)
    COLON           reduce using rule 36 (primitive_type -> DYNAMIC .)
    RBRACE          reduce using rule 36 (primitive_type -> DYNAMIC .)


state 24

    (6) declaration -> variable_declaration SEMICOLON .

    CLASS           reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    IMPORT          reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    CONST           reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    ID              reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    INT             reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    DOUBLE          reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    STRING          reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    BOOL            reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    VOID            reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    VAR             reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    DYNAMIC         reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    $end            reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)


state 25

    (8) declaration -> const_declaration SEMICOLON .

    CLASS           reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    IMPORT          reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    CONST           reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    ID              reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    INT             reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    DOUBLE          reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    STRING          reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    BOOL            reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    VOID            reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    VAR             reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    DYNAMIC         reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    $end            reduce using rule 8 (declaration -> const_declaration SEMICOLON .)


state 26

    (11) class -> CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 33


state 27

    (37) generic_type -> ID MINSIGN . type_list MAXSIGN
    (38) type_list -> . type_list COMMA declaration_type
    (39) type_list -> . declaration_type
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 11
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    type_list                      shift and go to state 34
    declaration_type               shift and go to state 35
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 28

    (17) function_declaration -> declaration_type function_name . LPAREN parameters RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 36


state 29

    (85) variable_declaration -> declaration_type ID .
    (86) variable_declaration -> declaration_type ID . EQUALS expression
    (18) function_name -> ID .

    SEMICOLON       reduce using rule 85 (variable_declaration -> declaration_type ID .)
    EQUALS          shift and go to state 37
    LPAREN          reduce using rule 18 (function_name -> ID .)


state 30

    (19) function_name -> MAIN .

    LPAREN          reduce using rule 19 (function_name -> MAIN .)


state 31

    (9) import_statement -> IMPORT STRING_LITERAL . SEMICOLON

    SEMICOLON       shift and go to state 38


state 32

    (10) const_declaration -> CONST declaration_type . ID EQUALS expression

    ID              shift and go to state 39


state 33

    (11) class -> CLASS ID LBRACE . class_body RBRACE
    (12) class_body -> . class_member class_body
    (13) class_body -> . empty
    (14) class_member -> . class_property
    (15) class_member -> . function_declaration
    (16) class_member -> . constructor_declaration
    (126) empty -> .
    (20) class_property -> . declaration_type ID SEMICOLON
    (17) function_declaration -> . declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (21) constructor_declaration -> . ID LPAREN constructor_params RPAREN SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    RBRACE          reduce using rule 126 (empty -> .)
    ID              shift and go to state 40
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    class_body                     shift and go to state 41
    class_member                   shift and go to state 42
    empty                          shift and go to state 43
    class_property                 shift and go to state 44
    function_declaration           shift and go to state 45
    constructor_declaration        shift and go to state 46
    declaration_type               shift and go to state 47
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 34

    (37) generic_type -> ID MINSIGN type_list . MAXSIGN
    (38) type_list -> type_list . COMMA declaration_type

    MAXSIGN         shift and go to state 48
    COMMA           shift and go to state 49


state 35

    (39) type_list -> declaration_type .

    MAXSIGN         reduce using rule 39 (type_list -> declaration_type .)
    COMMA           reduce using rule 39 (type_list -> declaration_type .)


state 36

    (17) function_declaration -> declaration_type function_name LPAREN . parameters RPAREN LBRACE body RBRACE
    (95) parameters -> . parameters COMMA declaration_type ID
    (96) parameters -> . declaration_type ID
    (97) parameters -> . empty
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (126) empty -> .
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 11
    RPAREN          reduce using rule 126 (empty -> .)
    COMMA           reduce using rule 126 (empty -> .)
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    declaration_type               shift and go to state 50
    parameters                     shift and go to state 51
    empty                          shift and go to state 52
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 37

    (86) variable_declaration -> declaration_type ID EQUALS . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 54
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 38

    (9) import_statement -> IMPORT STRING_LITERAL SEMICOLON .

    CLASS           reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    IMPORT          reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    CONST           reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    ID              reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    INT             reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    DOUBLE          reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    STRING          reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    BOOL            reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    VOID            reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    VAR             reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    DYNAMIC         reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    $end            reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)


state 39

    (10) const_declaration -> CONST declaration_type ID . EQUALS expression

    EQUALS          shift and go to state 65


state 40

    (21) constructor_declaration -> ID . LPAREN constructor_params RPAREN SEMICOLON
    (29) declaration_type -> ID .
    (37) generic_type -> ID . MINSIGN type_list MAXSIGN

    LPAREN          shift and go to state 66
    ID              reduce using rule 29 (declaration_type -> ID .)
    MAIN            reduce using rule 29 (declaration_type -> ID .)
    MINSIGN         shift and go to state 27


state 41

    (11) class -> CLASS ID LBRACE class_body . RBRACE

    RBRACE          shift and go to state 67


state 42

    (12) class_body -> class_member . class_body
    (12) class_body -> . class_member class_body
    (13) class_body -> . empty
    (14) class_member -> . class_property
    (15) class_member -> . function_declaration
    (16) class_member -> . constructor_declaration
    (126) empty -> .
    (20) class_property -> . declaration_type ID SEMICOLON
    (17) function_declaration -> . declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (21) constructor_declaration -> . ID LPAREN constructor_params RPAREN SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    RBRACE          reduce using rule 126 (empty -> .)
    ID              shift and go to state 40
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    class_member                   shift and go to state 42
    class_body                     shift and go to state 68
    empty                          shift and go to state 43
    class_property                 shift and go to state 44
    function_declaration           shift and go to state 45
    constructor_declaration        shift and go to state 46
    declaration_type               shift and go to state 47
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 43

    (13) class_body -> empty .

    RBRACE          reduce using rule 13 (class_body -> empty .)


state 44

    (14) class_member -> class_property .

    ID              reduce using rule 14 (class_member -> class_property .)
    INT             reduce using rule 14 (class_member -> class_property .)
    DOUBLE          reduce using rule 14 (class_member -> class_property .)
    STRING          reduce using rule 14 (class_member -> class_property .)
    BOOL            reduce using rule 14 (class_member -> class_property .)
    VOID            reduce using rule 14 (class_member -> class_property .)
    VAR             reduce using rule 14 (class_member -> class_property .)
    DYNAMIC         reduce using rule 14 (class_member -> class_property .)
    RBRACE          reduce using rule 14 (class_member -> class_property .)


state 45

    (15) class_member -> function_declaration .

    ID              reduce using rule 15 (class_member -> function_declaration .)
    INT             reduce using rule 15 (class_member -> function_declaration .)
    DOUBLE          reduce using rule 15 (class_member -> function_declaration .)
    STRING          reduce using rule 15 (class_member -> function_declaration .)
    BOOL            reduce using rule 15 (class_member -> function_declaration .)
    VOID            reduce using rule 15 (class_member -> function_declaration .)
    VAR             reduce using rule 15 (class_member -> function_declaration .)
    DYNAMIC         reduce using rule 15 (class_member -> function_declaration .)
    RBRACE          reduce using rule 15 (class_member -> function_declaration .)


state 46

    (16) class_member -> constructor_declaration .

    ID              reduce using rule 16 (class_member -> constructor_declaration .)
    INT             reduce using rule 16 (class_member -> constructor_declaration .)
    DOUBLE          reduce using rule 16 (class_member -> constructor_declaration .)
    STRING          reduce using rule 16 (class_member -> constructor_declaration .)
    BOOL            reduce using rule 16 (class_member -> constructor_declaration .)
    VOID            reduce using rule 16 (class_member -> constructor_declaration .)
    VAR             reduce using rule 16 (class_member -> constructor_declaration .)
    DYNAMIC         reduce using rule 16 (class_member -> constructor_declaration .)
    RBRACE          reduce using rule 16 (class_member -> constructor_declaration .)


state 47

    (20) class_property -> declaration_type . ID SEMICOLON
    (17) function_declaration -> declaration_type . function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (18) function_name -> . ID
    (19) function_name -> . MAIN

    ID              shift and go to state 69
    MAIN            shift and go to state 30

    function_name                  shift and go to state 28

state 48

    (37) generic_type -> ID MINSIGN type_list MAXSIGN .

    ID              reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MAIN            reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MAXSIGN         reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    COMMA           reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    AND             reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    OR              reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    EQEQ            reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    NEQ             reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINSIGN         reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINSIGNEQ       reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MAXSIGNEQ       reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    IS              reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    PLUSPLUS        reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINUSMINUS      reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    DOT             reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    LBRACKET        reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    LPAREN          reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    NOT             reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    PLUS            reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINUS           reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    TIMES           reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    DIVIDE          reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    INTDIV          reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    EQUALS          reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    PLUSEQ          reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINUSEQ         reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    TIMESEQ         reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    DIVEQ           reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    NULLASSIGN      reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    QMARK           reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    SEMICOLON       reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    RBRACKET        reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    RPAREN          reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    COLON           reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    RBRACE          reduce using rule 37 (generic_type -> ID MINSIGN type_list MAXSIGN .)


state 49

    (38) type_list -> type_list COMMA . declaration_type
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 11
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    declaration_type               shift and go to state 70
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 50

    (96) parameters -> declaration_type . ID

    ID              shift and go to state 71


state 51

    (17) function_declaration -> declaration_type function_name LPAREN parameters . RPAREN LBRACE body RBRACE
    (95) parameters -> parameters . COMMA declaration_type ID

    RPAREN          shift and go to state 72
    COMMA           shift and go to state 73


state 52

    (97) parameters -> empty .

    RPAREN          reduce using rule 97 (parameters -> empty .)
    COMMA           reduce using rule 97 (parameters -> empty .)


state 53

    (70) factor -> ID .

    AND             reduce using rule 70 (factor -> ID .)
    OR              reduce using rule 70 (factor -> ID .)
    EQEQ            reduce using rule 70 (factor -> ID .)
    NEQ             reduce using rule 70 (factor -> ID .)
    MINSIGN         reduce using rule 70 (factor -> ID .)
    MAXSIGN         reduce using rule 70 (factor -> ID .)
    MINSIGNEQ       reduce using rule 70 (factor -> ID .)
    MAXSIGNEQ       reduce using rule 70 (factor -> ID .)
    IS              reduce using rule 70 (factor -> ID .)
    PLUSPLUS        reduce using rule 70 (factor -> ID .)
    MINUSMINUS      reduce using rule 70 (factor -> ID .)
    DOT             reduce using rule 70 (factor -> ID .)
    LBRACKET        reduce using rule 70 (factor -> ID .)
    LPAREN          reduce using rule 70 (factor -> ID .)
    NOT             reduce using rule 70 (factor -> ID .)
    PLUS            reduce using rule 70 (factor -> ID .)
    MINUS           reduce using rule 70 (factor -> ID .)
    TIMES           reduce using rule 70 (factor -> ID .)
    DIVIDE          reduce using rule 70 (factor -> ID .)
    INTDIV          reduce using rule 70 (factor -> ID .)
    EQUALS          reduce using rule 70 (factor -> ID .)
    PLUSEQ          reduce using rule 70 (factor -> ID .)
    MINUSEQ         reduce using rule 70 (factor -> ID .)
    TIMESEQ         reduce using rule 70 (factor -> ID .)
    DIVEQ           reduce using rule 70 (factor -> ID .)
    NULLASSIGN      reduce using rule 70 (factor -> ID .)
    QMARK           reduce using rule 70 (factor -> ID .)
    SEMICOLON       reduce using rule 70 (factor -> ID .)
    COMMA           reduce using rule 70 (factor -> ID .)
    RBRACKET        reduce using rule 70 (factor -> ID .)
    RPAREN          reduce using rule 70 (factor -> ID .)
    COLON           reduce using rule 70 (factor -> ID .)
    RBRACE          reduce using rule 70 (factor -> ID .)


state 54

    (86) variable_declaration -> declaration_type ID EQUALS expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 86 (variable_declaration -> declaration_type ID EQUALS expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 55

    (50) expression -> NOT . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 101
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 56

    (51) expression -> MINUS . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 102
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 57

    (110) expression -> LBRACKET . expression_list RBRACKET
    (123) expression_list -> . expression COMMA expression_list
    (124) expression_list -> . expression
    (125) expression_list -> . empty
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (126) empty -> .
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    RBRACKET        reduce using rule 126 (empty -> .)
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression_list                shift and go to state 103
    expression                     shift and go to state 104
    empty                          shift and go to state 105
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 58

    (71) factor -> LPAREN . expression RPAREN
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 106
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 59

    (65) expression -> term .

    AND             reduce using rule 65 (expression -> term .)
    OR              reduce using rule 65 (expression -> term .)
    EQEQ            reduce using rule 65 (expression -> term .)
    NEQ             reduce using rule 65 (expression -> term .)
    MINSIGN         reduce using rule 65 (expression -> term .)
    MAXSIGN         reduce using rule 65 (expression -> term .)
    MINSIGNEQ       reduce using rule 65 (expression -> term .)
    MAXSIGNEQ       reduce using rule 65 (expression -> term .)
    IS              reduce using rule 65 (expression -> term .)
    PLUSPLUS        reduce using rule 65 (expression -> term .)
    MINUSMINUS      reduce using rule 65 (expression -> term .)
    DOT             reduce using rule 65 (expression -> term .)
    LBRACKET        reduce using rule 65 (expression -> term .)
    LPAREN          reduce using rule 65 (expression -> term .)
    NOT             reduce using rule 65 (expression -> term .)
    PLUS            reduce using rule 65 (expression -> term .)
    MINUS           reduce using rule 65 (expression -> term .)
    TIMES           reduce using rule 65 (expression -> term .)
    DIVIDE          reduce using rule 65 (expression -> term .)
    INTDIV          reduce using rule 65 (expression -> term .)
    EQUALS          reduce using rule 65 (expression -> term .)
    PLUSEQ          reduce using rule 65 (expression -> term .)
    MINUSEQ         reduce using rule 65 (expression -> term .)
    TIMESEQ         reduce using rule 65 (expression -> term .)
    DIVEQ           reduce using rule 65 (expression -> term .)
    NULLASSIGN      reduce using rule 65 (expression -> term .)
    QMARK           reduce using rule 65 (expression -> term .)
    SEMICOLON       reduce using rule 65 (expression -> term .)
    COMMA           reduce using rule 65 (expression -> term .)
    RBRACKET        reduce using rule 65 (expression -> term .)
    RPAREN          reduce using rule 65 (expression -> term .)
    COLON           reduce using rule 65 (expression -> term .)
    RBRACE          reduce using rule 65 (expression -> term .)


state 60

    (111) expression -> LBRACE . set_or_map_contents RBRACE
    (112) set_or_map_contents -> . expression set_or_map_tail
    (113) set_or_map_contents -> . empty
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (126) empty -> .
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    RBRACE          reduce using rule 126 (empty -> .)
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    set_or_map_contents            shift and go to state 107
    expression                     shift and go to state 108
    empty                          shift and go to state 109
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 61

    (66) term -> factor .

    AND             reduce using rule 66 (term -> factor .)
    OR              reduce using rule 66 (term -> factor .)
    EQEQ            reduce using rule 66 (term -> factor .)
    NEQ             reduce using rule 66 (term -> factor .)
    MINSIGN         reduce using rule 66 (term -> factor .)
    MAXSIGN         reduce using rule 66 (term -> factor .)
    MINSIGNEQ       reduce using rule 66 (term -> factor .)
    MAXSIGNEQ       reduce using rule 66 (term -> factor .)
    IS              reduce using rule 66 (term -> factor .)
    PLUSPLUS        reduce using rule 66 (term -> factor .)
    MINUSMINUS      reduce using rule 66 (term -> factor .)
    DOT             reduce using rule 66 (term -> factor .)
    LBRACKET        reduce using rule 66 (term -> factor .)
    LPAREN          reduce using rule 66 (term -> factor .)
    NOT             reduce using rule 66 (term -> factor .)
    PLUS            reduce using rule 66 (term -> factor .)
    MINUS           reduce using rule 66 (term -> factor .)
    TIMES           reduce using rule 66 (term -> factor .)
    DIVIDE          reduce using rule 66 (term -> factor .)
    INTDIV          reduce using rule 66 (term -> factor .)
    EQUALS          reduce using rule 66 (term -> factor .)
    PLUSEQ          reduce using rule 66 (term -> factor .)
    MINUSEQ         reduce using rule 66 (term -> factor .)
    TIMESEQ         reduce using rule 66 (term -> factor .)
    DIVEQ           reduce using rule 66 (term -> factor .)
    NULLASSIGN      reduce using rule 66 (term -> factor .)
    QMARK           reduce using rule 66 (term -> factor .)
    SEMICOLON       reduce using rule 66 (term -> factor .)
    COMMA           reduce using rule 66 (term -> factor .)
    RBRACKET        reduce using rule 66 (term -> factor .)
    RPAREN          reduce using rule 66 (term -> factor .)
    COLON           reduce using rule 66 (term -> factor .)
    RBRACE          reduce using rule 66 (term -> factor .)


state 62

    (67) factor -> primitive_type . DOT ID LPAREN arguments RPAREN

    DOT             shift and go to state 110


state 63

    (68) factor -> NUMBER .

    AND             reduce using rule 68 (factor -> NUMBER .)
    OR              reduce using rule 68 (factor -> NUMBER .)
    EQEQ            reduce using rule 68 (factor -> NUMBER .)
    NEQ             reduce using rule 68 (factor -> NUMBER .)
    MINSIGN         reduce using rule 68 (factor -> NUMBER .)
    MAXSIGN         reduce using rule 68 (factor -> NUMBER .)
    MINSIGNEQ       reduce using rule 68 (factor -> NUMBER .)
    MAXSIGNEQ       reduce using rule 68 (factor -> NUMBER .)
    IS              reduce using rule 68 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 68 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 68 (factor -> NUMBER .)
    DOT             reduce using rule 68 (factor -> NUMBER .)
    LBRACKET        reduce using rule 68 (factor -> NUMBER .)
    LPAREN          reduce using rule 68 (factor -> NUMBER .)
    NOT             reduce using rule 68 (factor -> NUMBER .)
    PLUS            reduce using rule 68 (factor -> NUMBER .)
    MINUS           reduce using rule 68 (factor -> NUMBER .)
    TIMES           reduce using rule 68 (factor -> NUMBER .)
    DIVIDE          reduce using rule 68 (factor -> NUMBER .)
    INTDIV          reduce using rule 68 (factor -> NUMBER .)
    EQUALS          reduce using rule 68 (factor -> NUMBER .)
    PLUSEQ          reduce using rule 68 (factor -> NUMBER .)
    MINUSEQ         reduce using rule 68 (factor -> NUMBER .)
    TIMESEQ         reduce using rule 68 (factor -> NUMBER .)
    DIVEQ           reduce using rule 68 (factor -> NUMBER .)
    NULLASSIGN      reduce using rule 68 (factor -> NUMBER .)
    QMARK           reduce using rule 68 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 68 (factor -> NUMBER .)
    COMMA           reduce using rule 68 (factor -> NUMBER .)
    RBRACKET        reduce using rule 68 (factor -> NUMBER .)
    RPAREN          reduce using rule 68 (factor -> NUMBER .)
    COLON           reduce using rule 68 (factor -> NUMBER .)
    RBRACE          reduce using rule 68 (factor -> NUMBER .)


state 64

    (69) factor -> STRING_LITERAL .

    AND             reduce using rule 69 (factor -> STRING_LITERAL .)
    OR              reduce using rule 69 (factor -> STRING_LITERAL .)
    EQEQ            reduce using rule 69 (factor -> STRING_LITERAL .)
    NEQ             reduce using rule 69 (factor -> STRING_LITERAL .)
    MINSIGN         reduce using rule 69 (factor -> STRING_LITERAL .)
    MAXSIGN         reduce using rule 69 (factor -> STRING_LITERAL .)
    MINSIGNEQ       reduce using rule 69 (factor -> STRING_LITERAL .)
    MAXSIGNEQ       reduce using rule 69 (factor -> STRING_LITERAL .)
    IS              reduce using rule 69 (factor -> STRING_LITERAL .)
    PLUSPLUS        reduce using rule 69 (factor -> STRING_LITERAL .)
    MINUSMINUS      reduce using rule 69 (factor -> STRING_LITERAL .)
    DOT             reduce using rule 69 (factor -> STRING_LITERAL .)
    LBRACKET        reduce using rule 69 (factor -> STRING_LITERAL .)
    LPAREN          reduce using rule 69 (factor -> STRING_LITERAL .)
    NOT             reduce using rule 69 (factor -> STRING_LITERAL .)
    PLUS            reduce using rule 69 (factor -> STRING_LITERAL .)
    MINUS           reduce using rule 69 (factor -> STRING_LITERAL .)
    TIMES           reduce using rule 69 (factor -> STRING_LITERAL .)
    DIVIDE          reduce using rule 69 (factor -> STRING_LITERAL .)
    INTDIV          reduce using rule 69 (factor -> STRING_LITERAL .)
    EQUALS          reduce using rule 69 (factor -> STRING_LITERAL .)
    PLUSEQ          reduce using rule 69 (factor -> STRING_LITERAL .)
    MINUSEQ         reduce using rule 69 (factor -> STRING_LITERAL .)
    TIMESEQ         reduce using rule 69 (factor -> STRING_LITERAL .)
    DIVEQ           reduce using rule 69 (factor -> STRING_LITERAL .)
    NULLASSIGN      reduce using rule 69 (factor -> STRING_LITERAL .)
    QMARK           reduce using rule 69 (factor -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 69 (factor -> STRING_LITERAL .)
    COMMA           reduce using rule 69 (factor -> STRING_LITERAL .)
    RBRACKET        reduce using rule 69 (factor -> STRING_LITERAL .)
    RPAREN          reduce using rule 69 (factor -> STRING_LITERAL .)
    COLON           reduce using rule 69 (factor -> STRING_LITERAL .)
    RBRACE          reduce using rule 69 (factor -> STRING_LITERAL .)


state 65

    (10) const_declaration -> CONST declaration_type ID EQUALS . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 111
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 66

    (21) constructor_declaration -> ID LPAREN . constructor_params RPAREN SEMICOLON
    (22) constructor_params -> . constructor_param_list
    (23) constructor_params -> . empty
    (24) constructor_param_list -> . constructor_param_list COMMA constructor_param
    (25) constructor_param_list -> . constructor_param
    (126) empty -> .
    (26) constructor_param -> . THIS DOT ID

    RPAREN          reduce using rule 126 (empty -> .)
    THIS            shift and go to state 116

    constructor_params             shift and go to state 112
    constructor_param_list         shift and go to state 113
    empty                          shift and go to state 114
    constructor_param              shift and go to state 115

state 67

    (11) class -> CLASS ID LBRACE class_body RBRACE .

    CLASS           reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    IMPORT          reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    CONST           reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    ID              reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    INT             reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    DOUBLE          reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    STRING          reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    BOOL            reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    VOID            reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    VAR             reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    DYNAMIC         reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)


state 68

    (12) class_body -> class_member class_body .

    RBRACE          reduce using rule 12 (class_body -> class_member class_body .)


state 69

    (20) class_property -> declaration_type ID . SEMICOLON
    (18) function_name -> ID .

    SEMICOLON       shift and go to state 117
    LPAREN          reduce using rule 18 (function_name -> ID .)


state 70

    (38) type_list -> type_list COMMA declaration_type .

    MAXSIGN         reduce using rule 38 (type_list -> type_list COMMA declaration_type .)
    COMMA           reduce using rule 38 (type_list -> type_list COMMA declaration_type .)


state 71

    (96) parameters -> declaration_type ID .

    RPAREN          reduce using rule 96 (parameters -> declaration_type ID .)
    COMMA           reduce using rule 96 (parameters -> declaration_type ID .)


state 72

    (17) function_declaration -> declaration_type function_name LPAREN parameters RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 118


state 73

    (95) parameters -> parameters COMMA . declaration_type ID
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 11
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    declaration_type               shift and go to state 119
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 74

    (87) expression -> expression EQUALS . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 120
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 75

    (40) expression -> expression AND . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 121
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 76

    (41) expression -> expression OR . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 122
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 77

    (42) expression -> expression EQEQ . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 123
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 78

    (43) expression -> expression NEQ . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 124
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 79

    (44) expression -> expression MINSIGN . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 125
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 80

    (45) expression -> expression MAXSIGN . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 126
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 81

    (46) expression -> expression MINSIGNEQ . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 127
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 82

    (47) expression -> expression MAXSIGNEQ . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 128
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 83

    (48) expression -> expression IS . declaration_type
    (49) expression -> expression IS . NOT declaration_type
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    NOT             shift and go to state 130
    ID              shift and go to state 11
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    declaration_type               shift and go to state 129
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 84

    (59) expression -> expression NOT .

    AND             reduce using rule 59 (expression -> expression NOT .)
    OR              reduce using rule 59 (expression -> expression NOT .)
    EQEQ            reduce using rule 59 (expression -> expression NOT .)
    NEQ             reduce using rule 59 (expression -> expression NOT .)
    MINSIGN         reduce using rule 59 (expression -> expression NOT .)
    MAXSIGN         reduce using rule 59 (expression -> expression NOT .)
    MINSIGNEQ       reduce using rule 59 (expression -> expression NOT .)
    MAXSIGNEQ       reduce using rule 59 (expression -> expression NOT .)
    IS              reduce using rule 59 (expression -> expression NOT .)
    PLUSPLUS        reduce using rule 59 (expression -> expression NOT .)
    MINUSMINUS      reduce using rule 59 (expression -> expression NOT .)
    DOT             reduce using rule 59 (expression -> expression NOT .)
    LBRACKET        reduce using rule 59 (expression -> expression NOT .)
    LPAREN          reduce using rule 59 (expression -> expression NOT .)
    NOT             reduce using rule 59 (expression -> expression NOT .)
    PLUS            reduce using rule 59 (expression -> expression NOT .)
    MINUS           reduce using rule 59 (expression -> expression NOT .)
    TIMES           reduce using rule 59 (expression -> expression NOT .)
    DIVIDE          reduce using rule 59 (expression -> expression NOT .)
    INTDIV          reduce using rule 59 (expression -> expression NOT .)
    EQUALS          reduce using rule 59 (expression -> expression NOT .)
    PLUSEQ          reduce using rule 59 (expression -> expression NOT .)
    MINUSEQ         reduce using rule 59 (expression -> expression NOT .)
    TIMESEQ         reduce using rule 59 (expression -> expression NOT .)
    DIVEQ           reduce using rule 59 (expression -> expression NOT .)
    NULLASSIGN      reduce using rule 59 (expression -> expression NOT .)
    QMARK           reduce using rule 59 (expression -> expression NOT .)
    SEMICOLON       reduce using rule 59 (expression -> expression NOT .)
    COMMA           reduce using rule 59 (expression -> expression NOT .)
    RBRACKET        reduce using rule 59 (expression -> expression NOT .)
    RPAREN          reduce using rule 59 (expression -> expression NOT .)
    COLON           reduce using rule 59 (expression -> expression NOT .)
    RBRACE          reduce using rule 59 (expression -> expression NOT .)


state 85

    (52) expression -> expression PLUSPLUS .

    AND             reduce using rule 52 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 52 (expression -> expression PLUSPLUS .)
    EQEQ            reduce using rule 52 (expression -> expression PLUSPLUS .)
    NEQ             reduce using rule 52 (expression -> expression PLUSPLUS .)
    MINSIGN         reduce using rule 52 (expression -> expression PLUSPLUS .)
    MAXSIGN         reduce using rule 52 (expression -> expression PLUSPLUS .)
    MINSIGNEQ       reduce using rule 52 (expression -> expression PLUSPLUS .)
    MAXSIGNEQ       reduce using rule 52 (expression -> expression PLUSPLUS .)
    IS              reduce using rule 52 (expression -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 52 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 52 (expression -> expression PLUSPLUS .)
    DOT             reduce using rule 52 (expression -> expression PLUSPLUS .)
    LBRACKET        reduce using rule 52 (expression -> expression PLUSPLUS .)
    LPAREN          reduce using rule 52 (expression -> expression PLUSPLUS .)
    NOT             reduce using rule 52 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 52 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 52 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 52 (expression -> expression PLUSPLUS .)
    DIVIDE          reduce using rule 52 (expression -> expression PLUSPLUS .)
    INTDIV          reduce using rule 52 (expression -> expression PLUSPLUS .)
    EQUALS          reduce using rule 52 (expression -> expression PLUSPLUS .)
    PLUSEQ          reduce using rule 52 (expression -> expression PLUSPLUS .)
    MINUSEQ         reduce using rule 52 (expression -> expression PLUSPLUS .)
    TIMESEQ         reduce using rule 52 (expression -> expression PLUSPLUS .)
    DIVEQ           reduce using rule 52 (expression -> expression PLUSPLUS .)
    NULLASSIGN      reduce using rule 52 (expression -> expression PLUSPLUS .)
    QMARK           reduce using rule 52 (expression -> expression PLUSPLUS .)
    SEMICOLON       reduce using rule 52 (expression -> expression PLUSPLUS .)
    COMMA           reduce using rule 52 (expression -> expression PLUSPLUS .)
    RBRACKET        reduce using rule 52 (expression -> expression PLUSPLUS .)
    RPAREN          reduce using rule 52 (expression -> expression PLUSPLUS .)
    COLON           reduce using rule 52 (expression -> expression PLUSPLUS .)
    RBRACE          reduce using rule 52 (expression -> expression PLUSPLUS .)


state 86

    (53) expression -> expression MINUSMINUS .

    AND             reduce using rule 53 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 53 (expression -> expression MINUSMINUS .)
    EQEQ            reduce using rule 53 (expression -> expression MINUSMINUS .)
    NEQ             reduce using rule 53 (expression -> expression MINUSMINUS .)
    MINSIGN         reduce using rule 53 (expression -> expression MINUSMINUS .)
    MAXSIGN         reduce using rule 53 (expression -> expression MINUSMINUS .)
    MINSIGNEQ       reduce using rule 53 (expression -> expression MINUSMINUS .)
    MAXSIGNEQ       reduce using rule 53 (expression -> expression MINUSMINUS .)
    IS              reduce using rule 53 (expression -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 53 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 53 (expression -> expression MINUSMINUS .)
    DOT             reduce using rule 53 (expression -> expression MINUSMINUS .)
    LBRACKET        reduce using rule 53 (expression -> expression MINUSMINUS .)
    LPAREN          reduce using rule 53 (expression -> expression MINUSMINUS .)
    NOT             reduce using rule 53 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 53 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 53 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 53 (expression -> expression MINUSMINUS .)
    DIVIDE          reduce using rule 53 (expression -> expression MINUSMINUS .)
    INTDIV          reduce using rule 53 (expression -> expression MINUSMINUS .)
    EQUALS          reduce using rule 53 (expression -> expression MINUSMINUS .)
    PLUSEQ          reduce using rule 53 (expression -> expression MINUSMINUS .)
    MINUSEQ         reduce using rule 53 (expression -> expression MINUSMINUS .)
    TIMESEQ         reduce using rule 53 (expression -> expression MINUSMINUS .)
    DIVEQ           reduce using rule 53 (expression -> expression MINUSMINUS .)
    NULLASSIGN      reduce using rule 53 (expression -> expression MINUSMINUS .)
    QMARK           reduce using rule 53 (expression -> expression MINUSMINUS .)
    SEMICOLON       reduce using rule 53 (expression -> expression MINUSMINUS .)
    COMMA           reduce using rule 53 (expression -> expression MINUSMINUS .)
    RBRACKET        reduce using rule 53 (expression -> expression MINUSMINUS .)
    RPAREN          reduce using rule 53 (expression -> expression MINUSMINUS .)
    COLON           reduce using rule 53 (expression -> expression MINUSMINUS .)
    RBRACE          reduce using rule 53 (expression -> expression MINUSMINUS .)


state 87

    (54) expression -> expression DOT . ID

    ID              shift and go to state 131


state 88

    (55) expression -> expression LBRACKET . expression RBRACKET
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 132
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 89

    (56) expression -> expression LPAREN . arguments RPAREN
    (57) arguments -> . expression_list
    (58) arguments -> . empty
    (123) expression_list -> . expression COMMA expression_list
    (124) expression_list -> . expression
    (125) expression_list -> . empty
    (126) empty -> .
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    RPAREN          reduce using rule 126 (empty -> .)
    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 104
    arguments                      shift and go to state 133
    expression_list                shift and go to state 134
    empty                          shift and go to state 135
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 90

    (60) expression -> expression PLUS . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 136
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 91

    (61) expression -> expression MINUS . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 137
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 92

    (62) expression -> expression TIMES . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 138
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 93

    (63) expression -> expression DIVIDE . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 139
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 94

    (64) expression -> expression INTDIV . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 140
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 95

    (88) expression -> expression PLUSEQ . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 141
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 96

    (89) expression -> expression MINUSEQ . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 142
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 97

    (90) expression -> expression TIMESEQ . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 143
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 98

    (91) expression -> expression DIVEQ . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 144
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 99

    (92) expression -> expression NULLASSIGN . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 145
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 100

    (93) expression -> expression QMARK . expression COLON expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 146
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 101

    (50) expression -> NOT expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 50 (expression -> NOT expression .)
    OR              reduce using rule 50 (expression -> NOT expression .)
    EQEQ            reduce using rule 50 (expression -> NOT expression .)
    NEQ             reduce using rule 50 (expression -> NOT expression .)
    MINSIGN         reduce using rule 50 (expression -> NOT expression .)
    MAXSIGN         reduce using rule 50 (expression -> NOT expression .)
    MINSIGNEQ       reduce using rule 50 (expression -> NOT expression .)
    MAXSIGNEQ       reduce using rule 50 (expression -> NOT expression .)
    IS              reduce using rule 50 (expression -> NOT expression .)
    LPAREN          reduce using rule 50 (expression -> NOT expression .)
    PLUS            reduce using rule 50 (expression -> NOT expression .)
    MINUS           reduce using rule 50 (expression -> NOT expression .)
    TIMES           reduce using rule 50 (expression -> NOT expression .)
    DIVIDE          reduce using rule 50 (expression -> NOT expression .)
    INTDIV          reduce using rule 50 (expression -> NOT expression .)
    EQUALS          reduce using rule 50 (expression -> NOT expression .)
    PLUSEQ          reduce using rule 50 (expression -> NOT expression .)
    MINUSEQ         reduce using rule 50 (expression -> NOT expression .)
    TIMESEQ         reduce using rule 50 (expression -> NOT expression .)
    DIVEQ           reduce using rule 50 (expression -> NOT expression .)
    NULLASSIGN      reduce using rule 50 (expression -> NOT expression .)
    QMARK           reduce using rule 50 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 50 (expression -> NOT expression .)
    COMMA           reduce using rule 50 (expression -> NOT expression .)
    RBRACKET        reduce using rule 50 (expression -> NOT expression .)
    RPAREN          reduce using rule 50 (expression -> NOT expression .)
    COLON           reduce using rule 50 (expression -> NOT expression .)
    RBRACE          reduce using rule 50 (expression -> NOT expression .)
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84

  ! PLUSPLUS        [ reduce using rule 50 (expression -> NOT expression .) ]
  ! MINUSMINUS      [ reduce using rule 50 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 50 (expression -> NOT expression .) ]
  ! NOT             [ reduce using rule 50 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! IS              [ shift and go to state 83 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! TIMES           [ shift and go to state 92 ]
  ! DIVIDE          [ shift and go to state 93 ]
  ! INTDIV          [ shift and go to state 94 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 102

    (51) expression -> MINUS expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 51 (expression -> MINUS expression .)
    OR              reduce using rule 51 (expression -> MINUS expression .)
    EQEQ            reduce using rule 51 (expression -> MINUS expression .)
    NEQ             reduce using rule 51 (expression -> MINUS expression .)
    MINSIGN         reduce using rule 51 (expression -> MINUS expression .)
    MAXSIGN         reduce using rule 51 (expression -> MINUS expression .)
    MINSIGNEQ       reduce using rule 51 (expression -> MINUS expression .)
    MAXSIGNEQ       reduce using rule 51 (expression -> MINUS expression .)
    IS              reduce using rule 51 (expression -> MINUS expression .)
    LPAREN          reduce using rule 51 (expression -> MINUS expression .)
    PLUS            reduce using rule 51 (expression -> MINUS expression .)
    MINUS           reduce using rule 51 (expression -> MINUS expression .)
    TIMES           reduce using rule 51 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 51 (expression -> MINUS expression .)
    INTDIV          reduce using rule 51 (expression -> MINUS expression .)
    EQUALS          reduce using rule 51 (expression -> MINUS expression .)
    PLUSEQ          reduce using rule 51 (expression -> MINUS expression .)
    MINUSEQ         reduce using rule 51 (expression -> MINUS expression .)
    TIMESEQ         reduce using rule 51 (expression -> MINUS expression .)
    DIVEQ           reduce using rule 51 (expression -> MINUS expression .)
    NULLASSIGN      reduce using rule 51 (expression -> MINUS expression .)
    QMARK           reduce using rule 51 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 51 (expression -> MINUS expression .)
    COMMA           reduce using rule 51 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 51 (expression -> MINUS expression .)
    RPAREN          reduce using rule 51 (expression -> MINUS expression .)
    COLON           reduce using rule 51 (expression -> MINUS expression .)
    RBRACE          reduce using rule 51 (expression -> MINUS expression .)
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84

  ! PLUSPLUS        [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! DOT             [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! NOT             [ reduce using rule 51 (expression -> MINUS expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! IS              [ shift and go to state 83 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! TIMES           [ shift and go to state 92 ]
  ! DIVIDE          [ shift and go to state 93 ]
  ! INTDIV          [ shift and go to state 94 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 103

    (110) expression -> LBRACKET expression_list . RBRACKET

    RBRACKET        shift and go to state 147


state 104

    (123) expression_list -> expression . COMMA expression_list
    (124) expression_list -> expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    COMMA           shift and go to state 148
    RBRACKET        reduce using rule 124 (expression_list -> expression .)
    RPAREN          reduce using rule 124 (expression_list -> expression .)
    RBRACE          reduce using rule 124 (expression_list -> expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 105

    (125) expression_list -> empty .

    RBRACKET        reduce using rule 125 (expression_list -> empty .)
    RPAREN          reduce using rule 125 (expression_list -> empty .)
    RBRACE          reduce using rule 125 (expression_list -> empty .)


state 106

    (71) factor -> LPAREN expression . RPAREN
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 149
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 107

    (111) expression -> LBRACE set_or_map_contents . RBRACE

    RBRACE          shift and go to state 150


state 108

    (112) set_or_map_contents -> expression . set_or_map_tail
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression
    (114) set_or_map_tail -> . COLON expression map_tail
    (115) set_or_map_tail -> . set_tail
    (121) set_tail -> . COMMA expression_list
    (122) set_tail -> . empty
    (126) empty -> .

    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100
    COLON           shift and go to state 152
    COMMA           shift and go to state 154
    RBRACE          reduce using rule 126 (empty -> .)

    set_or_map_tail                shift and go to state 151
    set_tail                       shift and go to state 153
    empty                          shift and go to state 155

state 109

    (113) set_or_map_contents -> empty .

    RBRACE          reduce using rule 113 (set_or_map_contents -> empty .)


state 110

    (67) factor -> primitive_type DOT . ID LPAREN arguments RPAREN

    ID              shift and go to state 156


state 111

    (10) const_declaration -> CONST declaration_type ID EQUALS expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 10 (const_declaration -> CONST declaration_type ID EQUALS expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 112

    (21) constructor_declaration -> ID LPAREN constructor_params . RPAREN SEMICOLON

    RPAREN          shift and go to state 157


state 113

    (22) constructor_params -> constructor_param_list .
    (24) constructor_param_list -> constructor_param_list . COMMA constructor_param

    RPAREN          reduce using rule 22 (constructor_params -> constructor_param_list .)
    COMMA           shift and go to state 158


state 114

    (23) constructor_params -> empty .

    RPAREN          reduce using rule 23 (constructor_params -> empty .)


state 115

    (25) constructor_param_list -> constructor_param .

    COMMA           reduce using rule 25 (constructor_param_list -> constructor_param .)
    RPAREN          reduce using rule 25 (constructor_param_list -> constructor_param .)


state 116

    (26) constructor_param -> THIS . DOT ID

    DOT             shift and go to state 159


state 117

    (20) class_property -> declaration_type ID SEMICOLON .

    ID              reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    INT             reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    DOUBLE          reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    STRING          reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    BOOL            reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    VOID            reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    VAR             reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    DYNAMIC         reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    RBRACE          reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)


state 118

    (17) function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE . body RBRACE
    (100) body -> . instructions
    (72) instructions -> . instruction instructions
    (73) instructions -> . empty
    (74) instruction -> . variable_declaration SEMICOLON
    (75) instruction -> . expression SEMICOLON
    (76) instruction -> . print_statement
    (77) instruction -> . if_else
    (78) instruction -> . while_loop
    (79) instruction -> . for_loop
    (80) instruction -> . return_statement
    (81) instruction -> . block_statement
    (82) instruction -> . throw_statement
    (126) empty -> .
    (85) variable_declaration -> . declaration_type ID
    (86) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (94) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (101) if_else -> . IF LPAREN expression RPAREN instruction
    (102) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (103) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (104) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (98) return_statement -> . RETURN expression SEMICOLON
    (99) return_statement -> . RETURN SEMICOLON
    (83) block_statement -> . LBRACE instructions RBRACE
    (84) throw_statement -> . THROW expression SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (66) term -> . factor
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN

    RBRACE          reduce using rule 126 (empty -> .)
    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 161
    PRINT           shift and go to state 176
    IF              shift and go to state 177
    WHILE           shift and go to state 178
    FOR             shift and go to state 179
    RETURN          shift and go to state 180
    THROW           shift and go to state 181
    ID              shift and go to state 175
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LPAREN          shift and go to state 58

    declaration_type               shift and go to state 160
    body                           shift and go to state 162
    instructions                   shift and go to state 163
    instruction                    shift and go to state 164
    empty                          shift and go to state 165
    variable_declaration           shift and go to state 166
    expression                     shift and go to state 167
    print_statement                shift and go to state 168
    if_else                        shift and go to state 169
    while_loop                     shift and go to state 170
    for_loop                       shift and go to state 171
    return_statement               shift and go to state 172
    block_statement                shift and go to state 173
    throw_statement                shift and go to state 174
    term                           shift and go to state 59
    primitive_type                 shift and go to state 182
    generic_type                   shift and go to state 16
    factor                         shift and go to state 61

state 119

    (95) parameters -> parameters COMMA declaration_type . ID

    ID              shift and go to state 183


state 120

    (87) expression -> expression EQUALS expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    LPAREN          reduce using rule 87 (expression -> expression EQUALS expression .)
    QMARK           reduce using rule 87 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 87 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 87 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 87 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 87 (expression -> expression EQUALS expression .)
    COLON           reduce using rule 87 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 87 (expression -> expression EQUALS expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99

  ! AND             [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! EQEQ            [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! NEQ             [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! MINSIGN         [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! MAXSIGN         [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! MINSIGNEQ       [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! IS              [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! PLUSPLUS        [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! MINUSMINUS      [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! DOT             [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! LBRACKET        [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! NOT             [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! INTDIV          [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! PLUSEQ          [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! MINUSEQ         [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! TIMESEQ         [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! DIVEQ           [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! NULLASSIGN      [ reduce using rule 87 (expression -> expression EQUALS expression .) ]
  ! LPAREN          [ shift and go to state 89 ]
  ! QMARK           [ shift and go to state 100 ]


state 121

    (40) expression -> expression AND expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 40 (expression -> expression AND expression .)
    OR              reduce using rule 40 (expression -> expression AND expression .)
    LPAREN          reduce using rule 40 (expression -> expression AND expression .)
    EQUALS          reduce using rule 40 (expression -> expression AND expression .)
    PLUSEQ          reduce using rule 40 (expression -> expression AND expression .)
    MINUSEQ         reduce using rule 40 (expression -> expression AND expression .)
    TIMESEQ         reduce using rule 40 (expression -> expression AND expression .)
    DIVEQ           reduce using rule 40 (expression -> expression AND expression .)
    NULLASSIGN      reduce using rule 40 (expression -> expression AND expression .)
    QMARK           reduce using rule 40 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression AND expression .)
    COMMA           reduce using rule 40 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 40 (expression -> expression AND expression .)
    RPAREN          reduce using rule 40 (expression -> expression AND expression .)
    COLON           reduce using rule 40 (expression -> expression AND expression .)
    RBRACE          reduce using rule 40 (expression -> expression AND expression .)
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! EQEQ            [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MINSIGN         [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MAXSIGN         [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MINSIGNEQ       [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! IS              [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! PLUSPLUS        [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MINUSMINUS      [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! NOT             [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! INTDIV          [ reduce using rule 40 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 122

    (41) expression -> expression OR expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    OR              reduce using rule 41 (expression -> expression OR expression .)
    LPAREN          reduce using rule 41 (expression -> expression OR expression .)
    EQUALS          reduce using rule 41 (expression -> expression OR expression .)
    PLUSEQ          reduce using rule 41 (expression -> expression OR expression .)
    MINUSEQ         reduce using rule 41 (expression -> expression OR expression .)
    TIMESEQ         reduce using rule 41 (expression -> expression OR expression .)
    DIVEQ           reduce using rule 41 (expression -> expression OR expression .)
    NULLASSIGN      reduce using rule 41 (expression -> expression OR expression .)
    QMARK           reduce using rule 41 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression OR expression .)
    COMMA           reduce using rule 41 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 41 (expression -> expression OR expression .)
    RPAREN          reduce using rule 41 (expression -> expression OR expression .)
    COLON           reduce using rule 41 (expression -> expression OR expression .)
    RBRACE          reduce using rule 41 (expression -> expression OR expression .)
    AND             shift and go to state 75
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! AND             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! EQEQ            [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MINSIGN         [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MAXSIGN         [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MINSIGNEQ       [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! IS              [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! PLUSPLUS        [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MINUSMINUS      [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! NOT             [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! INTDIV          [ reduce using rule 41 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 76 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 123

    (42) expression -> expression EQEQ expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 42 (expression -> expression EQEQ expression .)
    OR              reduce using rule 42 (expression -> expression EQEQ expression .)
    EQEQ            reduce using rule 42 (expression -> expression EQEQ expression .)
    NEQ             reduce using rule 42 (expression -> expression EQEQ expression .)
    LPAREN          reduce using rule 42 (expression -> expression EQEQ expression .)
    EQUALS          reduce using rule 42 (expression -> expression EQEQ expression .)
    PLUSEQ          reduce using rule 42 (expression -> expression EQEQ expression .)
    MINUSEQ         reduce using rule 42 (expression -> expression EQEQ expression .)
    TIMESEQ         reduce using rule 42 (expression -> expression EQEQ expression .)
    DIVEQ           reduce using rule 42 (expression -> expression EQEQ expression .)
    NULLASSIGN      reduce using rule 42 (expression -> expression EQEQ expression .)
    QMARK           reduce using rule 42 (expression -> expression EQEQ expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression EQEQ expression .)
    COMMA           reduce using rule 42 (expression -> expression EQEQ expression .)
    RBRACKET        reduce using rule 42 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 42 (expression -> expression EQEQ expression .)
    COLON           reduce using rule 42 (expression -> expression EQEQ expression .)
    RBRACE          reduce using rule 42 (expression -> expression EQEQ expression .)
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! MINSIGN         [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! IS              [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! DOT             [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! LBRACKET        [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! NOT             [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! INTDIV          [ reduce using rule 42 (expression -> expression EQEQ expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 124

    (43) expression -> expression NEQ expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 43 (expression -> expression NEQ expression .)
    OR              reduce using rule 43 (expression -> expression NEQ expression .)
    EQEQ            reduce using rule 43 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 43 (expression -> expression NEQ expression .)
    LPAREN          reduce using rule 43 (expression -> expression NEQ expression .)
    EQUALS          reduce using rule 43 (expression -> expression NEQ expression .)
    PLUSEQ          reduce using rule 43 (expression -> expression NEQ expression .)
    MINUSEQ         reduce using rule 43 (expression -> expression NEQ expression .)
    TIMESEQ         reduce using rule 43 (expression -> expression NEQ expression .)
    DIVEQ           reduce using rule 43 (expression -> expression NEQ expression .)
    NULLASSIGN      reduce using rule 43 (expression -> expression NEQ expression .)
    QMARK           reduce using rule 43 (expression -> expression NEQ expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 43 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 43 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 43 (expression -> expression NEQ expression .)
    COLON           reduce using rule 43 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 43 (expression -> expression NEQ expression .)
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! MINSIGN         [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! IS              [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! NOT             [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! INTDIV          [ reduce using rule 43 (expression -> expression NEQ expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 125

    (44) expression -> expression MINSIGN expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 44 (expression -> expression MINSIGN expression .)
    OR              reduce using rule 44 (expression -> expression MINSIGN expression .)
    EQEQ            reduce using rule 44 (expression -> expression MINSIGN expression .)
    NEQ             reduce using rule 44 (expression -> expression MINSIGN expression .)
    MINSIGN         reduce using rule 44 (expression -> expression MINSIGN expression .)
    MAXSIGN         reduce using rule 44 (expression -> expression MINSIGN expression .)
    MINSIGNEQ       reduce using rule 44 (expression -> expression MINSIGN expression .)
    MAXSIGNEQ       reduce using rule 44 (expression -> expression MINSIGN expression .)
    LPAREN          reduce using rule 44 (expression -> expression MINSIGN expression .)
    EQUALS          reduce using rule 44 (expression -> expression MINSIGN expression .)
    PLUSEQ          reduce using rule 44 (expression -> expression MINSIGN expression .)
    MINUSEQ         reduce using rule 44 (expression -> expression MINSIGN expression .)
    TIMESEQ         reduce using rule 44 (expression -> expression MINSIGN expression .)
    DIVEQ           reduce using rule 44 (expression -> expression MINSIGN expression .)
    NULLASSIGN      reduce using rule 44 (expression -> expression MINSIGN expression .)
    QMARK           reduce using rule 44 (expression -> expression MINSIGN expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression MINSIGN expression .)
    COMMA           reduce using rule 44 (expression -> expression MINSIGN expression .)
    RBRACKET        reduce using rule 44 (expression -> expression MINSIGN expression .)
    RPAREN          reduce using rule 44 (expression -> expression MINSIGN expression .)
    COLON           reduce using rule 44 (expression -> expression MINSIGN expression .)
    RBRACE          reduce using rule 44 (expression -> expression MINSIGN expression .)
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! IS              [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! DOT             [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! NOT             [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! INTDIV          [ reduce using rule 44 (expression -> expression MINSIGN expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 126

    (45) expression -> expression MAXSIGN expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 45 (expression -> expression MAXSIGN expression .)
    OR              reduce using rule 45 (expression -> expression MAXSIGN expression .)
    EQEQ            reduce using rule 45 (expression -> expression MAXSIGN expression .)
    NEQ             reduce using rule 45 (expression -> expression MAXSIGN expression .)
    MINSIGN         reduce using rule 45 (expression -> expression MAXSIGN expression .)
    MAXSIGN         reduce using rule 45 (expression -> expression MAXSIGN expression .)
    MINSIGNEQ       reduce using rule 45 (expression -> expression MAXSIGN expression .)
    MAXSIGNEQ       reduce using rule 45 (expression -> expression MAXSIGN expression .)
    LPAREN          reduce using rule 45 (expression -> expression MAXSIGN expression .)
    EQUALS          reduce using rule 45 (expression -> expression MAXSIGN expression .)
    PLUSEQ          reduce using rule 45 (expression -> expression MAXSIGN expression .)
    MINUSEQ         reduce using rule 45 (expression -> expression MAXSIGN expression .)
    TIMESEQ         reduce using rule 45 (expression -> expression MAXSIGN expression .)
    DIVEQ           reduce using rule 45 (expression -> expression MAXSIGN expression .)
    NULLASSIGN      reduce using rule 45 (expression -> expression MAXSIGN expression .)
    QMARK           reduce using rule 45 (expression -> expression MAXSIGN expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression MAXSIGN expression .)
    COMMA           reduce using rule 45 (expression -> expression MAXSIGN expression .)
    RBRACKET        reduce using rule 45 (expression -> expression MAXSIGN expression .)
    RPAREN          reduce using rule 45 (expression -> expression MAXSIGN expression .)
    COLON           reduce using rule 45 (expression -> expression MAXSIGN expression .)
    RBRACE          reduce using rule 45 (expression -> expression MAXSIGN expression .)
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! IS              [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! DOT             [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! NOT             [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! INTDIV          [ reduce using rule 45 (expression -> expression MAXSIGN expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 127

    (46) expression -> expression MINSIGNEQ expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    OR              reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    EQEQ            reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    NEQ             reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    MINSIGN         reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    MAXSIGN         reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    MINSIGNEQ       reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    MAXSIGNEQ       reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    LPAREN          reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    EQUALS          reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    PLUSEQ          reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    MINUSEQ         reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    TIMESEQ         reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    DIVEQ           reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    NULLASSIGN      reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    QMARK           reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    COMMA           reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    RBRACKET        reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    RPAREN          reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    COLON           reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    RBRACE          reduce using rule 46 (expression -> expression MINSIGNEQ expression .)
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! IS              [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! LBRACKET        [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! NOT             [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! INTDIV          [ reduce using rule 46 (expression -> expression MINSIGNEQ expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 128

    (47) expression -> expression MAXSIGNEQ expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    OR              reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    EQEQ            reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    NEQ             reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    MINSIGN         reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    MAXSIGN         reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    MINSIGNEQ       reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    MAXSIGNEQ       reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    LPAREN          reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    EQUALS          reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    PLUSEQ          reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    MINUSEQ         reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    TIMESEQ         reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    DIVEQ           reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    NULLASSIGN      reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    QMARK           reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    COMMA           reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    RBRACKET        reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    RPAREN          reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    COLON           reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    RBRACE          reduce using rule 47 (expression -> expression MAXSIGNEQ expression .)
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! IS              [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! LBRACKET        [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! NOT             [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! INTDIV          [ reduce using rule 47 (expression -> expression MAXSIGNEQ expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 129

    (48) expression -> expression IS declaration_type .

    AND             reduce using rule 48 (expression -> expression IS declaration_type .)
    OR              reduce using rule 48 (expression -> expression IS declaration_type .)
    EQEQ            reduce using rule 48 (expression -> expression IS declaration_type .)
    NEQ             reduce using rule 48 (expression -> expression IS declaration_type .)
    MINSIGN         reduce using rule 48 (expression -> expression IS declaration_type .)
    MAXSIGN         reduce using rule 48 (expression -> expression IS declaration_type .)
    MINSIGNEQ       reduce using rule 48 (expression -> expression IS declaration_type .)
    MAXSIGNEQ       reduce using rule 48 (expression -> expression IS declaration_type .)
    IS              reduce using rule 48 (expression -> expression IS declaration_type .)
    PLUSPLUS        reduce using rule 48 (expression -> expression IS declaration_type .)
    MINUSMINUS      reduce using rule 48 (expression -> expression IS declaration_type .)
    DOT             reduce using rule 48 (expression -> expression IS declaration_type .)
    LBRACKET        reduce using rule 48 (expression -> expression IS declaration_type .)
    LPAREN          reduce using rule 48 (expression -> expression IS declaration_type .)
    NOT             reduce using rule 48 (expression -> expression IS declaration_type .)
    PLUS            reduce using rule 48 (expression -> expression IS declaration_type .)
    MINUS           reduce using rule 48 (expression -> expression IS declaration_type .)
    TIMES           reduce using rule 48 (expression -> expression IS declaration_type .)
    DIVIDE          reduce using rule 48 (expression -> expression IS declaration_type .)
    INTDIV          reduce using rule 48 (expression -> expression IS declaration_type .)
    EQUALS          reduce using rule 48 (expression -> expression IS declaration_type .)
    PLUSEQ          reduce using rule 48 (expression -> expression IS declaration_type .)
    MINUSEQ         reduce using rule 48 (expression -> expression IS declaration_type .)
    TIMESEQ         reduce using rule 48 (expression -> expression IS declaration_type .)
    DIVEQ           reduce using rule 48 (expression -> expression IS declaration_type .)
    NULLASSIGN      reduce using rule 48 (expression -> expression IS declaration_type .)
    QMARK           reduce using rule 48 (expression -> expression IS declaration_type .)
    SEMICOLON       reduce using rule 48 (expression -> expression IS declaration_type .)
    COMMA           reduce using rule 48 (expression -> expression IS declaration_type .)
    RBRACKET        reduce using rule 48 (expression -> expression IS declaration_type .)
    RPAREN          reduce using rule 48 (expression -> expression IS declaration_type .)
    COLON           reduce using rule 48 (expression -> expression IS declaration_type .)
    RBRACE          reduce using rule 48 (expression -> expression IS declaration_type .)


state 130

    (49) expression -> expression IS NOT . declaration_type
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 11
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    declaration_type               shift and go to state 184
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16

state 131

    (54) expression -> expression DOT ID .

    AND             reduce using rule 54 (expression -> expression DOT ID .)
    OR              reduce using rule 54 (expression -> expression DOT ID .)
    EQEQ            reduce using rule 54 (expression -> expression DOT ID .)
    NEQ             reduce using rule 54 (expression -> expression DOT ID .)
    MINSIGN         reduce using rule 54 (expression -> expression DOT ID .)
    MAXSIGN         reduce using rule 54 (expression -> expression DOT ID .)
    MINSIGNEQ       reduce using rule 54 (expression -> expression DOT ID .)
    MAXSIGNEQ       reduce using rule 54 (expression -> expression DOT ID .)
    IS              reduce using rule 54 (expression -> expression DOT ID .)
    PLUSPLUS        reduce using rule 54 (expression -> expression DOT ID .)
    MINUSMINUS      reduce using rule 54 (expression -> expression DOT ID .)
    DOT             reduce using rule 54 (expression -> expression DOT ID .)
    LBRACKET        reduce using rule 54 (expression -> expression DOT ID .)
    LPAREN          reduce using rule 54 (expression -> expression DOT ID .)
    NOT             reduce using rule 54 (expression -> expression DOT ID .)
    PLUS            reduce using rule 54 (expression -> expression DOT ID .)
    MINUS           reduce using rule 54 (expression -> expression DOT ID .)
    TIMES           reduce using rule 54 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 54 (expression -> expression DOT ID .)
    INTDIV          reduce using rule 54 (expression -> expression DOT ID .)
    EQUALS          reduce using rule 54 (expression -> expression DOT ID .)
    PLUSEQ          reduce using rule 54 (expression -> expression DOT ID .)
    MINUSEQ         reduce using rule 54 (expression -> expression DOT ID .)
    TIMESEQ         reduce using rule 54 (expression -> expression DOT ID .)
    DIVEQ           reduce using rule 54 (expression -> expression DOT ID .)
    NULLASSIGN      reduce using rule 54 (expression -> expression DOT ID .)
    QMARK           reduce using rule 54 (expression -> expression DOT ID .)
    SEMICOLON       reduce using rule 54 (expression -> expression DOT ID .)
    COMMA           reduce using rule 54 (expression -> expression DOT ID .)
    RBRACKET        reduce using rule 54 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 54 (expression -> expression DOT ID .)
    COLON           reduce using rule 54 (expression -> expression DOT ID .)
    RBRACE          reduce using rule 54 (expression -> expression DOT ID .)


state 132

    (55) expression -> expression LBRACKET expression . RBRACKET
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    RBRACKET        shift and go to state 185
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 133

    (56) expression -> expression LPAREN arguments . RPAREN

    RPAREN          shift and go to state 186


state 134

    (57) arguments -> expression_list .

    RPAREN          reduce using rule 57 (arguments -> expression_list .)


state 135

    (58) arguments -> empty .
    (125) expression_list -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 58 (arguments -> empty .)
    RPAREN          reduce using rule 58 (arguments -> empty .)

  ! RPAREN          [ reduce using rule 125 (expression_list -> empty .) ]


state 136

    (60) expression -> expression PLUS expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 60 (expression -> expression PLUS expression .)
    OR              reduce using rule 60 (expression -> expression PLUS expression .)
    EQEQ            reduce using rule 60 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 60 (expression -> expression PLUS expression .)
    MINSIGN         reduce using rule 60 (expression -> expression PLUS expression .)
    MAXSIGN         reduce using rule 60 (expression -> expression PLUS expression .)
    MINSIGNEQ       reduce using rule 60 (expression -> expression PLUS expression .)
    MAXSIGNEQ       reduce using rule 60 (expression -> expression PLUS expression .)
    IS              reduce using rule 60 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 60 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 60 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 60 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 60 (expression -> expression PLUS expression .)
    PLUSEQ          reduce using rule 60 (expression -> expression PLUS expression .)
    MINUSEQ         reduce using rule 60 (expression -> expression PLUS expression .)
    TIMESEQ         reduce using rule 60 (expression -> expression PLUS expression .)
    DIVEQ           reduce using rule 60 (expression -> expression PLUS expression .)
    NULLASSIGN      reduce using rule 60 (expression -> expression PLUS expression .)
    QMARK           reduce using rule 60 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 60 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 60 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 60 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 60 (expression -> expression PLUS expression .)
    COLON           reduce using rule 60 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 60 (expression -> expression PLUS expression .)
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! PLUSPLUS        [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! NOT             [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! INTDIV          [ reduce using rule 60 (expression -> expression PLUS expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! IS              [ shift and go to state 83 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 137

    (61) expression -> expression MINUS expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 61 (expression -> expression MINUS expression .)
    OR              reduce using rule 61 (expression -> expression MINUS expression .)
    EQEQ            reduce using rule 61 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 61 (expression -> expression MINUS expression .)
    MINSIGN         reduce using rule 61 (expression -> expression MINUS expression .)
    MAXSIGN         reduce using rule 61 (expression -> expression MINUS expression .)
    MINSIGNEQ       reduce using rule 61 (expression -> expression MINUS expression .)
    MAXSIGNEQ       reduce using rule 61 (expression -> expression MINUS expression .)
    IS              reduce using rule 61 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 61 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 61 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 61 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 61 (expression -> expression MINUS expression .)
    PLUSEQ          reduce using rule 61 (expression -> expression MINUS expression .)
    MINUSEQ         reduce using rule 61 (expression -> expression MINUS expression .)
    TIMESEQ         reduce using rule 61 (expression -> expression MINUS expression .)
    DIVEQ           reduce using rule 61 (expression -> expression MINUS expression .)
    NULLASSIGN      reduce using rule 61 (expression -> expression MINUS expression .)
    QMARK           reduce using rule 61 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 61 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 61 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 61 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 61 (expression -> expression MINUS expression .)
    COLON           reduce using rule 61 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 61 (expression -> expression MINUS expression .)
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94

  ! PLUSPLUS        [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! NOT             [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! INTDIV          [ reduce using rule 61 (expression -> expression MINUS expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! IS              [ shift and go to state 83 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 138

    (62) expression -> expression TIMES expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 62 (expression -> expression TIMES expression .)
    OR              reduce using rule 62 (expression -> expression TIMES expression .)
    EQEQ            reduce using rule 62 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 62 (expression -> expression TIMES expression .)
    MINSIGN         reduce using rule 62 (expression -> expression TIMES expression .)
    MAXSIGN         reduce using rule 62 (expression -> expression TIMES expression .)
    MINSIGNEQ       reduce using rule 62 (expression -> expression TIMES expression .)
    MAXSIGNEQ       reduce using rule 62 (expression -> expression TIMES expression .)
    IS              reduce using rule 62 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 62 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 62 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 62 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 62 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 62 (expression -> expression TIMES expression .)
    INTDIV          reduce using rule 62 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 62 (expression -> expression TIMES expression .)
    PLUSEQ          reduce using rule 62 (expression -> expression TIMES expression .)
    MINUSEQ         reduce using rule 62 (expression -> expression TIMES expression .)
    TIMESEQ         reduce using rule 62 (expression -> expression TIMES expression .)
    DIVEQ           reduce using rule 62 (expression -> expression TIMES expression .)
    NULLASSIGN      reduce using rule 62 (expression -> expression TIMES expression .)
    QMARK           reduce using rule 62 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 62 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 62 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 62 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 62 (expression -> expression TIMES expression .)
    COLON           reduce using rule 62 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 62 (expression -> expression TIMES expression .)
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84

  ! PLUSPLUS        [ reduce using rule 62 (expression -> expression TIMES expression .) ]
  ! MINUSMINUS      [ reduce using rule 62 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 62 (expression -> expression TIMES expression .) ]
  ! LBRACKET        [ reduce using rule 62 (expression -> expression TIMES expression .) ]
  ! NOT             [ reduce using rule 62 (expression -> expression TIMES expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! IS              [ shift and go to state 83 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! TIMES           [ shift and go to state 92 ]
  ! DIVIDE          [ shift and go to state 93 ]
  ! INTDIV          [ shift and go to state 94 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 139

    (63) expression -> expression DIVIDE expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 63 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 63 (expression -> expression DIVIDE expression .)
    EQEQ            reduce using rule 63 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 63 (expression -> expression DIVIDE expression .)
    MINSIGN         reduce using rule 63 (expression -> expression DIVIDE expression .)
    MAXSIGN         reduce using rule 63 (expression -> expression DIVIDE expression .)
    MINSIGNEQ       reduce using rule 63 (expression -> expression DIVIDE expression .)
    MAXSIGNEQ       reduce using rule 63 (expression -> expression DIVIDE expression .)
    IS              reduce using rule 63 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 63 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 63 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 63 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 63 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 63 (expression -> expression DIVIDE expression .)
    INTDIV          reduce using rule 63 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 63 (expression -> expression DIVIDE expression .)
    PLUSEQ          reduce using rule 63 (expression -> expression DIVIDE expression .)
    MINUSEQ         reduce using rule 63 (expression -> expression DIVIDE expression .)
    TIMESEQ         reduce using rule 63 (expression -> expression DIVIDE expression .)
    DIVEQ           reduce using rule 63 (expression -> expression DIVIDE expression .)
    NULLASSIGN      reduce using rule 63 (expression -> expression DIVIDE expression .)
    QMARK           reduce using rule 63 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 63 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 63 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 63 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 63 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 63 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 63 (expression -> expression DIVIDE expression .)
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84

  ! PLUSPLUS        [ reduce using rule 63 (expression -> expression DIVIDE expression .) ]
  ! MINUSMINUS      [ reduce using rule 63 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 63 (expression -> expression DIVIDE expression .) ]
  ! LBRACKET        [ reduce using rule 63 (expression -> expression DIVIDE expression .) ]
  ! NOT             [ reduce using rule 63 (expression -> expression DIVIDE expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! IS              [ shift and go to state 83 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! TIMES           [ shift and go to state 92 ]
  ! DIVIDE          [ shift and go to state 93 ]
  ! INTDIV          [ shift and go to state 94 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 140

    (64) expression -> expression INTDIV expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 64 (expression -> expression INTDIV expression .)
    OR              reduce using rule 64 (expression -> expression INTDIV expression .)
    EQEQ            reduce using rule 64 (expression -> expression INTDIV expression .)
    NEQ             reduce using rule 64 (expression -> expression INTDIV expression .)
    MINSIGN         reduce using rule 64 (expression -> expression INTDIV expression .)
    MAXSIGN         reduce using rule 64 (expression -> expression INTDIV expression .)
    MINSIGNEQ       reduce using rule 64 (expression -> expression INTDIV expression .)
    MAXSIGNEQ       reduce using rule 64 (expression -> expression INTDIV expression .)
    IS              reduce using rule 64 (expression -> expression INTDIV expression .)
    LPAREN          reduce using rule 64 (expression -> expression INTDIV expression .)
    PLUS            reduce using rule 64 (expression -> expression INTDIV expression .)
    MINUS           reduce using rule 64 (expression -> expression INTDIV expression .)
    TIMES           reduce using rule 64 (expression -> expression INTDIV expression .)
    DIVIDE          reduce using rule 64 (expression -> expression INTDIV expression .)
    INTDIV          reduce using rule 64 (expression -> expression INTDIV expression .)
    EQUALS          reduce using rule 64 (expression -> expression INTDIV expression .)
    PLUSEQ          reduce using rule 64 (expression -> expression INTDIV expression .)
    MINUSEQ         reduce using rule 64 (expression -> expression INTDIV expression .)
    TIMESEQ         reduce using rule 64 (expression -> expression INTDIV expression .)
    DIVEQ           reduce using rule 64 (expression -> expression INTDIV expression .)
    NULLASSIGN      reduce using rule 64 (expression -> expression INTDIV expression .)
    QMARK           reduce using rule 64 (expression -> expression INTDIV expression .)
    SEMICOLON       reduce using rule 64 (expression -> expression INTDIV expression .)
    COMMA           reduce using rule 64 (expression -> expression INTDIV expression .)
    RBRACKET        reduce using rule 64 (expression -> expression INTDIV expression .)
    RPAREN          reduce using rule 64 (expression -> expression INTDIV expression .)
    COLON           reduce using rule 64 (expression -> expression INTDIV expression .)
    RBRACE          reduce using rule 64 (expression -> expression INTDIV expression .)
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84

  ! PLUSPLUS        [ reduce using rule 64 (expression -> expression INTDIV expression .) ]
  ! MINUSMINUS      [ reduce using rule 64 (expression -> expression INTDIV expression .) ]
  ! DOT             [ reduce using rule 64 (expression -> expression INTDIV expression .) ]
  ! LBRACKET        [ reduce using rule 64 (expression -> expression INTDIV expression .) ]
  ! NOT             [ reduce using rule 64 (expression -> expression INTDIV expression .) ]
  ! AND             [ shift and go to state 75 ]
  ! OR              [ shift and go to state 76 ]
  ! EQEQ            [ shift and go to state 77 ]
  ! NEQ             [ shift and go to state 78 ]
  ! MINSIGN         [ shift and go to state 79 ]
  ! MAXSIGN         [ shift and go to state 80 ]
  ! MINSIGNEQ       [ shift and go to state 81 ]
  ! MAXSIGNEQ       [ shift and go to state 82 ]
  ! IS              [ shift and go to state 83 ]
  ! LPAREN          [ shift and go to state 89 ]
  ! PLUS            [ shift and go to state 90 ]
  ! MINUS           [ shift and go to state 91 ]
  ! TIMES           [ shift and go to state 92 ]
  ! DIVIDE          [ shift and go to state 93 ]
  ! INTDIV          [ shift and go to state 94 ]
  ! EQUALS          [ shift and go to state 74 ]
  ! PLUSEQ          [ shift and go to state 95 ]
  ! MINUSEQ         [ shift and go to state 96 ]
  ! TIMESEQ         [ shift and go to state 97 ]
  ! DIVEQ           [ shift and go to state 98 ]
  ! NULLASSIGN      [ shift and go to state 99 ]
  ! QMARK           [ shift and go to state 100 ]


state 141

    (88) expression -> expression PLUSEQ expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    LPAREN          reduce using rule 88 (expression -> expression PLUSEQ expression .)
    QMARK           reduce using rule 88 (expression -> expression PLUSEQ expression .)
    SEMICOLON       reduce using rule 88 (expression -> expression PLUSEQ expression .)
    COMMA           reduce using rule 88 (expression -> expression PLUSEQ expression .)
    RBRACKET        reduce using rule 88 (expression -> expression PLUSEQ expression .)
    RPAREN          reduce using rule 88 (expression -> expression PLUSEQ expression .)
    COLON           reduce using rule 88 (expression -> expression PLUSEQ expression .)
    RBRACE          reduce using rule 88 (expression -> expression PLUSEQ expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99

  ! AND             [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! OR              [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! EQEQ            [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! NEQ             [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! MINSIGN         [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! IS              [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! DOT             [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! LBRACKET        [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! NOT             [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! PLUS            [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! MINUS           [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! TIMES           [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! INTDIV          [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! EQUALS          [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! PLUSEQ          [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! MINUSEQ         [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! TIMESEQ         [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! DIVEQ           [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! NULLASSIGN      [ reduce using rule 88 (expression -> expression PLUSEQ expression .) ]
  ! LPAREN          [ shift and go to state 89 ]
  ! QMARK           [ shift and go to state 100 ]


state 142

    (89) expression -> expression MINUSEQ expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    LPAREN          reduce using rule 89 (expression -> expression MINUSEQ expression .)
    QMARK           reduce using rule 89 (expression -> expression MINUSEQ expression .)
    SEMICOLON       reduce using rule 89 (expression -> expression MINUSEQ expression .)
    COMMA           reduce using rule 89 (expression -> expression MINUSEQ expression .)
    RBRACKET        reduce using rule 89 (expression -> expression MINUSEQ expression .)
    RPAREN          reduce using rule 89 (expression -> expression MINUSEQ expression .)
    COLON           reduce using rule 89 (expression -> expression MINUSEQ expression .)
    RBRACE          reduce using rule 89 (expression -> expression MINUSEQ expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99

  ! AND             [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! OR              [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! EQEQ            [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! NEQ             [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! MINSIGN         [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! IS              [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! DOT             [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! LBRACKET        [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! NOT             [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! PLUS            [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! MINUS           [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! TIMES           [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! INTDIV          [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! EQUALS          [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! PLUSEQ          [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! MINUSEQ         [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! TIMESEQ         [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! DIVEQ           [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! NULLASSIGN      [ reduce using rule 89 (expression -> expression MINUSEQ expression .) ]
  ! LPAREN          [ shift and go to state 89 ]
  ! QMARK           [ shift and go to state 100 ]


state 143

    (90) expression -> expression TIMESEQ expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    LPAREN          reduce using rule 90 (expression -> expression TIMESEQ expression .)
    QMARK           reduce using rule 90 (expression -> expression TIMESEQ expression .)
    SEMICOLON       reduce using rule 90 (expression -> expression TIMESEQ expression .)
    COMMA           reduce using rule 90 (expression -> expression TIMESEQ expression .)
    RBRACKET        reduce using rule 90 (expression -> expression TIMESEQ expression .)
    RPAREN          reduce using rule 90 (expression -> expression TIMESEQ expression .)
    COLON           reduce using rule 90 (expression -> expression TIMESEQ expression .)
    RBRACE          reduce using rule 90 (expression -> expression TIMESEQ expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99

  ! AND             [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! OR              [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! EQEQ            [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! NEQ             [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! MINSIGN         [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! IS              [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! DOT             [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! LBRACKET        [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! NOT             [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! PLUS            [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! MINUS           [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! TIMES           [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! DIVIDE          [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! INTDIV          [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! EQUALS          [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! PLUSEQ          [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! MINUSEQ         [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! TIMESEQ         [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! DIVEQ           [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! NULLASSIGN      [ reduce using rule 90 (expression -> expression TIMESEQ expression .) ]
  ! LPAREN          [ shift and go to state 89 ]
  ! QMARK           [ shift and go to state 100 ]


state 144

    (91) expression -> expression DIVEQ expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    LPAREN          reduce using rule 91 (expression -> expression DIVEQ expression .)
    QMARK           reduce using rule 91 (expression -> expression DIVEQ expression .)
    SEMICOLON       reduce using rule 91 (expression -> expression DIVEQ expression .)
    COMMA           reduce using rule 91 (expression -> expression DIVEQ expression .)
    RBRACKET        reduce using rule 91 (expression -> expression DIVEQ expression .)
    RPAREN          reduce using rule 91 (expression -> expression DIVEQ expression .)
    COLON           reduce using rule 91 (expression -> expression DIVEQ expression .)
    RBRACE          reduce using rule 91 (expression -> expression DIVEQ expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99

  ! AND             [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! OR              [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! EQEQ            [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! NEQ             [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! MINSIGN         [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! IS              [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! DOT             [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! LBRACKET        [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! NOT             [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! PLUS            [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! MINUS           [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! TIMES           [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! DIVIDE          [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! INTDIV          [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! EQUALS          [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! PLUSEQ          [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! MINUSEQ         [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! TIMESEQ         [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! DIVEQ           [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! NULLASSIGN      [ reduce using rule 91 (expression -> expression DIVEQ expression .) ]
  ! LPAREN          [ shift and go to state 89 ]
  ! QMARK           [ shift and go to state 100 ]


state 145

    (92) expression -> expression NULLASSIGN expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    LPAREN          reduce using rule 92 (expression -> expression NULLASSIGN expression .)
    QMARK           reduce using rule 92 (expression -> expression NULLASSIGN expression .)
    SEMICOLON       reduce using rule 92 (expression -> expression NULLASSIGN expression .)
    COMMA           reduce using rule 92 (expression -> expression NULLASSIGN expression .)
    RBRACKET        reduce using rule 92 (expression -> expression NULLASSIGN expression .)
    RPAREN          reduce using rule 92 (expression -> expression NULLASSIGN expression .)
    COLON           reduce using rule 92 (expression -> expression NULLASSIGN expression .)
    RBRACE          reduce using rule 92 (expression -> expression NULLASSIGN expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99

  ! AND             [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! OR              [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! EQEQ            [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! NEQ             [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! MINSIGN         [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! MAXSIGN         [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! MINSIGNEQ       [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! IS              [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! DOT             [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! NOT             [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! PLUS            [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! MINUS           [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! TIMES           [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! INTDIV          [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! EQUALS          [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! PLUSEQ          [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! MINUSEQ         [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! TIMESEQ         [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! DIVEQ           [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! NULLASSIGN      [ reduce using rule 92 (expression -> expression NULLASSIGN expression .) ]
  ! LPAREN          [ shift and go to state 89 ]
  ! QMARK           [ shift and go to state 100 ]


state 146

    (93) expression -> expression QMARK expression . COLON expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    COLON           shift and go to state 187
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 147

    (110) expression -> LBRACKET expression_list RBRACKET .

    AND             reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    EQEQ            reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    NEQ             reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    MINSIGN         reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    MAXSIGN         reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    MINSIGNEQ       reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    MAXSIGNEQ       reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    IS              reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    PLUSPLUS        reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    MINUSMINUS      reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    DOT             reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    LBRACKET        reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    LPAREN          reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    NOT             reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    INTDIV          reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    EQUALS          reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    PLUSEQ          reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    MINUSEQ         reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    TIMESEQ         reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    DIVEQ           reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    NULLASSIGN      reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    QMARK           reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    SEMICOLON       reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    COLON           reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACE          reduce using rule 110 (expression -> LBRACKET expression_list RBRACKET .)


state 148

    (123) expression_list -> expression COMMA . expression_list
    (123) expression_list -> . expression COMMA expression_list
    (124) expression_list -> . expression
    (125) expression_list -> . empty
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (126) empty -> .
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    RBRACKET        reduce using rule 126 (empty -> .)
    RPAREN          reduce using rule 126 (empty -> .)
    RBRACE          reduce using rule 126 (empty -> .)
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 104
    expression_list                shift and go to state 188
    empty                          shift and go to state 105
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 149

    (71) factor -> LPAREN expression RPAREN .

    AND             reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    MINSIGN         reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    MAXSIGN         reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    MINSIGNEQ       reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    MAXSIGNEQ       reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    IS              reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    DOT             reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    INTDIV          reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    PLUSEQ          reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    MINUSEQ         reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    TIMESEQ         reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    DIVEQ           reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    NULLASSIGN      reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    QMARK           reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    COLON           reduce using rule 71 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 71 (factor -> LPAREN expression RPAREN .)


state 150

    (111) expression -> LBRACE set_or_map_contents RBRACE .

    AND             reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    OR              reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    EQEQ            reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    NEQ             reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINSIGN         reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    MAXSIGN         reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINSIGNEQ       reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    MAXSIGNEQ       reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    IS              reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    PLUSPLUS        reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINUSMINUS      reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    DOT             reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    LBRACKET        reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    LPAREN          reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    NOT             reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    PLUS            reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINUS           reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    TIMES           reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    DIVIDE          reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    INTDIV          reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    EQUALS          reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    PLUSEQ          reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINUSEQ         reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    TIMESEQ         reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    DIVEQ           reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    NULLASSIGN      reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    QMARK           reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    SEMICOLON       reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    COMMA           reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    RBRACKET        reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    RPAREN          reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    COLON           reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)
    RBRACE          reduce using rule 111 (expression -> LBRACE set_or_map_contents RBRACE .)


state 151

    (112) set_or_map_contents -> expression set_or_map_tail .

    RBRACE          reduce using rule 112 (set_or_map_contents -> expression set_or_map_tail .)


state 152

    (114) set_or_map_tail -> COLON . expression map_tail
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 189
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 153

    (115) set_or_map_tail -> set_tail .

    RBRACE          reduce using rule 115 (set_or_map_tail -> set_tail .)


state 154

    (121) set_tail -> COMMA . expression_list
    (123) expression_list -> . expression COMMA expression_list
    (124) expression_list -> . expression
    (125) expression_list -> . empty
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (126) empty -> .
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    RBRACE          reduce using rule 126 (empty -> .)
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression_list                shift and go to state 190
    expression                     shift and go to state 104
    empty                          shift and go to state 105
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 155

    (122) set_tail -> empty .

    RBRACE          reduce using rule 122 (set_tail -> empty .)


state 156

    (67) factor -> primitive_type DOT ID . LPAREN arguments RPAREN

    LPAREN          shift and go to state 191


state 157

    (21) constructor_declaration -> ID LPAREN constructor_params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 192


state 158

    (24) constructor_param_list -> constructor_param_list COMMA . constructor_param
    (26) constructor_param -> . THIS DOT ID

    THIS            shift and go to state 116

    constructor_param              shift and go to state 193

state 159

    (26) constructor_param -> THIS DOT . ID

    ID              shift and go to state 194


state 160

    (85) variable_declaration -> declaration_type . ID
    (86) variable_declaration -> declaration_type . ID EQUALS expression

    ID              shift and go to state 195


state 161

    (111) expression -> LBRACE . set_or_map_contents RBRACE
    (83) block_statement -> LBRACE . instructions RBRACE
    (112) set_or_map_contents -> . expression set_or_map_tail
    (113) set_or_map_contents -> . empty
    (72) instructions -> . instruction instructions
    (73) instructions -> . empty
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (126) empty -> .
    (74) instruction -> . variable_declaration SEMICOLON
    (75) instruction -> . expression SEMICOLON
    (76) instruction -> . print_statement
    (77) instruction -> . if_else
    (78) instruction -> . while_loop
    (79) instruction -> . for_loop
    (80) instruction -> . return_statement
    (81) instruction -> . block_statement
    (82) instruction -> . throw_statement
    (66) term -> . factor
    (85) variable_declaration -> . declaration_type ID
    (86) variable_declaration -> . declaration_type ID EQUALS expression
    (94) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (101) if_else -> . IF LPAREN expression RPAREN instruction
    (102) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (103) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (104) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (98) return_statement -> . RETURN expression SEMICOLON
    (99) return_statement -> . RETURN SEMICOLON
    (83) block_statement -> . LBRACE instructions RBRACE
    (84) throw_statement -> . THROW expression SEMICOLON
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 161
    RBRACE          reduce using rule 126 (empty -> .)
    PRINT           shift and go to state 176
    IF              shift and go to state 177
    WHILE           shift and go to state 178
    FOR             shift and go to state 179
    RETURN          shift and go to state 180
    THROW           shift and go to state 181
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 199
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    set_or_map_contents            shift and go to state 107
    instructions                   shift and go to state 196
    expression                     shift and go to state 197
    empty                          shift and go to state 198
    instruction                    shift and go to state 164
    declaration_type               shift and go to state 160
    term                           shift and go to state 59
    variable_declaration           shift and go to state 166
    print_statement                shift and go to state 168
    if_else                        shift and go to state 169
    while_loop                     shift and go to state 170
    for_loop                       shift and go to state 171
    return_statement               shift and go to state 172
    block_statement                shift and go to state 173
    throw_statement                shift and go to state 174
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 200
    generic_type                   shift and go to state 16

state 162

    (17) function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 201


state 163

    (100) body -> instructions .

    RBRACE          reduce using rule 100 (body -> instructions .)


state 164

    (72) instructions -> instruction . instructions
    (72) instructions -> . instruction instructions
    (73) instructions -> . empty
    (74) instruction -> . variable_declaration SEMICOLON
    (75) instruction -> . expression SEMICOLON
    (76) instruction -> . print_statement
    (77) instruction -> . if_else
    (78) instruction -> . while_loop
    (79) instruction -> . for_loop
    (80) instruction -> . return_statement
    (81) instruction -> . block_statement
    (82) instruction -> . throw_statement
    (126) empty -> .
    (85) variable_declaration -> . declaration_type ID
    (86) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (94) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (101) if_else -> . IF LPAREN expression RPAREN instruction
    (102) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (103) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (104) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (98) return_statement -> . RETURN expression SEMICOLON
    (99) return_statement -> . RETURN SEMICOLON
    (83) block_statement -> . LBRACE instructions RBRACE
    (84) throw_statement -> . THROW expression SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (66) term -> . factor
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN

    RBRACE          reduce using rule 126 (empty -> .)
    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 161
    PRINT           shift and go to state 176
    IF              shift and go to state 177
    WHILE           shift and go to state 178
    FOR             shift and go to state 179
    RETURN          shift and go to state 180
    THROW           shift and go to state 181
    ID              shift and go to state 175
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LPAREN          shift and go to state 58

    instruction                    shift and go to state 164
    instructions                   shift and go to state 202
    empty                          shift and go to state 165
    variable_declaration           shift and go to state 166
    expression                     shift and go to state 167
    print_statement                shift and go to state 168
    if_else                        shift and go to state 169
    while_loop                     shift and go to state 170
    for_loop                       shift and go to state 171
    return_statement               shift and go to state 172
    block_statement                shift and go to state 173
    throw_statement                shift and go to state 174
    declaration_type               shift and go to state 160
    term                           shift and go to state 59
    primitive_type                 shift and go to state 182
    generic_type                   shift and go to state 16
    factor                         shift and go to state 61

state 165

    (73) instructions -> empty .

    RBRACE          reduce using rule 73 (instructions -> empty .)


state 166

    (74) instruction -> variable_declaration . SEMICOLON

    SEMICOLON       shift and go to state 203


state 167

    (75) instruction -> expression . SEMICOLON
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    SEMICOLON       shift and go to state 204
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 168

    (76) instruction -> print_statement .

    NOT             reduce using rule 76 (instruction -> print_statement .)
    MINUS           reduce using rule 76 (instruction -> print_statement .)
    LBRACKET        reduce using rule 76 (instruction -> print_statement .)
    LBRACE          reduce using rule 76 (instruction -> print_statement .)
    PRINT           reduce using rule 76 (instruction -> print_statement .)
    IF              reduce using rule 76 (instruction -> print_statement .)
    WHILE           reduce using rule 76 (instruction -> print_statement .)
    FOR             reduce using rule 76 (instruction -> print_statement .)
    RETURN          reduce using rule 76 (instruction -> print_statement .)
    THROW           reduce using rule 76 (instruction -> print_statement .)
    ID              reduce using rule 76 (instruction -> print_statement .)
    INT             reduce using rule 76 (instruction -> print_statement .)
    DOUBLE          reduce using rule 76 (instruction -> print_statement .)
    STRING          reduce using rule 76 (instruction -> print_statement .)
    BOOL            reduce using rule 76 (instruction -> print_statement .)
    VOID            reduce using rule 76 (instruction -> print_statement .)
    VAR             reduce using rule 76 (instruction -> print_statement .)
    DYNAMIC         reduce using rule 76 (instruction -> print_statement .)
    NUMBER          reduce using rule 76 (instruction -> print_statement .)
    STRING_LITERAL  reduce using rule 76 (instruction -> print_statement .)
    LPAREN          reduce using rule 76 (instruction -> print_statement .)
    RBRACE          reduce using rule 76 (instruction -> print_statement .)
    ELSE            reduce using rule 76 (instruction -> print_statement .)


state 169

    (77) instruction -> if_else .

    NOT             reduce using rule 77 (instruction -> if_else .)
    MINUS           reduce using rule 77 (instruction -> if_else .)
    LBRACKET        reduce using rule 77 (instruction -> if_else .)
    LBRACE          reduce using rule 77 (instruction -> if_else .)
    PRINT           reduce using rule 77 (instruction -> if_else .)
    IF              reduce using rule 77 (instruction -> if_else .)
    WHILE           reduce using rule 77 (instruction -> if_else .)
    FOR             reduce using rule 77 (instruction -> if_else .)
    RETURN          reduce using rule 77 (instruction -> if_else .)
    THROW           reduce using rule 77 (instruction -> if_else .)
    ID              reduce using rule 77 (instruction -> if_else .)
    INT             reduce using rule 77 (instruction -> if_else .)
    DOUBLE          reduce using rule 77 (instruction -> if_else .)
    STRING          reduce using rule 77 (instruction -> if_else .)
    BOOL            reduce using rule 77 (instruction -> if_else .)
    VOID            reduce using rule 77 (instruction -> if_else .)
    VAR             reduce using rule 77 (instruction -> if_else .)
    DYNAMIC         reduce using rule 77 (instruction -> if_else .)
    NUMBER          reduce using rule 77 (instruction -> if_else .)
    STRING_LITERAL  reduce using rule 77 (instruction -> if_else .)
    LPAREN          reduce using rule 77 (instruction -> if_else .)
    RBRACE          reduce using rule 77 (instruction -> if_else .)
    ELSE            reduce using rule 77 (instruction -> if_else .)


state 170

    (78) instruction -> while_loop .

    NOT             reduce using rule 78 (instruction -> while_loop .)
    MINUS           reduce using rule 78 (instruction -> while_loop .)
    LBRACKET        reduce using rule 78 (instruction -> while_loop .)
    LBRACE          reduce using rule 78 (instruction -> while_loop .)
    PRINT           reduce using rule 78 (instruction -> while_loop .)
    IF              reduce using rule 78 (instruction -> while_loop .)
    WHILE           reduce using rule 78 (instruction -> while_loop .)
    FOR             reduce using rule 78 (instruction -> while_loop .)
    RETURN          reduce using rule 78 (instruction -> while_loop .)
    THROW           reduce using rule 78 (instruction -> while_loop .)
    ID              reduce using rule 78 (instruction -> while_loop .)
    INT             reduce using rule 78 (instruction -> while_loop .)
    DOUBLE          reduce using rule 78 (instruction -> while_loop .)
    STRING          reduce using rule 78 (instruction -> while_loop .)
    BOOL            reduce using rule 78 (instruction -> while_loop .)
    VOID            reduce using rule 78 (instruction -> while_loop .)
    VAR             reduce using rule 78 (instruction -> while_loop .)
    DYNAMIC         reduce using rule 78 (instruction -> while_loop .)
    NUMBER          reduce using rule 78 (instruction -> while_loop .)
    STRING_LITERAL  reduce using rule 78 (instruction -> while_loop .)
    LPAREN          reduce using rule 78 (instruction -> while_loop .)
    RBRACE          reduce using rule 78 (instruction -> while_loop .)
    ELSE            reduce using rule 78 (instruction -> while_loop .)


state 171

    (79) instruction -> for_loop .

    NOT             reduce using rule 79 (instruction -> for_loop .)
    MINUS           reduce using rule 79 (instruction -> for_loop .)
    LBRACKET        reduce using rule 79 (instruction -> for_loop .)
    LBRACE          reduce using rule 79 (instruction -> for_loop .)
    PRINT           reduce using rule 79 (instruction -> for_loop .)
    IF              reduce using rule 79 (instruction -> for_loop .)
    WHILE           reduce using rule 79 (instruction -> for_loop .)
    FOR             reduce using rule 79 (instruction -> for_loop .)
    RETURN          reduce using rule 79 (instruction -> for_loop .)
    THROW           reduce using rule 79 (instruction -> for_loop .)
    ID              reduce using rule 79 (instruction -> for_loop .)
    INT             reduce using rule 79 (instruction -> for_loop .)
    DOUBLE          reduce using rule 79 (instruction -> for_loop .)
    STRING          reduce using rule 79 (instruction -> for_loop .)
    BOOL            reduce using rule 79 (instruction -> for_loop .)
    VOID            reduce using rule 79 (instruction -> for_loop .)
    VAR             reduce using rule 79 (instruction -> for_loop .)
    DYNAMIC         reduce using rule 79 (instruction -> for_loop .)
    NUMBER          reduce using rule 79 (instruction -> for_loop .)
    STRING_LITERAL  reduce using rule 79 (instruction -> for_loop .)
    LPAREN          reduce using rule 79 (instruction -> for_loop .)
    RBRACE          reduce using rule 79 (instruction -> for_loop .)
    ELSE            reduce using rule 79 (instruction -> for_loop .)


state 172

    (80) instruction -> return_statement .

    NOT             reduce using rule 80 (instruction -> return_statement .)
    MINUS           reduce using rule 80 (instruction -> return_statement .)
    LBRACKET        reduce using rule 80 (instruction -> return_statement .)
    LBRACE          reduce using rule 80 (instruction -> return_statement .)
    PRINT           reduce using rule 80 (instruction -> return_statement .)
    IF              reduce using rule 80 (instruction -> return_statement .)
    WHILE           reduce using rule 80 (instruction -> return_statement .)
    FOR             reduce using rule 80 (instruction -> return_statement .)
    RETURN          reduce using rule 80 (instruction -> return_statement .)
    THROW           reduce using rule 80 (instruction -> return_statement .)
    ID              reduce using rule 80 (instruction -> return_statement .)
    INT             reduce using rule 80 (instruction -> return_statement .)
    DOUBLE          reduce using rule 80 (instruction -> return_statement .)
    STRING          reduce using rule 80 (instruction -> return_statement .)
    BOOL            reduce using rule 80 (instruction -> return_statement .)
    VOID            reduce using rule 80 (instruction -> return_statement .)
    VAR             reduce using rule 80 (instruction -> return_statement .)
    DYNAMIC         reduce using rule 80 (instruction -> return_statement .)
    NUMBER          reduce using rule 80 (instruction -> return_statement .)
    STRING_LITERAL  reduce using rule 80 (instruction -> return_statement .)
    LPAREN          reduce using rule 80 (instruction -> return_statement .)
    RBRACE          reduce using rule 80 (instruction -> return_statement .)
    ELSE            reduce using rule 80 (instruction -> return_statement .)


state 173

    (81) instruction -> block_statement .

    NOT             reduce using rule 81 (instruction -> block_statement .)
    MINUS           reduce using rule 81 (instruction -> block_statement .)
    LBRACKET        reduce using rule 81 (instruction -> block_statement .)
    LBRACE          reduce using rule 81 (instruction -> block_statement .)
    PRINT           reduce using rule 81 (instruction -> block_statement .)
    IF              reduce using rule 81 (instruction -> block_statement .)
    WHILE           reduce using rule 81 (instruction -> block_statement .)
    FOR             reduce using rule 81 (instruction -> block_statement .)
    RETURN          reduce using rule 81 (instruction -> block_statement .)
    THROW           reduce using rule 81 (instruction -> block_statement .)
    ID              reduce using rule 81 (instruction -> block_statement .)
    INT             reduce using rule 81 (instruction -> block_statement .)
    DOUBLE          reduce using rule 81 (instruction -> block_statement .)
    STRING          reduce using rule 81 (instruction -> block_statement .)
    BOOL            reduce using rule 81 (instruction -> block_statement .)
    VOID            reduce using rule 81 (instruction -> block_statement .)
    VAR             reduce using rule 81 (instruction -> block_statement .)
    DYNAMIC         reduce using rule 81 (instruction -> block_statement .)
    NUMBER          reduce using rule 81 (instruction -> block_statement .)
    STRING_LITERAL  reduce using rule 81 (instruction -> block_statement .)
    LPAREN          reduce using rule 81 (instruction -> block_statement .)
    RBRACE          reduce using rule 81 (instruction -> block_statement .)
    ELSE            reduce using rule 81 (instruction -> block_statement .)


state 174

    (82) instruction -> throw_statement .

    NOT             reduce using rule 82 (instruction -> throw_statement .)
    MINUS           reduce using rule 82 (instruction -> throw_statement .)
    LBRACKET        reduce using rule 82 (instruction -> throw_statement .)
    LBRACE          reduce using rule 82 (instruction -> throw_statement .)
    PRINT           reduce using rule 82 (instruction -> throw_statement .)
    IF              reduce using rule 82 (instruction -> throw_statement .)
    WHILE           reduce using rule 82 (instruction -> throw_statement .)
    FOR             reduce using rule 82 (instruction -> throw_statement .)
    RETURN          reduce using rule 82 (instruction -> throw_statement .)
    THROW           reduce using rule 82 (instruction -> throw_statement .)
    ID              reduce using rule 82 (instruction -> throw_statement .)
    INT             reduce using rule 82 (instruction -> throw_statement .)
    DOUBLE          reduce using rule 82 (instruction -> throw_statement .)
    STRING          reduce using rule 82 (instruction -> throw_statement .)
    BOOL            reduce using rule 82 (instruction -> throw_statement .)
    VOID            reduce using rule 82 (instruction -> throw_statement .)
    VAR             reduce using rule 82 (instruction -> throw_statement .)
    DYNAMIC         reduce using rule 82 (instruction -> throw_statement .)
    NUMBER          reduce using rule 82 (instruction -> throw_statement .)
    STRING_LITERAL  reduce using rule 82 (instruction -> throw_statement .)
    LPAREN          reduce using rule 82 (instruction -> throw_statement .)
    RBRACE          reduce using rule 82 (instruction -> throw_statement .)
    ELSE            reduce using rule 82 (instruction -> throw_statement .)


state 175

    (29) declaration_type -> ID .
    (37) generic_type -> ID . MINSIGN type_list MAXSIGN
    (70) factor -> ID .

  ! shift/reduce conflict for MINSIGN resolved as shift
    ID              reduce using rule 29 (declaration_type -> ID .)
    MINSIGN         shift and go to state 27
    SEMICOLON       reduce using rule 70 (factor -> ID .)
    AND             reduce using rule 70 (factor -> ID .)
    OR              reduce using rule 70 (factor -> ID .)
    EQEQ            reduce using rule 70 (factor -> ID .)
    NEQ             reduce using rule 70 (factor -> ID .)
    MAXSIGN         reduce using rule 70 (factor -> ID .)
    MINSIGNEQ       reduce using rule 70 (factor -> ID .)
    MAXSIGNEQ       reduce using rule 70 (factor -> ID .)
    IS              reduce using rule 70 (factor -> ID .)
    PLUSPLUS        reduce using rule 70 (factor -> ID .)
    MINUSMINUS      reduce using rule 70 (factor -> ID .)
    DOT             reduce using rule 70 (factor -> ID .)
    LBRACKET        reduce using rule 70 (factor -> ID .)
    LPAREN          reduce using rule 70 (factor -> ID .)
    NOT             reduce using rule 70 (factor -> ID .)
    PLUS            reduce using rule 70 (factor -> ID .)
    MINUS           reduce using rule 70 (factor -> ID .)
    TIMES           reduce using rule 70 (factor -> ID .)
    DIVIDE          reduce using rule 70 (factor -> ID .)
    INTDIV          reduce using rule 70 (factor -> ID .)
    EQUALS          reduce using rule 70 (factor -> ID .)
    PLUSEQ          reduce using rule 70 (factor -> ID .)
    MINUSEQ         reduce using rule 70 (factor -> ID .)
    TIMESEQ         reduce using rule 70 (factor -> ID .)
    DIVEQ           reduce using rule 70 (factor -> ID .)
    NULLASSIGN      reduce using rule 70 (factor -> ID .)
    QMARK           reduce using rule 70 (factor -> ID .)

  ! MINSIGN         [ reduce using rule 70 (factor -> ID .) ]


state 176

    (94) print_statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 205


state 177

    (101) if_else -> IF . LPAREN expression RPAREN instruction
    (102) if_else -> IF . LPAREN expression RPAREN instruction ELSE instruction

    LPAREN          shift and go to state 206


state 178

    (103) while_loop -> WHILE . LPAREN expression RPAREN instruction

    LPAREN          shift and go to state 207


state 179

    (104) for_loop -> FOR . LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction

    LPAREN          shift and go to state 208


state 180

    (98) return_statement -> RETURN . expression SEMICOLON
    (99) return_statement -> RETURN . SEMICOLON
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    SEMICOLON       shift and go to state 210
    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 209
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 181

    (84) throw_statement -> THROW . expression SEMICOLON
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 211
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 182

    (27) declaration_type -> primitive_type .
    (67) factor -> primitive_type . DOT ID LPAREN arguments RPAREN

    ID              reduce using rule 27 (declaration_type -> primitive_type .)
    DOT             shift and go to state 110


state 183

    (95) parameters -> parameters COMMA declaration_type ID .

    RPAREN          reduce using rule 95 (parameters -> parameters COMMA declaration_type ID .)
    COMMA           reduce using rule 95 (parameters -> parameters COMMA declaration_type ID .)


state 184

    (49) expression -> expression IS NOT declaration_type .

    AND             reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    OR              reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    EQEQ            reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    NEQ             reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    MINSIGN         reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    MAXSIGN         reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    MINSIGNEQ       reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    MAXSIGNEQ       reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    IS              reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    PLUSPLUS        reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    MINUSMINUS      reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    DOT             reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    LBRACKET        reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    LPAREN          reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    NOT             reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    PLUS            reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    MINUS           reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    TIMES           reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    DIVIDE          reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    INTDIV          reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    EQUALS          reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    PLUSEQ          reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    MINUSEQ         reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    TIMESEQ         reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    DIVEQ           reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    NULLASSIGN      reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    QMARK           reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    SEMICOLON       reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    COMMA           reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    RBRACKET        reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    RPAREN          reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    COLON           reduce using rule 49 (expression -> expression IS NOT declaration_type .)
    RBRACE          reduce using rule 49 (expression -> expression IS NOT declaration_type .)


state 185

    (55) expression -> expression LBRACKET expression RBRACKET .

    AND             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    EQEQ            reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    MINSIGN         reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    MAXSIGN         reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    MINSIGNEQ       reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    MAXSIGNEQ       reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    IS              reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    NOT             reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    INTDIV          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    PLUSEQ          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    MINUSEQ         reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    TIMESEQ         reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    DIVEQ           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    NULLASSIGN      reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    QMARK           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    COLON           reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 55 (expression -> expression LBRACKET expression RBRACKET .)


state 186

    (56) expression -> expression LPAREN arguments RPAREN .

    AND             reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    OR              reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    EQEQ            reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    NEQ             reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    MINSIGN         reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    MAXSIGN         reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    MINSIGNEQ       reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    MAXSIGNEQ       reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    IS              reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    PLUSPLUS        reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    MINUSMINUS      reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    DOT             reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    LBRACKET        reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    NOT             reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    PLUS            reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    MINUS           reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    TIMES           reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    INTDIV          reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    PLUSEQ          reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    MINUSEQ         reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    TIMESEQ         reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    DIVEQ           reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    NULLASSIGN      reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    QMARK           reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    SEMICOLON       reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    COMMA           reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    RBRACKET        reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    COLON           reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 56 (expression -> expression LPAREN arguments RPAREN .)


state 187

    (93) expression -> expression QMARK expression COLON . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 212
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 188

    (123) expression_list -> expression COMMA expression_list .

    RBRACKET        reduce using rule 123 (expression_list -> expression COMMA expression_list .)
    RPAREN          reduce using rule 123 (expression_list -> expression COMMA expression_list .)
    RBRACE          reduce using rule 123 (expression_list -> expression COMMA expression_list .)


state 189

    (114) set_or_map_tail -> COLON expression . map_tail
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression
    (116) map_tail -> . COMMA map_entries
    (117) map_tail -> . empty
    (126) empty -> .

    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100
    COMMA           shift and go to state 214
    RBRACE          reduce using rule 126 (empty -> .)

    map_tail                       shift and go to state 213
    empty                          shift and go to state 215

state 190

    (121) set_tail -> COMMA expression_list .

    RBRACE          reduce using rule 121 (set_tail -> COMMA expression_list .)


state 191

    (67) factor -> primitive_type DOT ID LPAREN . arguments RPAREN
    (57) arguments -> . expression_list
    (58) arguments -> . empty
    (123) expression_list -> . expression COMMA expression_list
    (124) expression_list -> . expression
    (125) expression_list -> . empty
    (126) empty -> .
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    RPAREN          reduce using rule 126 (empty -> .)
    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    primitive_type                 shift and go to state 62
    arguments                      shift and go to state 216
    expression_list                shift and go to state 134
    empty                          shift and go to state 135
    expression                     shift and go to state 104
    term                           shift and go to state 59
    factor                         shift and go to state 61

state 192

    (21) constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .

    ID              reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    INT             reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    STRING          reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    BOOL            reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    VOID            reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    VAR             reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    RBRACE          reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)


state 193

    (24) constructor_param_list -> constructor_param_list COMMA constructor_param .

    COMMA           reduce using rule 24 (constructor_param_list -> constructor_param_list COMMA constructor_param .)
    RPAREN          reduce using rule 24 (constructor_param_list -> constructor_param_list COMMA constructor_param .)


state 194

    (26) constructor_param -> THIS DOT ID .

    COMMA           reduce using rule 26 (constructor_param -> THIS DOT ID .)
    RPAREN          reduce using rule 26 (constructor_param -> THIS DOT ID .)


state 195

    (85) variable_declaration -> declaration_type ID .
    (86) variable_declaration -> declaration_type ID . EQUALS expression

    SEMICOLON       reduce using rule 85 (variable_declaration -> declaration_type ID .)
    EQUALS          shift and go to state 37


state 196

    (83) block_statement -> LBRACE instructions . RBRACE

    RBRACE          shift and go to state 217


state 197

    (112) set_or_map_contents -> expression . set_or_map_tail
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression
    (75) instruction -> expression . SEMICOLON
    (114) set_or_map_tail -> . COLON expression map_tail
    (115) set_or_map_tail -> . set_tail
    (121) set_tail -> . COMMA expression_list
    (122) set_tail -> . empty
    (126) empty -> .

    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100
    SEMICOLON       shift and go to state 204
    COLON           shift and go to state 152
    COMMA           shift and go to state 154
    RBRACE          reduce using rule 126 (empty -> .)

    set_or_map_tail                shift and go to state 151
    set_tail                       shift and go to state 153
    empty                          shift and go to state 155

state 198

    (113) set_or_map_contents -> empty .
    (73) instructions -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 73 (instructions -> empty .)
    RBRACE          reduce using rule 73 (instructions -> empty .)

  ! RBRACE          [ reduce using rule 113 (set_or_map_contents -> empty .) ]


state 199

    (70) factor -> ID .
    (29) declaration_type -> ID .
    (37) generic_type -> ID . MINSIGN type_list MAXSIGN

  ! shift/reduce conflict for MINSIGN resolved as shift
    AND             reduce using rule 70 (factor -> ID .)
    OR              reduce using rule 70 (factor -> ID .)
    EQEQ            reduce using rule 70 (factor -> ID .)
    NEQ             reduce using rule 70 (factor -> ID .)
    MAXSIGN         reduce using rule 70 (factor -> ID .)
    MINSIGNEQ       reduce using rule 70 (factor -> ID .)
    MAXSIGNEQ       reduce using rule 70 (factor -> ID .)
    IS              reduce using rule 70 (factor -> ID .)
    PLUSPLUS        reduce using rule 70 (factor -> ID .)
    MINUSMINUS      reduce using rule 70 (factor -> ID .)
    DOT             reduce using rule 70 (factor -> ID .)
    LBRACKET        reduce using rule 70 (factor -> ID .)
    LPAREN          reduce using rule 70 (factor -> ID .)
    NOT             reduce using rule 70 (factor -> ID .)
    PLUS            reduce using rule 70 (factor -> ID .)
    MINUS           reduce using rule 70 (factor -> ID .)
    TIMES           reduce using rule 70 (factor -> ID .)
    DIVIDE          reduce using rule 70 (factor -> ID .)
    INTDIV          reduce using rule 70 (factor -> ID .)
    EQUALS          reduce using rule 70 (factor -> ID .)
    PLUSEQ          reduce using rule 70 (factor -> ID .)
    MINUSEQ         reduce using rule 70 (factor -> ID .)
    TIMESEQ         reduce using rule 70 (factor -> ID .)
    DIVEQ           reduce using rule 70 (factor -> ID .)
    NULLASSIGN      reduce using rule 70 (factor -> ID .)
    QMARK           reduce using rule 70 (factor -> ID .)
    SEMICOLON       reduce using rule 70 (factor -> ID .)
    COLON           reduce using rule 70 (factor -> ID .)
    COMMA           reduce using rule 70 (factor -> ID .)
    RBRACE          reduce using rule 70 (factor -> ID .)
    ID              reduce using rule 29 (declaration_type -> ID .)
    MINSIGN         shift and go to state 27

  ! MINSIGN         [ reduce using rule 70 (factor -> ID .) ]


state 200

    (67) factor -> primitive_type . DOT ID LPAREN arguments RPAREN
    (27) declaration_type -> primitive_type .

    DOT             shift and go to state 110
    ID              reduce using rule 27 (declaration_type -> primitive_type .)


state 201

    (17) function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .

    CLASS           reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    IMPORT          reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    DOUBLE          reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    VOID            reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    VAR             reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    DYNAMIC         reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    $end            reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)


state 202

    (72) instructions -> instruction instructions .

    RBRACE          reduce using rule 72 (instructions -> instruction instructions .)


state 203

    (74) instruction -> variable_declaration SEMICOLON .

    NOT             reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    MINUS           reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    LBRACKET        reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    LBRACE          reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    PRINT           reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    IF              reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    WHILE           reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    FOR             reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    RETURN          reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    THROW           reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    ID              reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    INT             reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    DOUBLE          reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    STRING          reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    BOOL            reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    VOID            reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    VAR             reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    DYNAMIC         reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    NUMBER          reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    STRING_LITERAL  reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    LPAREN          reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    RBRACE          reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)
    ELSE            reduce using rule 74 (instruction -> variable_declaration SEMICOLON .)


state 204

    (75) instruction -> expression SEMICOLON .

    NOT             reduce using rule 75 (instruction -> expression SEMICOLON .)
    MINUS           reduce using rule 75 (instruction -> expression SEMICOLON .)
    LBRACKET        reduce using rule 75 (instruction -> expression SEMICOLON .)
    LBRACE          reduce using rule 75 (instruction -> expression SEMICOLON .)
    PRINT           reduce using rule 75 (instruction -> expression SEMICOLON .)
    IF              reduce using rule 75 (instruction -> expression SEMICOLON .)
    WHILE           reduce using rule 75 (instruction -> expression SEMICOLON .)
    FOR             reduce using rule 75 (instruction -> expression SEMICOLON .)
    RETURN          reduce using rule 75 (instruction -> expression SEMICOLON .)
    THROW           reduce using rule 75 (instruction -> expression SEMICOLON .)
    ID              reduce using rule 75 (instruction -> expression SEMICOLON .)
    INT             reduce using rule 75 (instruction -> expression SEMICOLON .)
    DOUBLE          reduce using rule 75 (instruction -> expression SEMICOLON .)
    STRING          reduce using rule 75 (instruction -> expression SEMICOLON .)
    BOOL            reduce using rule 75 (instruction -> expression SEMICOLON .)
    VOID            reduce using rule 75 (instruction -> expression SEMICOLON .)
    VAR             reduce using rule 75 (instruction -> expression SEMICOLON .)
    DYNAMIC         reduce using rule 75 (instruction -> expression SEMICOLON .)
    NUMBER          reduce using rule 75 (instruction -> expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 75 (instruction -> expression SEMICOLON .)
    LPAREN          reduce using rule 75 (instruction -> expression SEMICOLON .)
    RBRACE          reduce using rule 75 (instruction -> expression SEMICOLON .)
    ELSE            reduce using rule 75 (instruction -> expression SEMICOLON .)


state 205

    (94) print_statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 218
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 206

    (101) if_else -> IF LPAREN . expression RPAREN instruction
    (102) if_else -> IF LPAREN . expression RPAREN instruction ELSE instruction
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 219
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 207

    (103) while_loop -> WHILE LPAREN . expression RPAREN instruction
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 220
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 208

    (104) for_loop -> FOR LPAREN . for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (105) for_initializer -> . variable_declaration
    (106) for_initializer -> . expression
    (107) for_initializer -> . empty
    (85) variable_declaration -> . declaration_type ID
    (86) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (126) empty -> .
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (66) term -> . factor
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    SEMICOLON       reduce using rule 126 (empty -> .)
    ID              shift and go to state 175
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LPAREN          shift and go to state 58

    for_initializer                shift and go to state 221
    variable_declaration           shift and go to state 222
    expression                     shift and go to state 223
    empty                          shift and go to state 224
    declaration_type               shift and go to state 160
    term                           shift and go to state 59
    primitive_type                 shift and go to state 182
    generic_type                   shift and go to state 16
    factor                         shift and go to state 61

state 209

    (98) return_statement -> RETURN expression . SEMICOLON
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    SEMICOLON       shift and go to state 225
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 210

    (99) return_statement -> RETURN SEMICOLON .

    NOT             reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    MINUS           reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    LBRACKET        reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    PRINT           reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    THROW           reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    ID              reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    INT             reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    DOUBLE          reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    BOOL            reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    VOID            reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    VAR             reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    DYNAMIC         reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    STRING_LITERAL  reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 99 (return_statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 99 (return_statement -> RETURN SEMICOLON .)


state 211

    (84) throw_statement -> THROW expression . SEMICOLON
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    SEMICOLON       shift and go to state 226
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 212

    (93) expression -> expression QMARK expression COLON expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for MINSIGN resolved as shift
  ! shift/reduce conflict for MAXSIGN resolved as shift
  ! shift/reduce conflict for MINSIGNEQ resolved as shift
  ! shift/reduce conflict for MAXSIGNEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INTDIV resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for PLUSEQ resolved as shift
  ! shift/reduce conflict for MINUSEQ resolved as shift
  ! shift/reduce conflict for TIMESEQ resolved as shift
  ! shift/reduce conflict for DIVEQ resolved as shift
  ! shift/reduce conflict for NULLASSIGN resolved as shift
  ! shift/reduce conflict for QMARK resolved as shift
    SEMICOLON       reduce using rule 93 (expression -> expression QMARK expression COLON expression .)
    COMMA           reduce using rule 93 (expression -> expression QMARK expression COLON expression .)
    RBRACKET        reduce using rule 93 (expression -> expression QMARK expression COLON expression .)
    RPAREN          reduce using rule 93 (expression -> expression QMARK expression COLON expression .)
    COLON           reduce using rule 93 (expression -> expression QMARK expression COLON expression .)
    RBRACE          reduce using rule 93 (expression -> expression QMARK expression COLON expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100

  ! AND             [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! OR              [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! EQEQ            [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! NEQ             [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! MINSIGN         [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! MAXSIGN         [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! MINSIGNEQ       [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! IS              [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! PLUSPLUS        [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! MINUSMINUS      [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! DOT             [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! LBRACKET        [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! LPAREN          [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! NOT             [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! PLUS            [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! MINUS           [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! TIMES           [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! INTDIV          [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! EQUALS          [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! PLUSEQ          [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! MINUSEQ         [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! TIMESEQ         [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! DIVEQ           [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! NULLASSIGN      [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]
  ! QMARK           [ reduce using rule 93 (expression -> expression QMARK expression COLON expression .) ]


state 213

    (114) set_or_map_tail -> COLON expression map_tail .

    RBRACE          reduce using rule 114 (set_or_map_tail -> COLON expression map_tail .)


state 214

    (116) map_tail -> COMMA . map_entries
    (118) map_entries -> . map_entries COMMA map_entry
    (119) map_entries -> . map_entry
    (120) map_entry -> . expression COLON expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    map_entries                    shift and go to state 227
    map_entry                      shift and go to state 228
    expression                     shift and go to state 229
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 215

    (117) map_tail -> empty .

    RBRACE          reduce using rule 117 (map_tail -> empty .)


state 216

    (67) factor -> primitive_type DOT ID LPAREN arguments . RPAREN

    RPAREN          shift and go to state 230


state 217

    (83) block_statement -> LBRACE instructions RBRACE .

    NOT             reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    MINUS           reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    LBRACKET        reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    LBRACE          reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    PRINT           reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    IF              reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    WHILE           reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    FOR             reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    RETURN          reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    THROW           reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    ID              reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    INT             reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    DOUBLE          reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    STRING          reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    BOOL            reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    VOID            reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    VAR             reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    DYNAMIC         reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    NUMBER          reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    STRING_LITERAL  reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    LPAREN          reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    RBRACE          reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)
    ELSE            reduce using rule 83 (block_statement -> LBRACE instructions RBRACE .)


state 218

    (94) print_statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 231
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 219

    (101) if_else -> IF LPAREN expression . RPAREN instruction
    (102) if_else -> IF LPAREN expression . RPAREN instruction ELSE instruction
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 232
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 220

    (103) while_loop -> WHILE LPAREN expression . RPAREN instruction
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 233
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 221

    (104) for_loop -> FOR LPAREN for_initializer . SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction

    SEMICOLON       shift and go to state 234


state 222

    (105) for_initializer -> variable_declaration .

    SEMICOLON       reduce using rule 105 (for_initializer -> variable_declaration .)


state 223

    (106) for_initializer -> expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 106 (for_initializer -> expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 224

    (107) for_initializer -> empty .

    SEMICOLON       reduce using rule 107 (for_initializer -> empty .)


state 225

    (98) return_statement -> RETURN expression SEMICOLON .

    NOT             reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    LBRACKET        reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    THROW           reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    DOUBLE          reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    VAR             reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    DYNAMIC         reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 98 (return_statement -> RETURN expression SEMICOLON .)


state 226

    (84) throw_statement -> THROW expression SEMICOLON .

    NOT             reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    MINUS           reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    LBRACKET        reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    LBRACE          reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    PRINT           reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    IF              reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    WHILE           reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    FOR             reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    RETURN          reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    THROW           reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    ID              reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    INT             reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    DOUBLE          reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    STRING          reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    BOOL            reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    VOID            reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    VAR             reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    DYNAMIC         reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    NUMBER          reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    LPAREN          reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    RBRACE          reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)
    ELSE            reduce using rule 84 (throw_statement -> THROW expression SEMICOLON .)


state 227

    (116) map_tail -> COMMA map_entries .
    (118) map_entries -> map_entries . COMMA map_entry

    RBRACE          reduce using rule 116 (map_tail -> COMMA map_entries .)
    COMMA           shift and go to state 235


state 228

    (119) map_entries -> map_entry .

    COMMA           reduce using rule 119 (map_entries -> map_entry .)
    RBRACE          reduce using rule 119 (map_entries -> map_entry .)


state 229

    (120) map_entry -> expression . COLON expression
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    COLON           shift and go to state 236
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 230

    (67) factor -> primitive_type DOT ID LPAREN arguments RPAREN .

    AND             reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    OR              reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    EQEQ            reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    NEQ             reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINSIGN         reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MAXSIGN         reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINSIGNEQ       reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MAXSIGNEQ       reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    IS              reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    PLUSPLUS        reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINUSMINUS      reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    DOT             reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    LBRACKET        reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    NOT             reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    PLUS            reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINUS           reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    TIMES           reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    INTDIV          reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    PLUSEQ          reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINUSEQ         reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    TIMESEQ         reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    DIVEQ           reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    NULLASSIGN      reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    QMARK           reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    SEMICOLON       reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    COMMA           reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    RBRACKET        reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    COLON           reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 67 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)


state 231

    (94) print_statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 237


state 232

    (101) if_else -> IF LPAREN expression RPAREN . instruction
    (102) if_else -> IF LPAREN expression RPAREN . instruction ELSE instruction
    (74) instruction -> . variable_declaration SEMICOLON
    (75) instruction -> . expression SEMICOLON
    (76) instruction -> . print_statement
    (77) instruction -> . if_else
    (78) instruction -> . while_loop
    (79) instruction -> . for_loop
    (80) instruction -> . return_statement
    (81) instruction -> . block_statement
    (82) instruction -> . throw_statement
    (85) variable_declaration -> . declaration_type ID
    (86) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (94) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (101) if_else -> . IF LPAREN expression RPAREN instruction
    (102) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (103) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (104) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (98) return_statement -> . RETURN expression SEMICOLON
    (99) return_statement -> . RETURN SEMICOLON
    (83) block_statement -> . LBRACE instructions RBRACE
    (84) throw_statement -> . THROW expression SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (66) term -> . factor
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 161
    PRINT           shift and go to state 176
    IF              shift and go to state 177
    WHILE           shift and go to state 178
    FOR             shift and go to state 179
    RETURN          shift and go to state 180
    THROW           shift and go to state 181
    ID              shift and go to state 175
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LPAREN          shift and go to state 58

    expression                     shift and go to state 167
    instruction                    shift and go to state 238
    variable_declaration           shift and go to state 166
    print_statement                shift and go to state 168
    if_else                        shift and go to state 169
    while_loop                     shift and go to state 170
    for_loop                       shift and go to state 171
    return_statement               shift and go to state 172
    block_statement                shift and go to state 173
    throw_statement                shift and go to state 174
    declaration_type               shift and go to state 160
    term                           shift and go to state 59
    primitive_type                 shift and go to state 182
    generic_type                   shift and go to state 16
    factor                         shift and go to state 61

state 233

    (103) while_loop -> WHILE LPAREN expression RPAREN . instruction
    (74) instruction -> . variable_declaration SEMICOLON
    (75) instruction -> . expression SEMICOLON
    (76) instruction -> . print_statement
    (77) instruction -> . if_else
    (78) instruction -> . while_loop
    (79) instruction -> . for_loop
    (80) instruction -> . return_statement
    (81) instruction -> . block_statement
    (82) instruction -> . throw_statement
    (85) variable_declaration -> . declaration_type ID
    (86) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (94) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (101) if_else -> . IF LPAREN expression RPAREN instruction
    (102) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (103) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (104) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (98) return_statement -> . RETURN expression SEMICOLON
    (99) return_statement -> . RETURN SEMICOLON
    (83) block_statement -> . LBRACE instructions RBRACE
    (84) throw_statement -> . THROW expression SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (66) term -> . factor
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 161
    PRINT           shift and go to state 176
    IF              shift and go to state 177
    WHILE           shift and go to state 178
    FOR             shift and go to state 179
    RETURN          shift and go to state 180
    THROW           shift and go to state 181
    ID              shift and go to state 175
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LPAREN          shift and go to state 58

    expression                     shift and go to state 167
    instruction                    shift and go to state 239
    variable_declaration           shift and go to state 166
    print_statement                shift and go to state 168
    if_else                        shift and go to state 169
    while_loop                     shift and go to state 170
    for_loop                       shift and go to state 171
    return_statement               shift and go to state 172
    block_statement                shift and go to state 173
    throw_statement                shift and go to state 174
    declaration_type               shift and go to state 160
    term                           shift and go to state 59
    primitive_type                 shift and go to state 182
    generic_type                   shift and go to state 16
    factor                         shift and go to state 61

state 234

    (104) for_loop -> FOR LPAREN for_initializer SEMICOLON . expression_opt SEMICOLON expression_opt RPAREN instruction
    (108) expression_opt -> . expression
    (109) expression_opt -> . empty
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (126) empty -> .
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    SEMICOLON       reduce using rule 126 (empty -> .)
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression_opt                 shift and go to state 240
    expression                     shift and go to state 241
    empty                          shift and go to state 242
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 235

    (118) map_entries -> map_entries COMMA . map_entry
    (120) map_entry -> . expression COLON expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    map_entry                      shift and go to state 243
    expression                     shift and go to state 229
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 236

    (120) map_entry -> expression COLON . expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression                     shift and go to state 244
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 237

    (94) print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    NOT             reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    THROW           reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING_LITERAL  reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 94 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 238

    (101) if_else -> IF LPAREN expression RPAREN instruction .
    (102) if_else -> IF LPAREN expression RPAREN instruction . ELSE instruction

  ! shift/reduce conflict for ELSE resolved as shift
    NOT             reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    MINUS           reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    LBRACKET        reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    LBRACE          reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    PRINT           reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    IF              reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    WHILE           reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    FOR             reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    RETURN          reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    THROW           reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    ID              reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    INT             reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    DOUBLE          reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    STRING          reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    BOOL            reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    VOID            reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    VAR             reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    DYNAMIC         reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    NUMBER          reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    STRING_LITERAL  reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    LPAREN          reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    RBRACE          reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .)
    ELSE            shift and go to state 245

  ! ELSE            [ reduce using rule 101 (if_else -> IF LPAREN expression RPAREN instruction .) ]


state 239

    (103) while_loop -> WHILE LPAREN expression RPAREN instruction .

    NOT             reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    MINUS           reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    LBRACKET        reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    LBRACE          reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    PRINT           reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    IF              reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    WHILE           reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    FOR             reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    RETURN          reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    THROW           reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    ID              reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    INT             reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    DOUBLE          reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    STRING          reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    BOOL            reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    VOID            reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    VAR             reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    DYNAMIC         reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    NUMBER          reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    STRING_LITERAL  reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    LPAREN          reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    RBRACE          reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    ELSE            reduce using rule 103 (while_loop -> WHILE LPAREN expression RPAREN instruction .)


state 240

    (104) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt . SEMICOLON expression_opt RPAREN instruction

    SEMICOLON       shift and go to state 246


state 241

    (108) expression_opt -> expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 108 (expression_opt -> expression .)
    RPAREN          reduce using rule 108 (expression_opt -> expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 242

    (109) expression_opt -> empty .

    SEMICOLON       reduce using rule 109 (expression_opt -> empty .)
    RPAREN          reduce using rule 109 (expression_opt -> empty .)


state 243

    (118) map_entries -> map_entries COMMA map_entry .

    COMMA           reduce using rule 118 (map_entries -> map_entries COMMA map_entry .)
    RBRACE          reduce using rule 118 (map_entries -> map_entries COMMA map_entry .)


state 244

    (120) map_entry -> expression COLON expression .
    (40) expression -> expression . AND expression
    (41) expression -> expression . OR expression
    (42) expression -> expression . EQEQ expression
    (43) expression -> expression . NEQ expression
    (44) expression -> expression . MINSIGN expression
    (45) expression -> expression . MAXSIGN expression
    (46) expression -> expression . MINSIGNEQ expression
    (47) expression -> expression . MAXSIGNEQ expression
    (48) expression -> expression . IS declaration_type
    (49) expression -> expression . IS NOT declaration_type
    (52) expression -> expression . PLUSPLUS
    (53) expression -> expression . MINUSMINUS
    (54) expression -> expression . DOT ID
    (55) expression -> expression . LBRACKET expression RBRACKET
    (56) expression -> expression . LPAREN arguments RPAREN
    (59) expression -> expression . NOT
    (60) expression -> expression . PLUS expression
    (61) expression -> expression . MINUS expression
    (62) expression -> expression . TIMES expression
    (63) expression -> expression . DIVIDE expression
    (64) expression -> expression . INTDIV expression
    (87) expression -> expression . EQUALS expression
    (88) expression -> expression . PLUSEQ expression
    (89) expression -> expression . MINUSEQ expression
    (90) expression -> expression . TIMESEQ expression
    (91) expression -> expression . DIVEQ expression
    (92) expression -> expression . NULLASSIGN expression
    (93) expression -> expression . QMARK expression COLON expression

    COMMA           reduce using rule 120 (map_entry -> expression COLON expression .)
    RBRACE          reduce using rule 120 (map_entry -> expression COLON expression .)
    AND             shift and go to state 75
    OR              shift and go to state 76
    EQEQ            shift and go to state 77
    NEQ             shift and go to state 78
    MINSIGN         shift and go to state 79
    MAXSIGN         shift and go to state 80
    MINSIGNEQ       shift and go to state 81
    MAXSIGNEQ       shift and go to state 82
    IS              shift and go to state 83
    PLUSPLUS        shift and go to state 85
    MINUSMINUS      shift and go to state 86
    DOT             shift and go to state 87
    LBRACKET        shift and go to state 88
    LPAREN          shift and go to state 89
    NOT             shift and go to state 84
    PLUS            shift and go to state 90
    MINUS           shift and go to state 91
    TIMES           shift and go to state 92
    DIVIDE          shift and go to state 93
    INTDIV          shift and go to state 94
    EQUALS          shift and go to state 74
    PLUSEQ          shift and go to state 95
    MINUSEQ         shift and go to state 96
    TIMESEQ         shift and go to state 97
    DIVEQ           shift and go to state 98
    NULLASSIGN      shift and go to state 99
    QMARK           shift and go to state 100


state 245

    (102) if_else -> IF LPAREN expression RPAREN instruction ELSE . instruction
    (74) instruction -> . variable_declaration SEMICOLON
    (75) instruction -> . expression SEMICOLON
    (76) instruction -> . print_statement
    (77) instruction -> . if_else
    (78) instruction -> . while_loop
    (79) instruction -> . for_loop
    (80) instruction -> . return_statement
    (81) instruction -> . block_statement
    (82) instruction -> . throw_statement
    (85) variable_declaration -> . declaration_type ID
    (86) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (94) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (101) if_else -> . IF LPAREN expression RPAREN instruction
    (102) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (103) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (104) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (98) return_statement -> . RETURN expression SEMICOLON
    (99) return_statement -> . RETURN SEMICOLON
    (83) block_statement -> . LBRACE instructions RBRACE
    (84) throw_statement -> . THROW expression SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (66) term -> . factor
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 161
    PRINT           shift and go to state 176
    IF              shift and go to state 177
    WHILE           shift and go to state 178
    FOR             shift and go to state 179
    RETURN          shift and go to state 180
    THROW           shift and go to state 181
    ID              shift and go to state 175
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LPAREN          shift and go to state 58

    expression                     shift and go to state 167
    instruction                    shift and go to state 247
    variable_declaration           shift and go to state 166
    print_statement                shift and go to state 168
    if_else                        shift and go to state 169
    while_loop                     shift and go to state 170
    for_loop                       shift and go to state 171
    return_statement               shift and go to state 172
    block_statement                shift and go to state 173
    throw_statement                shift and go to state 174
    declaration_type               shift and go to state 160
    term                           shift and go to state 59
    primitive_type                 shift and go to state 182
    generic_type                   shift and go to state 16
    factor                         shift and go to state 61

state 246

    (104) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON . expression_opt RPAREN instruction
    (108) expression_opt -> . expression
    (109) expression_opt -> . empty
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (126) empty -> .
    (66) term -> . factor
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 60
    RPAREN          reduce using rule 126 (empty -> .)
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    ID              shift and go to state 53
    LPAREN          shift and go to state 58
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23

    expression_opt                 shift and go to state 248
    expression                     shift and go to state 241
    empty                          shift and go to state 242
    term                           shift and go to state 59
    factor                         shift and go to state 61
    primitive_type                 shift and go to state 62

state 247

    (102) if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .

    NOT             reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    MINUS           reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    LBRACKET        reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    LBRACE          reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    PRINT           reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    IF              reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    WHILE           reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    FOR             reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    RETURN          reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    THROW           reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    ID              reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    INT             reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    DOUBLE          reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    STRING          reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    BOOL            reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    VOID            reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    VAR             reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    DYNAMIC         reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    NUMBER          reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    STRING_LITERAL  reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    LPAREN          reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    RBRACE          reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    ELSE            reduce using rule 102 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)


state 248

    (104) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt . RPAREN instruction

    RPAREN          shift and go to state 249


state 249

    (104) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN . instruction
    (74) instruction -> . variable_declaration SEMICOLON
    (75) instruction -> . expression SEMICOLON
    (76) instruction -> . print_statement
    (77) instruction -> . if_else
    (78) instruction -> . while_loop
    (79) instruction -> . for_loop
    (80) instruction -> . return_statement
    (81) instruction -> . block_statement
    (82) instruction -> . throw_statement
    (85) variable_declaration -> . declaration_type ID
    (86) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression AND expression
    (41) expression -> . expression OR expression
    (42) expression -> . expression EQEQ expression
    (43) expression -> . expression NEQ expression
    (44) expression -> . expression MINSIGN expression
    (45) expression -> . expression MAXSIGN expression
    (46) expression -> . expression MINSIGNEQ expression
    (47) expression -> . expression MAXSIGNEQ expression
    (48) expression -> . expression IS declaration_type
    (49) expression -> . expression IS NOT declaration_type
    (50) expression -> . NOT expression
    (51) expression -> . MINUS expression
    (52) expression -> . expression PLUSPLUS
    (53) expression -> . expression MINUSMINUS
    (54) expression -> . expression DOT ID
    (55) expression -> . expression LBRACKET expression RBRACKET
    (56) expression -> . expression LPAREN arguments RPAREN
    (59) expression -> . expression NOT
    (60) expression -> . expression PLUS expression
    (61) expression -> . expression MINUS expression
    (62) expression -> . expression TIMES expression
    (63) expression -> . expression DIVIDE expression
    (64) expression -> . expression INTDIV expression
    (65) expression -> . term
    (87) expression -> . expression EQUALS expression
    (88) expression -> . expression PLUSEQ expression
    (89) expression -> . expression MINUSEQ expression
    (90) expression -> . expression TIMESEQ expression
    (91) expression -> . expression DIVEQ expression
    (92) expression -> . expression NULLASSIGN expression
    (93) expression -> . expression QMARK expression COLON expression
    (110) expression -> . LBRACKET expression_list RBRACKET
    (111) expression -> . LBRACE set_or_map_contents RBRACE
    (94) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (101) if_else -> . IF LPAREN expression RPAREN instruction
    (102) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (103) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (104) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (98) return_statement -> . RETURN expression SEMICOLON
    (99) return_statement -> . RETURN SEMICOLON
    (83) block_statement -> . LBRACE instructions RBRACE
    (84) throw_statement -> . THROW expression SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . ID
    (66) term -> . factor
    (30) primitive_type -> . INT
    (31) primitive_type -> . DOUBLE
    (32) primitive_type -> . STRING
    (33) primitive_type -> . BOOL
    (34) primitive_type -> . VOID
    (35) primitive_type -> . VAR
    (36) primitive_type -> . DYNAMIC
    (37) generic_type -> . ID MINSIGN type_list MAXSIGN
    (67) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (68) factor -> . NUMBER
    (69) factor -> . STRING_LITERAL
    (70) factor -> . ID
    (71) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 55
    MINUS           shift and go to state 56
    LBRACKET        shift and go to state 57
    LBRACE          shift and go to state 161
    PRINT           shift and go to state 176
    IF              shift and go to state 177
    WHILE           shift and go to state 178
    FOR             shift and go to state 179
    RETURN          shift and go to state 180
    THROW           shift and go to state 181
    ID              shift and go to state 175
    INT             shift and go to state 17
    DOUBLE          shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    VOID            shift and go to state 21
    VAR             shift and go to state 22
    DYNAMIC         shift and go to state 23
    NUMBER          shift and go to state 63
    STRING_LITERAL  shift and go to state 64
    LPAREN          shift and go to state 58

    instruction                    shift and go to state 250
    variable_declaration           shift and go to state 166
    expression                     shift and go to state 167
    print_statement                shift and go to state 168
    if_else                        shift and go to state 169
    while_loop                     shift and go to state 170
    for_loop                       shift and go to state 171
    return_statement               shift and go to state 172
    block_statement                shift and go to state 173
    throw_statement                shift and go to state 174
    declaration_type               shift and go to state 160
    term                           shift and go to state 59
    primitive_type                 shift and go to state 182
    generic_type                   shift and go to state 16
    factor                         shift and go to state 61

state 250

    (104) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .

    NOT             reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    MINUS           reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    LBRACKET        reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    LBRACE          reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    PRINT           reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    IF              reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    WHILE           reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    FOR             reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    RETURN          reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    THROW           reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    ID              reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    INT             reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    DOUBLE          reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    STRING          reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    BOOL            reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    VOID            reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    VAR             reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    DYNAMIC         reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    NUMBER          reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    STRING_LITERAL  reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    LPAREN          reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    RBRACE          reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    ELSE            reduce using rule 104 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINSIGN in state 11 resolved as shift
WARNING: shift/reduce conflict for MINSIGN in state 175 resolved as shift
WARNING: shift/reduce conflict for MINSIGN in state 199 resolved as shift
WARNING: shift/reduce conflict for AND in state 212 resolved as shift
WARNING: shift/reduce conflict for OR in state 212 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 212 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 212 resolved as shift
WARNING: shift/reduce conflict for MINSIGN in state 212 resolved as shift
WARNING: shift/reduce conflict for MAXSIGN in state 212 resolved as shift
WARNING: shift/reduce conflict for MINSIGNEQ in state 212 resolved as shift
WARNING: shift/reduce conflict for MAXSIGNEQ in state 212 resolved as shift
WARNING: shift/reduce conflict for IS in state 212 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 212 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 212 resolved as shift
WARNING: shift/reduce conflict for DOT in state 212 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 212 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 212 resolved as shift
WARNING: shift/reduce conflict for NOT in state 212 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 212 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 212 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 212 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 212 resolved as shift
WARNING: shift/reduce conflict for INTDIV in state 212 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 212 resolved as shift
WARNING: shift/reduce conflict for PLUSEQ in state 212 resolved as shift
WARNING: shift/reduce conflict for MINUSEQ in state 212 resolved as shift
WARNING: shift/reduce conflict for TIMESEQ in state 212 resolved as shift
WARNING: shift/reduce conflict for DIVEQ in state 212 resolved as shift
WARNING: shift/reduce conflict for NULLASSIGN in state 212 resolved as shift
WARNING: shift/reduce conflict for QMARK in state 212 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 238 resolved as shift
WARNING: reduce/reduce conflict in state 135 resolved using rule (arguments -> empty)
WARNING: rejected rule (expression_list -> empty) in state 135
WARNING: reduce/reduce conflict in state 198 resolved using rule (instructions -> empty)
WARNING: rejected rule (set_or_map_contents -> empty) in state 198
