Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    BREAK
    CASE
    COMMENT
    CONST
    CONTINUE
    EXTENDS
    FINAL
    IMPLEMENTS
    IMPORT
    INTDIV
    MODULE
    NULLCOALESCING
    QMARK_DOT
    SQUOTE
    SWITCH
    THEN

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> empty
Rule 4     declaration -> class
Rule 5     declaration -> function_declaration
Rule 6     declaration -> assignment SEMICOLON
Rule 7     class -> CLASS ID LBRACE class_body RBRACE
Rule 8     class_body -> class_member class_body
Rule 9     class_body -> empty
Rule 10    class_member -> class_property
Rule 11    class_member -> function_declaration
Rule 12    function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
Rule 13    function_name -> ID
Rule 14    function_name -> MAIN
Rule 15    class_property -> declaration_type ID SEMICOLON
Rule 16    declaration_type -> primitive_type
Rule 17    declaration_type -> generic_type
Rule 18    declaration_type -> ID
Rule 19    primitive_type -> INT
Rule 20    primitive_type -> DOUBLE
Rule 21    primitive_type -> STRING
Rule 22    primitive_type -> BOOL
Rule 23    primitive_type -> VOID
Rule 24    primitive_type -> VAR
Rule 25    generic_type -> ID MINSIGN type_list MAXSIGN
Rule 26    type_list -> type_list COMMA declaration_type
Rule 27    type_list -> declaration_type
Rule 28    expression -> expression AND expression
Rule 29    expression -> expression OR expression
Rule 30    expression -> expression EQEQ expression
Rule 31    expression -> expression NEQ expression
Rule 32    expression -> expression MINSIGN expression
Rule 33    expression -> expression MAXSIGN expression
Rule 34    expression -> expression MINSIGNEQ expression
Rule 35    expression -> expression MAXSIGNEQ expression
Rule 36    expression -> NOT expression
Rule 37    expression -> expression PLUSPLUS
Rule 38    expression -> expression MINUSMINUS
Rule 39    expression -> expression DOT ID
Rule 40    expression -> expression LBRACKET expression RBRACKET
Rule 41    expression -> expression LPAREN arguments RPAREN
Rule 42    arguments -> expression_list
Rule 43    arguments -> empty
Rule 44    expression -> expression NOT
Rule 45    expression -> expression PLUS expression
Rule 46    expression -> expression MINUS expression
Rule 47    expression -> expression TIMES expression
Rule 48    expression -> expression DIVIDE expression
Rule 49    expression -> term
Rule 50    term -> factor
Rule 51    factor -> primitive_type DOT ID LPAREN arguments RPAREN
Rule 52    factor -> NUMBER
Rule 53    factor -> STRING_LITERAL
Rule 54    factor -> ID
Rule 55    factor -> LPAREN expression RPAREN
Rule 56    instructions -> instruction instructions
Rule 57    instructions -> empty
Rule 58    instruction -> assignment SEMICOLON
Rule 59    instruction -> print_statement
Rule 60    instruction -> if_else
Rule 61    instruction -> while_loop
Rule 62    instruction -> for_loop
Rule 63    instruction -> return_statement
Rule 64    instruction -> block_statement
Rule 65    block_statement -> LBRACE instructions RBRACE
Rule 66    assignment -> declaration_type ID EQUALS expression
Rule 67    assignment -> ID assign_op expression
Rule 68    assign_op -> EQUALS
Rule 69    assign_op -> PLUSEQ
Rule 70    assign_op -> MINUSEQ
Rule 71    assign_op -> TIMESEQ
Rule 72    assign_op -> DIVEQ
Rule 73    assign_op -> NULLASSIGN
Rule 74    expression -> expression QMARK expression COLON expression
Rule 75    print_statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 76    parameters -> parameters COMMA declaration_type ID
Rule 77    parameters -> declaration_type ID
Rule 78    parameters -> empty
Rule 79    return_statement -> RETURN expression SEMICOLON
Rule 80    return_statement -> RETURN SEMICOLON
Rule 81    body -> instructions
Rule 82    if_else -> IF LPAREN expression RPAREN instruction
Rule 83    if_else -> IF LPAREN expression RPAREN instruction ELSE instruction
Rule 84    while_loop -> WHILE LPAREN expression RPAREN instruction
Rule 85    for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
Rule 86    for_initializer -> assignment
Rule 87    for_initializer -> empty
Rule 88    expression_opt -> expression
Rule 89    expression_opt -> empty
Rule 90    expression -> LBRACKET expression_list RBRACKET
Rule 91    expression -> LBRACE set_or_map_contents RBRACE
Rule 92    set_or_map_contents -> expression set_or_map_tail
Rule 93    set_or_map_contents -> empty
Rule 94    set_or_map_tail -> COLON expression map_tail
Rule 95    set_or_map_tail -> set_tail
Rule 96    map_tail -> COMMA map_entries
Rule 97    map_tail -> empty
Rule 98    map_entries -> map_entries COMMA map_entry
Rule 99    map_entries -> map_entry
Rule 100   map_entry -> expression COLON expression
Rule 101   set_tail -> COMMA expression_list
Rule 102   set_tail -> empty
Rule 103   expression_list -> expression COMMA expression_list
Rule 104   expression_list -> expression
Rule 105   expression_list -> empty
Rule 106   empty -> <empty>

Terminals, with rules where they appear

AND                  : 28
BOOL                 : 22
BREAK                : 
CASE                 : 
CLASS                : 7
COLON                : 74 94 100
COMMA                : 26 76 96 98 101 103
COMMENT              : 
CONST                : 
CONTINUE             : 
DIVEQ                : 72
DIVIDE               : 48
DOT                  : 39 51
DOUBLE               : 20
ELSE                 : 83
EQEQ                 : 30
EQUALS               : 66 68
EXTENDS              : 
FINAL                : 
FOR                  : 85
ID                   : 7 13 15 18 25 39 51 54 66 67 76 77
IF                   : 82 83
IMPLEMENTS           : 
IMPORT               : 
INT                  : 19
INTDIV               : 
LBRACE               : 7 12 65 91
LBRACKET             : 40 90
LPAREN               : 12 41 51 55 75 82 83 84 85
MAIN                 : 14
MAXSIGN              : 25 33
MAXSIGNEQ            : 35
MINSIGN              : 25 32
MINSIGNEQ            : 34
MINUS                : 46
MINUSEQ              : 70
MINUSMINUS           : 38
MODULE               : 
NEQ                  : 31
NOT                  : 36 44
NULLASSIGN           : 73
NULLCOALESCING       : 
NUMBER               : 52
OR                   : 29
PLUS                 : 45
PLUSEQ               : 69
PLUSPLUS             : 37
PRINT                : 75
QMARK                : 74
QMARK_DOT            : 
RBRACE               : 7 12 65 91
RBRACKET             : 40 90
RETURN               : 79 80
RPAREN               : 12 41 51 55 75 82 83 84 85
SEMICOLON            : 6 15 58 75 79 80 85 85
SQUOTE               : 
STRING               : 21
STRING_LITERAL       : 53
SWITCH               : 
THEN                 : 
TIMES                : 47
TIMESEQ              : 71
VAR                  : 24
VOID                 : 23
WHILE                : 84
error                : 

Nonterminals, with rules where they appear

arguments            : 41 51
assign_op            : 67
assignment           : 6 58 86
block_statement      : 64
body                 : 12
class                : 4
class_body           : 7 8
class_member         : 8
class_property       : 10
declaration          : 2
declaration_list     : 1 2
declaration_type     : 12 15 26 27 66 76 77
empty                : 3 9 43 57 78 87 89 93 97 102 105
expression           : 28 28 29 29 30 30 31 31 32 32 33 33 34 34 35 35 36 37 38 39 40 40 41 44 45 45 46 46 47 47 48 48 55 66 67 74 74 74 75 79 82 83 84 88 92 94 100 100 103 104
expression_list      : 42 90 101 103
expression_opt       : 85 85
factor               : 50
for_initializer      : 85
for_loop             : 62
function_declaration : 5 11
function_name        : 12
generic_type         : 17
if_else              : 60
instruction          : 56 82 83 83 84 85
instructions         : 56 65 81
map_entries          : 96 98
map_entry            : 98 99
map_tail             : 94
parameters           : 12 76
primitive_type       : 16 51
print_statement      : 59
program              : 0
return_statement     : 63
set_or_map_contents  : 91
set_or_map_tail      : 92
set_tail             : 95
term                 : 49
type_list            : 25 26
while_loop           : 61

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . empty
    (106) empty -> .

    CLASS           reduce using rule 106 (empty -> .)
    ID              reduce using rule 106 (empty -> .)
    INT             reduce using rule 106 (empty -> .)
    DOUBLE          reduce using rule 106 (empty -> .)
    STRING          reduce using rule 106 (empty -> .)
    BOOL            reduce using rule 106 (empty -> .)
    VOID            reduce using rule 106 (empty -> .)
    VAR             reduce using rule 106 (empty -> .)
    $end            reduce using rule 106 (empty -> .)

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . class
    (5) declaration -> . function_declaration
    (6) declaration -> . assignment SEMICOLON
    (7) class -> . CLASS ID LBRACE class_body RBRACE
    (12) function_declaration -> . declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (66) assignment -> . declaration_type ID EQUALS expression
    (67) assignment -> . ID assign_op expression
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    $end            reduce using rule 1 (program -> declaration_list .)
    CLASS           shift and go to state 8
    ID              shift and go to state 9
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    declaration                    shift and go to state 4
    class                          shift and go to state 5
    function_declaration           shift and go to state 6
    assignment                     shift and go to state 7
    declaration_type               shift and go to state 10
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 3

    (3) declaration_list -> empty .

    CLASS           reduce using rule 3 (declaration_list -> empty .)
    ID              reduce using rule 3 (declaration_list -> empty .)
    INT             reduce using rule 3 (declaration_list -> empty .)
    DOUBLE          reduce using rule 3 (declaration_list -> empty .)
    STRING          reduce using rule 3 (declaration_list -> empty .)
    BOOL            reduce using rule 3 (declaration_list -> empty .)
    VOID            reduce using rule 3 (declaration_list -> empty .)
    VAR             reduce using rule 3 (declaration_list -> empty .)
    $end            reduce using rule 3 (declaration_list -> empty .)


state 4

    (2) declaration_list -> declaration_list declaration .

    CLASS           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DOUBLE          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    STRING          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    BOOL            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VAR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 5

    (4) declaration -> class .

    CLASS           reduce using rule 4 (declaration -> class .)
    ID              reduce using rule 4 (declaration -> class .)
    INT             reduce using rule 4 (declaration -> class .)
    DOUBLE          reduce using rule 4 (declaration -> class .)
    STRING          reduce using rule 4 (declaration -> class .)
    BOOL            reduce using rule 4 (declaration -> class .)
    VOID            reduce using rule 4 (declaration -> class .)
    VAR             reduce using rule 4 (declaration -> class .)
    $end            reduce using rule 4 (declaration -> class .)


state 6

    (5) declaration -> function_declaration .

    CLASS           reduce using rule 5 (declaration -> function_declaration .)
    ID              reduce using rule 5 (declaration -> function_declaration .)
    INT             reduce using rule 5 (declaration -> function_declaration .)
    DOUBLE          reduce using rule 5 (declaration -> function_declaration .)
    STRING          reduce using rule 5 (declaration -> function_declaration .)
    BOOL            reduce using rule 5 (declaration -> function_declaration .)
    VOID            reduce using rule 5 (declaration -> function_declaration .)
    VAR             reduce using rule 5 (declaration -> function_declaration .)
    $end            reduce using rule 5 (declaration -> function_declaration .)


state 7

    (6) declaration -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 19


state 8

    (7) class -> CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 20


state 9

    (67) assignment -> ID . assign_op expression
    (18) declaration_type -> ID .
    (25) generic_type -> ID . MINSIGN type_list MAXSIGN
    (68) assign_op -> . EQUALS
    (69) assign_op -> . PLUSEQ
    (70) assign_op -> . MINUSEQ
    (71) assign_op -> . TIMESEQ
    (72) assign_op -> . DIVEQ
    (73) assign_op -> . NULLASSIGN

    ID              reduce using rule 18 (declaration_type -> ID .)
    MAIN            reduce using rule 18 (declaration_type -> ID .)
    MINSIGN         shift and go to state 22
    EQUALS          shift and go to state 23
    PLUSEQ          shift and go to state 24
    MINUSEQ         shift and go to state 25
    TIMESEQ         shift and go to state 26
    DIVEQ           shift and go to state 27
    NULLASSIGN      shift and go to state 28

    assign_op                      shift and go to state 21

state 10

    (12) function_declaration -> declaration_type . function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (66) assignment -> declaration_type . ID EQUALS expression
    (13) function_name -> . ID
    (14) function_name -> . MAIN

    ID              shift and go to state 30
    MAIN            shift and go to state 31

    function_name                  shift and go to state 29

state 11

    (16) declaration_type -> primitive_type .

    ID              reduce using rule 16 (declaration_type -> primitive_type .)
    MAIN            reduce using rule 16 (declaration_type -> primitive_type .)
    MAXSIGN         reduce using rule 16 (declaration_type -> primitive_type .)
    COMMA           reduce using rule 16 (declaration_type -> primitive_type .)


state 12

    (17) declaration_type -> generic_type .

    ID              reduce using rule 17 (declaration_type -> generic_type .)
    MAIN            reduce using rule 17 (declaration_type -> generic_type .)
    MAXSIGN         reduce using rule 17 (declaration_type -> generic_type .)
    COMMA           reduce using rule 17 (declaration_type -> generic_type .)


state 13

    (19) primitive_type -> INT .

    ID              reduce using rule 19 (primitive_type -> INT .)
    MAIN            reduce using rule 19 (primitive_type -> INT .)
    DOT             reduce using rule 19 (primitive_type -> INT .)
    MAXSIGN         reduce using rule 19 (primitive_type -> INT .)
    COMMA           reduce using rule 19 (primitive_type -> INT .)


state 14

    (20) primitive_type -> DOUBLE .

    ID              reduce using rule 20 (primitive_type -> DOUBLE .)
    MAIN            reduce using rule 20 (primitive_type -> DOUBLE .)
    DOT             reduce using rule 20 (primitive_type -> DOUBLE .)
    MAXSIGN         reduce using rule 20 (primitive_type -> DOUBLE .)
    COMMA           reduce using rule 20 (primitive_type -> DOUBLE .)


state 15

    (21) primitive_type -> STRING .

    ID              reduce using rule 21 (primitive_type -> STRING .)
    MAIN            reduce using rule 21 (primitive_type -> STRING .)
    DOT             reduce using rule 21 (primitive_type -> STRING .)
    MAXSIGN         reduce using rule 21 (primitive_type -> STRING .)
    COMMA           reduce using rule 21 (primitive_type -> STRING .)


state 16

    (22) primitive_type -> BOOL .

    ID              reduce using rule 22 (primitive_type -> BOOL .)
    MAIN            reduce using rule 22 (primitive_type -> BOOL .)
    DOT             reduce using rule 22 (primitive_type -> BOOL .)
    MAXSIGN         reduce using rule 22 (primitive_type -> BOOL .)
    COMMA           reduce using rule 22 (primitive_type -> BOOL .)


state 17

    (23) primitive_type -> VOID .

    ID              reduce using rule 23 (primitive_type -> VOID .)
    MAIN            reduce using rule 23 (primitive_type -> VOID .)
    DOT             reduce using rule 23 (primitive_type -> VOID .)
    MAXSIGN         reduce using rule 23 (primitive_type -> VOID .)
    COMMA           reduce using rule 23 (primitive_type -> VOID .)


state 18

    (24) primitive_type -> VAR .

    ID              reduce using rule 24 (primitive_type -> VAR .)
    MAIN            reduce using rule 24 (primitive_type -> VAR .)
    DOT             reduce using rule 24 (primitive_type -> VAR .)
    MAXSIGN         reduce using rule 24 (primitive_type -> VAR .)
    COMMA           reduce using rule 24 (primitive_type -> VAR .)


state 19

    (6) declaration -> assignment SEMICOLON .

    CLASS           reduce using rule 6 (declaration -> assignment SEMICOLON .)
    ID              reduce using rule 6 (declaration -> assignment SEMICOLON .)
    INT             reduce using rule 6 (declaration -> assignment SEMICOLON .)
    DOUBLE          reduce using rule 6 (declaration -> assignment SEMICOLON .)
    STRING          reduce using rule 6 (declaration -> assignment SEMICOLON .)
    BOOL            reduce using rule 6 (declaration -> assignment SEMICOLON .)
    VOID            reduce using rule 6 (declaration -> assignment SEMICOLON .)
    VAR             reduce using rule 6 (declaration -> assignment SEMICOLON .)
    $end            reduce using rule 6 (declaration -> assignment SEMICOLON .)


state 20

    (7) class -> CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 32


state 21

    (67) assignment -> ID assign_op . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 34
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 22

    (25) generic_type -> ID MINSIGN . type_list MAXSIGN
    (26) type_list -> . type_list COMMA declaration_type
    (27) type_list -> . declaration_type
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 44
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    type_list                      shift and go to state 45
    declaration_type               shift and go to state 46
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 23

    (68) assign_op -> EQUALS .

    NOT             reduce using rule 68 (assign_op -> EQUALS .)
    LBRACKET        reduce using rule 68 (assign_op -> EQUALS .)
    LBRACE          reduce using rule 68 (assign_op -> EQUALS .)
    NUMBER          reduce using rule 68 (assign_op -> EQUALS .)
    STRING_LITERAL  reduce using rule 68 (assign_op -> EQUALS .)
    ID              reduce using rule 68 (assign_op -> EQUALS .)
    LPAREN          reduce using rule 68 (assign_op -> EQUALS .)
    INT             reduce using rule 68 (assign_op -> EQUALS .)
    DOUBLE          reduce using rule 68 (assign_op -> EQUALS .)
    STRING          reduce using rule 68 (assign_op -> EQUALS .)
    BOOL            reduce using rule 68 (assign_op -> EQUALS .)
    VOID            reduce using rule 68 (assign_op -> EQUALS .)
    VAR             reduce using rule 68 (assign_op -> EQUALS .)


state 24

    (69) assign_op -> PLUSEQ .

    NOT             reduce using rule 69 (assign_op -> PLUSEQ .)
    LBRACKET        reduce using rule 69 (assign_op -> PLUSEQ .)
    LBRACE          reduce using rule 69 (assign_op -> PLUSEQ .)
    NUMBER          reduce using rule 69 (assign_op -> PLUSEQ .)
    STRING_LITERAL  reduce using rule 69 (assign_op -> PLUSEQ .)
    ID              reduce using rule 69 (assign_op -> PLUSEQ .)
    LPAREN          reduce using rule 69 (assign_op -> PLUSEQ .)
    INT             reduce using rule 69 (assign_op -> PLUSEQ .)
    DOUBLE          reduce using rule 69 (assign_op -> PLUSEQ .)
    STRING          reduce using rule 69 (assign_op -> PLUSEQ .)
    BOOL            reduce using rule 69 (assign_op -> PLUSEQ .)
    VOID            reduce using rule 69 (assign_op -> PLUSEQ .)
    VAR             reduce using rule 69 (assign_op -> PLUSEQ .)


state 25

    (70) assign_op -> MINUSEQ .

    NOT             reduce using rule 70 (assign_op -> MINUSEQ .)
    LBRACKET        reduce using rule 70 (assign_op -> MINUSEQ .)
    LBRACE          reduce using rule 70 (assign_op -> MINUSEQ .)
    NUMBER          reduce using rule 70 (assign_op -> MINUSEQ .)
    STRING_LITERAL  reduce using rule 70 (assign_op -> MINUSEQ .)
    ID              reduce using rule 70 (assign_op -> MINUSEQ .)
    LPAREN          reduce using rule 70 (assign_op -> MINUSEQ .)
    INT             reduce using rule 70 (assign_op -> MINUSEQ .)
    DOUBLE          reduce using rule 70 (assign_op -> MINUSEQ .)
    STRING          reduce using rule 70 (assign_op -> MINUSEQ .)
    BOOL            reduce using rule 70 (assign_op -> MINUSEQ .)
    VOID            reduce using rule 70 (assign_op -> MINUSEQ .)
    VAR             reduce using rule 70 (assign_op -> MINUSEQ .)


state 26

    (71) assign_op -> TIMESEQ .

    NOT             reduce using rule 71 (assign_op -> TIMESEQ .)
    LBRACKET        reduce using rule 71 (assign_op -> TIMESEQ .)
    LBRACE          reduce using rule 71 (assign_op -> TIMESEQ .)
    NUMBER          reduce using rule 71 (assign_op -> TIMESEQ .)
    STRING_LITERAL  reduce using rule 71 (assign_op -> TIMESEQ .)
    ID              reduce using rule 71 (assign_op -> TIMESEQ .)
    LPAREN          reduce using rule 71 (assign_op -> TIMESEQ .)
    INT             reduce using rule 71 (assign_op -> TIMESEQ .)
    DOUBLE          reduce using rule 71 (assign_op -> TIMESEQ .)
    STRING          reduce using rule 71 (assign_op -> TIMESEQ .)
    BOOL            reduce using rule 71 (assign_op -> TIMESEQ .)
    VOID            reduce using rule 71 (assign_op -> TIMESEQ .)
    VAR             reduce using rule 71 (assign_op -> TIMESEQ .)


state 27

    (72) assign_op -> DIVEQ .

    NOT             reduce using rule 72 (assign_op -> DIVEQ .)
    LBRACKET        reduce using rule 72 (assign_op -> DIVEQ .)
    LBRACE          reduce using rule 72 (assign_op -> DIVEQ .)
    NUMBER          reduce using rule 72 (assign_op -> DIVEQ .)
    STRING_LITERAL  reduce using rule 72 (assign_op -> DIVEQ .)
    ID              reduce using rule 72 (assign_op -> DIVEQ .)
    LPAREN          reduce using rule 72 (assign_op -> DIVEQ .)
    INT             reduce using rule 72 (assign_op -> DIVEQ .)
    DOUBLE          reduce using rule 72 (assign_op -> DIVEQ .)
    STRING          reduce using rule 72 (assign_op -> DIVEQ .)
    BOOL            reduce using rule 72 (assign_op -> DIVEQ .)
    VOID            reduce using rule 72 (assign_op -> DIVEQ .)
    VAR             reduce using rule 72 (assign_op -> DIVEQ .)


state 28

    (73) assign_op -> NULLASSIGN .

    NOT             reduce using rule 73 (assign_op -> NULLASSIGN .)
    LBRACKET        reduce using rule 73 (assign_op -> NULLASSIGN .)
    LBRACE          reduce using rule 73 (assign_op -> NULLASSIGN .)
    NUMBER          reduce using rule 73 (assign_op -> NULLASSIGN .)
    STRING_LITERAL  reduce using rule 73 (assign_op -> NULLASSIGN .)
    ID              reduce using rule 73 (assign_op -> NULLASSIGN .)
    LPAREN          reduce using rule 73 (assign_op -> NULLASSIGN .)
    INT             reduce using rule 73 (assign_op -> NULLASSIGN .)
    DOUBLE          reduce using rule 73 (assign_op -> NULLASSIGN .)
    STRING          reduce using rule 73 (assign_op -> NULLASSIGN .)
    BOOL            reduce using rule 73 (assign_op -> NULLASSIGN .)
    VOID            reduce using rule 73 (assign_op -> NULLASSIGN .)
    VAR             reduce using rule 73 (assign_op -> NULLASSIGN .)


state 29

    (12) function_declaration -> declaration_type function_name . LPAREN parameters RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 47


state 30

    (66) assignment -> declaration_type ID . EQUALS expression
    (13) function_name -> ID .

    EQUALS          shift and go to state 48
    LPAREN          reduce using rule 13 (function_name -> ID .)


state 31

    (14) function_name -> MAIN .

    LPAREN          reduce using rule 14 (function_name -> MAIN .)


state 32

    (7) class -> CLASS ID LBRACE . class_body RBRACE
    (8) class_body -> . class_member class_body
    (9) class_body -> . empty
    (10) class_member -> . class_property
    (11) class_member -> . function_declaration
    (106) empty -> .
    (15) class_property -> . declaration_type ID SEMICOLON
    (12) function_declaration -> . declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    RBRACE          reduce using rule 106 (empty -> .)
    ID              shift and go to state 44
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    class_body                     shift and go to state 49
    class_member                   shift and go to state 50
    empty                          shift and go to state 51
    class_property                 shift and go to state 52
    function_declaration           shift and go to state 53
    declaration_type               shift and go to state 54
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 33

    (54) factor -> ID .

    AND             reduce using rule 54 (factor -> ID .)
    OR              reduce using rule 54 (factor -> ID .)
    EQEQ            reduce using rule 54 (factor -> ID .)
    NEQ             reduce using rule 54 (factor -> ID .)
    MINSIGN         reduce using rule 54 (factor -> ID .)
    MAXSIGN         reduce using rule 54 (factor -> ID .)
    MINSIGNEQ       reduce using rule 54 (factor -> ID .)
    MAXSIGNEQ       reduce using rule 54 (factor -> ID .)
    PLUSPLUS        reduce using rule 54 (factor -> ID .)
    MINUSMINUS      reduce using rule 54 (factor -> ID .)
    DOT             reduce using rule 54 (factor -> ID .)
    LBRACKET        reduce using rule 54 (factor -> ID .)
    LPAREN          reduce using rule 54 (factor -> ID .)
    NOT             reduce using rule 54 (factor -> ID .)
    PLUS            reduce using rule 54 (factor -> ID .)
    MINUS           reduce using rule 54 (factor -> ID .)
    TIMES           reduce using rule 54 (factor -> ID .)
    DIVIDE          reduce using rule 54 (factor -> ID .)
    QMARK           reduce using rule 54 (factor -> ID .)
    SEMICOLON       reduce using rule 54 (factor -> ID .)
    COMMA           reduce using rule 54 (factor -> ID .)
    RBRACKET        reduce using rule 54 (factor -> ID .)
    RPAREN          reduce using rule 54 (factor -> ID .)
    COLON           reduce using rule 54 (factor -> ID .)
    RBRACE          reduce using rule 54 (factor -> ID .)


state 34

    (67) assignment -> ID assign_op expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 67 (assignment -> ID assign_op expression .)
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 35

    (36) expression -> NOT . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 74
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 36

    (90) expression -> LBRACKET . expression_list RBRACKET
    (103) expression_list -> . expression COMMA expression_list
    (104) expression_list -> . expression
    (105) expression_list -> . empty
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (106) empty -> .
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    RBRACKET        reduce using rule 106 (empty -> .)
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression_list                shift and go to state 75
    expression                     shift and go to state 76
    empty                          shift and go to state 77
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 37

    (55) factor -> LPAREN . expression RPAREN
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 78
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 38

    (49) expression -> term .

    AND             reduce using rule 49 (expression -> term .)
    OR              reduce using rule 49 (expression -> term .)
    EQEQ            reduce using rule 49 (expression -> term .)
    NEQ             reduce using rule 49 (expression -> term .)
    MINSIGN         reduce using rule 49 (expression -> term .)
    MAXSIGN         reduce using rule 49 (expression -> term .)
    MINSIGNEQ       reduce using rule 49 (expression -> term .)
    MAXSIGNEQ       reduce using rule 49 (expression -> term .)
    PLUSPLUS        reduce using rule 49 (expression -> term .)
    MINUSMINUS      reduce using rule 49 (expression -> term .)
    DOT             reduce using rule 49 (expression -> term .)
    LBRACKET        reduce using rule 49 (expression -> term .)
    LPAREN          reduce using rule 49 (expression -> term .)
    NOT             reduce using rule 49 (expression -> term .)
    PLUS            reduce using rule 49 (expression -> term .)
    MINUS           reduce using rule 49 (expression -> term .)
    TIMES           reduce using rule 49 (expression -> term .)
    DIVIDE          reduce using rule 49 (expression -> term .)
    QMARK           reduce using rule 49 (expression -> term .)
    SEMICOLON       reduce using rule 49 (expression -> term .)
    COMMA           reduce using rule 49 (expression -> term .)
    RBRACKET        reduce using rule 49 (expression -> term .)
    RPAREN          reduce using rule 49 (expression -> term .)
    COLON           reduce using rule 49 (expression -> term .)
    RBRACE          reduce using rule 49 (expression -> term .)


state 39

    (91) expression -> LBRACE . set_or_map_contents RBRACE
    (92) set_or_map_contents -> . expression set_or_map_tail
    (93) set_or_map_contents -> . empty
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (106) empty -> .
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    RBRACE          reduce using rule 106 (empty -> .)
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    set_or_map_contents            shift and go to state 79
    expression                     shift and go to state 80
    empty                          shift and go to state 81
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 40

    (50) term -> factor .

    AND             reduce using rule 50 (term -> factor .)
    OR              reduce using rule 50 (term -> factor .)
    EQEQ            reduce using rule 50 (term -> factor .)
    NEQ             reduce using rule 50 (term -> factor .)
    MINSIGN         reduce using rule 50 (term -> factor .)
    MAXSIGN         reduce using rule 50 (term -> factor .)
    MINSIGNEQ       reduce using rule 50 (term -> factor .)
    MAXSIGNEQ       reduce using rule 50 (term -> factor .)
    PLUSPLUS        reduce using rule 50 (term -> factor .)
    MINUSMINUS      reduce using rule 50 (term -> factor .)
    DOT             reduce using rule 50 (term -> factor .)
    LBRACKET        reduce using rule 50 (term -> factor .)
    LPAREN          reduce using rule 50 (term -> factor .)
    NOT             reduce using rule 50 (term -> factor .)
    PLUS            reduce using rule 50 (term -> factor .)
    MINUS           reduce using rule 50 (term -> factor .)
    TIMES           reduce using rule 50 (term -> factor .)
    DIVIDE          reduce using rule 50 (term -> factor .)
    QMARK           reduce using rule 50 (term -> factor .)
    SEMICOLON       reduce using rule 50 (term -> factor .)
    COMMA           reduce using rule 50 (term -> factor .)
    RBRACKET        reduce using rule 50 (term -> factor .)
    RPAREN          reduce using rule 50 (term -> factor .)
    COLON           reduce using rule 50 (term -> factor .)
    RBRACE          reduce using rule 50 (term -> factor .)


state 41

    (51) factor -> primitive_type . DOT ID LPAREN arguments RPAREN

    DOT             shift and go to state 82


state 42

    (52) factor -> NUMBER .

    AND             reduce using rule 52 (factor -> NUMBER .)
    OR              reduce using rule 52 (factor -> NUMBER .)
    EQEQ            reduce using rule 52 (factor -> NUMBER .)
    NEQ             reduce using rule 52 (factor -> NUMBER .)
    MINSIGN         reduce using rule 52 (factor -> NUMBER .)
    MAXSIGN         reduce using rule 52 (factor -> NUMBER .)
    MINSIGNEQ       reduce using rule 52 (factor -> NUMBER .)
    MAXSIGNEQ       reduce using rule 52 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 52 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 52 (factor -> NUMBER .)
    DOT             reduce using rule 52 (factor -> NUMBER .)
    LBRACKET        reduce using rule 52 (factor -> NUMBER .)
    LPAREN          reduce using rule 52 (factor -> NUMBER .)
    NOT             reduce using rule 52 (factor -> NUMBER .)
    PLUS            reduce using rule 52 (factor -> NUMBER .)
    MINUS           reduce using rule 52 (factor -> NUMBER .)
    TIMES           reduce using rule 52 (factor -> NUMBER .)
    DIVIDE          reduce using rule 52 (factor -> NUMBER .)
    QMARK           reduce using rule 52 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 52 (factor -> NUMBER .)
    COMMA           reduce using rule 52 (factor -> NUMBER .)
    RBRACKET        reduce using rule 52 (factor -> NUMBER .)
    RPAREN          reduce using rule 52 (factor -> NUMBER .)
    COLON           reduce using rule 52 (factor -> NUMBER .)
    RBRACE          reduce using rule 52 (factor -> NUMBER .)


state 43

    (53) factor -> STRING_LITERAL .

    AND             reduce using rule 53 (factor -> STRING_LITERAL .)
    OR              reduce using rule 53 (factor -> STRING_LITERAL .)
    EQEQ            reduce using rule 53 (factor -> STRING_LITERAL .)
    NEQ             reduce using rule 53 (factor -> STRING_LITERAL .)
    MINSIGN         reduce using rule 53 (factor -> STRING_LITERAL .)
    MAXSIGN         reduce using rule 53 (factor -> STRING_LITERAL .)
    MINSIGNEQ       reduce using rule 53 (factor -> STRING_LITERAL .)
    MAXSIGNEQ       reduce using rule 53 (factor -> STRING_LITERAL .)
    PLUSPLUS        reduce using rule 53 (factor -> STRING_LITERAL .)
    MINUSMINUS      reduce using rule 53 (factor -> STRING_LITERAL .)
    DOT             reduce using rule 53 (factor -> STRING_LITERAL .)
    LBRACKET        reduce using rule 53 (factor -> STRING_LITERAL .)
    LPAREN          reduce using rule 53 (factor -> STRING_LITERAL .)
    NOT             reduce using rule 53 (factor -> STRING_LITERAL .)
    PLUS            reduce using rule 53 (factor -> STRING_LITERAL .)
    MINUS           reduce using rule 53 (factor -> STRING_LITERAL .)
    TIMES           reduce using rule 53 (factor -> STRING_LITERAL .)
    DIVIDE          reduce using rule 53 (factor -> STRING_LITERAL .)
    QMARK           reduce using rule 53 (factor -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 53 (factor -> STRING_LITERAL .)
    COMMA           reduce using rule 53 (factor -> STRING_LITERAL .)
    RBRACKET        reduce using rule 53 (factor -> STRING_LITERAL .)
    RPAREN          reduce using rule 53 (factor -> STRING_LITERAL .)
    COLON           reduce using rule 53 (factor -> STRING_LITERAL .)
    RBRACE          reduce using rule 53 (factor -> STRING_LITERAL .)


state 44

    (18) declaration_type -> ID .
    (25) generic_type -> ID . MINSIGN type_list MAXSIGN

    MAXSIGN         reduce using rule 18 (declaration_type -> ID .)
    COMMA           reduce using rule 18 (declaration_type -> ID .)
    ID              reduce using rule 18 (declaration_type -> ID .)
    MAIN            reduce using rule 18 (declaration_type -> ID .)
    MINSIGN         shift and go to state 22


state 45

    (25) generic_type -> ID MINSIGN type_list . MAXSIGN
    (26) type_list -> type_list . COMMA declaration_type

    MAXSIGN         shift and go to state 83
    COMMA           shift and go to state 84


state 46

    (27) type_list -> declaration_type .

    MAXSIGN         reduce using rule 27 (type_list -> declaration_type .)
    COMMA           reduce using rule 27 (type_list -> declaration_type .)


state 47

    (12) function_declaration -> declaration_type function_name LPAREN . parameters RPAREN LBRACE body RBRACE
    (76) parameters -> . parameters COMMA declaration_type ID
    (77) parameters -> . declaration_type ID
    (78) parameters -> . empty
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (106) empty -> .
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 44
    RPAREN          reduce using rule 106 (empty -> .)
    COMMA           reduce using rule 106 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    declaration_type               shift and go to state 85
    parameters                     shift and go to state 86
    empty                          shift and go to state 87
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 48

    (66) assignment -> declaration_type ID EQUALS . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 88
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 49

    (7) class -> CLASS ID LBRACE class_body . RBRACE

    RBRACE          shift and go to state 89


state 50

    (8) class_body -> class_member . class_body
    (8) class_body -> . class_member class_body
    (9) class_body -> . empty
    (10) class_member -> . class_property
    (11) class_member -> . function_declaration
    (106) empty -> .
    (15) class_property -> . declaration_type ID SEMICOLON
    (12) function_declaration -> . declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    RBRACE          reduce using rule 106 (empty -> .)
    ID              shift and go to state 44
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    class_member                   shift and go to state 50
    class_body                     shift and go to state 90
    empty                          shift and go to state 51
    class_property                 shift and go to state 52
    function_declaration           shift and go to state 53
    declaration_type               shift and go to state 54
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 51

    (9) class_body -> empty .

    RBRACE          reduce using rule 9 (class_body -> empty .)


state 52

    (10) class_member -> class_property .

    ID              reduce using rule 10 (class_member -> class_property .)
    INT             reduce using rule 10 (class_member -> class_property .)
    DOUBLE          reduce using rule 10 (class_member -> class_property .)
    STRING          reduce using rule 10 (class_member -> class_property .)
    BOOL            reduce using rule 10 (class_member -> class_property .)
    VOID            reduce using rule 10 (class_member -> class_property .)
    VAR             reduce using rule 10 (class_member -> class_property .)
    RBRACE          reduce using rule 10 (class_member -> class_property .)


state 53

    (11) class_member -> function_declaration .

    ID              reduce using rule 11 (class_member -> function_declaration .)
    INT             reduce using rule 11 (class_member -> function_declaration .)
    DOUBLE          reduce using rule 11 (class_member -> function_declaration .)
    STRING          reduce using rule 11 (class_member -> function_declaration .)
    BOOL            reduce using rule 11 (class_member -> function_declaration .)
    VOID            reduce using rule 11 (class_member -> function_declaration .)
    VAR             reduce using rule 11 (class_member -> function_declaration .)
    RBRACE          reduce using rule 11 (class_member -> function_declaration .)


state 54

    (15) class_property -> declaration_type . ID SEMICOLON
    (12) function_declaration -> declaration_type . function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (13) function_name -> . ID
    (14) function_name -> . MAIN

    ID              shift and go to state 91
    MAIN            shift and go to state 31

    function_name                  shift and go to state 29

state 55

    (28) expression -> expression AND . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 92
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 56

    (29) expression -> expression OR . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 93
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 57

    (30) expression -> expression EQEQ . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 94
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 58

    (31) expression -> expression NEQ . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 95
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 59

    (32) expression -> expression MINSIGN . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 96
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 60

    (33) expression -> expression MAXSIGN . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 97
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 61

    (34) expression -> expression MINSIGNEQ . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 98
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 62

    (35) expression -> expression MAXSIGNEQ . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 99
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 63

    (37) expression -> expression PLUSPLUS .

    AND             reduce using rule 37 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 37 (expression -> expression PLUSPLUS .)
    EQEQ            reduce using rule 37 (expression -> expression PLUSPLUS .)
    NEQ             reduce using rule 37 (expression -> expression PLUSPLUS .)
    MINSIGN         reduce using rule 37 (expression -> expression PLUSPLUS .)
    MAXSIGN         reduce using rule 37 (expression -> expression PLUSPLUS .)
    MINSIGNEQ       reduce using rule 37 (expression -> expression PLUSPLUS .)
    MAXSIGNEQ       reduce using rule 37 (expression -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 37 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 37 (expression -> expression PLUSPLUS .)
    DOT             reduce using rule 37 (expression -> expression PLUSPLUS .)
    LBRACKET        reduce using rule 37 (expression -> expression PLUSPLUS .)
    LPAREN          reduce using rule 37 (expression -> expression PLUSPLUS .)
    NOT             reduce using rule 37 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 37 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 37 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 37 (expression -> expression PLUSPLUS .)
    DIVIDE          reduce using rule 37 (expression -> expression PLUSPLUS .)
    QMARK           reduce using rule 37 (expression -> expression PLUSPLUS .)
    SEMICOLON       reduce using rule 37 (expression -> expression PLUSPLUS .)
    COMMA           reduce using rule 37 (expression -> expression PLUSPLUS .)
    RBRACKET        reduce using rule 37 (expression -> expression PLUSPLUS .)
    RPAREN          reduce using rule 37 (expression -> expression PLUSPLUS .)
    COLON           reduce using rule 37 (expression -> expression PLUSPLUS .)
    RBRACE          reduce using rule 37 (expression -> expression PLUSPLUS .)


state 64

    (38) expression -> expression MINUSMINUS .

    AND             reduce using rule 38 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 38 (expression -> expression MINUSMINUS .)
    EQEQ            reduce using rule 38 (expression -> expression MINUSMINUS .)
    NEQ             reduce using rule 38 (expression -> expression MINUSMINUS .)
    MINSIGN         reduce using rule 38 (expression -> expression MINUSMINUS .)
    MAXSIGN         reduce using rule 38 (expression -> expression MINUSMINUS .)
    MINSIGNEQ       reduce using rule 38 (expression -> expression MINUSMINUS .)
    MAXSIGNEQ       reduce using rule 38 (expression -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 38 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 38 (expression -> expression MINUSMINUS .)
    DOT             reduce using rule 38 (expression -> expression MINUSMINUS .)
    LBRACKET        reduce using rule 38 (expression -> expression MINUSMINUS .)
    LPAREN          reduce using rule 38 (expression -> expression MINUSMINUS .)
    NOT             reduce using rule 38 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 38 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 38 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 38 (expression -> expression MINUSMINUS .)
    DIVIDE          reduce using rule 38 (expression -> expression MINUSMINUS .)
    QMARK           reduce using rule 38 (expression -> expression MINUSMINUS .)
    SEMICOLON       reduce using rule 38 (expression -> expression MINUSMINUS .)
    COMMA           reduce using rule 38 (expression -> expression MINUSMINUS .)
    RBRACKET        reduce using rule 38 (expression -> expression MINUSMINUS .)
    RPAREN          reduce using rule 38 (expression -> expression MINUSMINUS .)
    COLON           reduce using rule 38 (expression -> expression MINUSMINUS .)
    RBRACE          reduce using rule 38 (expression -> expression MINUSMINUS .)


state 65

    (39) expression -> expression DOT . ID

    ID              shift and go to state 100


state 66

    (40) expression -> expression LBRACKET . expression RBRACKET
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 101
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 67

    (41) expression -> expression LPAREN . arguments RPAREN
    (42) arguments -> . expression_list
    (43) arguments -> . empty
    (103) expression_list -> . expression COMMA expression_list
    (104) expression_list -> . expression
    (105) expression_list -> . empty
    (106) empty -> .
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    RPAREN          reduce using rule 106 (empty -> .)
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 76
    arguments                      shift and go to state 102
    expression_list                shift and go to state 103
    empty                          shift and go to state 104
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 68

    (44) expression -> expression NOT .

    AND             reduce using rule 44 (expression -> expression NOT .)
    OR              reduce using rule 44 (expression -> expression NOT .)
    EQEQ            reduce using rule 44 (expression -> expression NOT .)
    NEQ             reduce using rule 44 (expression -> expression NOT .)
    MINSIGN         reduce using rule 44 (expression -> expression NOT .)
    MAXSIGN         reduce using rule 44 (expression -> expression NOT .)
    MINSIGNEQ       reduce using rule 44 (expression -> expression NOT .)
    MAXSIGNEQ       reduce using rule 44 (expression -> expression NOT .)
    PLUSPLUS        reduce using rule 44 (expression -> expression NOT .)
    MINUSMINUS      reduce using rule 44 (expression -> expression NOT .)
    DOT             reduce using rule 44 (expression -> expression NOT .)
    LBRACKET        reduce using rule 44 (expression -> expression NOT .)
    LPAREN          reduce using rule 44 (expression -> expression NOT .)
    NOT             reduce using rule 44 (expression -> expression NOT .)
    PLUS            reduce using rule 44 (expression -> expression NOT .)
    MINUS           reduce using rule 44 (expression -> expression NOT .)
    TIMES           reduce using rule 44 (expression -> expression NOT .)
    DIVIDE          reduce using rule 44 (expression -> expression NOT .)
    QMARK           reduce using rule 44 (expression -> expression NOT .)
    SEMICOLON       reduce using rule 44 (expression -> expression NOT .)
    COMMA           reduce using rule 44 (expression -> expression NOT .)
    RBRACKET        reduce using rule 44 (expression -> expression NOT .)
    RPAREN          reduce using rule 44 (expression -> expression NOT .)
    COLON           reduce using rule 44 (expression -> expression NOT .)
    RBRACE          reduce using rule 44 (expression -> expression NOT .)


state 69

    (45) expression -> expression PLUS . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 105
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 70

    (46) expression -> expression MINUS . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 106
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 71

    (47) expression -> expression TIMES . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 107
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 72

    (48) expression -> expression DIVIDE . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 108
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 73

    (74) expression -> expression QMARK . expression COLON expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 109
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 74

    (36) expression -> NOT expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 36 (expression -> NOT expression .)
    OR              reduce using rule 36 (expression -> NOT expression .)
    EQEQ            reduce using rule 36 (expression -> NOT expression .)
    NEQ             reduce using rule 36 (expression -> NOT expression .)
    MINSIGN         reduce using rule 36 (expression -> NOT expression .)
    MAXSIGN         reduce using rule 36 (expression -> NOT expression .)
    MINSIGNEQ       reduce using rule 36 (expression -> NOT expression .)
    MAXSIGNEQ       reduce using rule 36 (expression -> NOT expression .)
    LPAREN          reduce using rule 36 (expression -> NOT expression .)
    PLUS            reduce using rule 36 (expression -> NOT expression .)
    MINUS           reduce using rule 36 (expression -> NOT expression .)
    TIMES           reduce using rule 36 (expression -> NOT expression .)
    DIVIDE          reduce using rule 36 (expression -> NOT expression .)
    QMARK           reduce using rule 36 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 36 (expression -> NOT expression .)
    COMMA           reduce using rule 36 (expression -> NOT expression .)
    RBRACKET        reduce using rule 36 (expression -> NOT expression .)
    RPAREN          reduce using rule 36 (expression -> NOT expression .)
    COLON           reduce using rule 36 (expression -> NOT expression .)
    RBRACE          reduce using rule 36 (expression -> NOT expression .)
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68

  ! PLUSPLUS        [ reduce using rule 36 (expression -> NOT expression .) ]
  ! MINUSMINUS      [ reduce using rule 36 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 36 (expression -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 36 (expression -> NOT expression .) ]
  ! NOT             [ reduce using rule 36 (expression -> NOT expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! MINSIGN         [ shift and go to state 59 ]
  ! MAXSIGN         [ shift and go to state 60 ]
  ! MINSIGNEQ       [ shift and go to state 61 ]
  ! MAXSIGNEQ       [ shift and go to state 62 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 72 ]
  ! QMARK           [ shift and go to state 73 ]


state 75

    (90) expression -> LBRACKET expression_list . RBRACKET

    RBRACKET        shift and go to state 110


state 76

    (103) expression_list -> expression . COMMA expression_list
    (104) expression_list -> expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    COMMA           shift and go to state 111
    RBRACKET        reduce using rule 104 (expression_list -> expression .)
    RPAREN          reduce using rule 104 (expression_list -> expression .)
    RBRACE          reduce using rule 104 (expression_list -> expression .)
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 77

    (105) expression_list -> empty .

    RBRACKET        reduce using rule 105 (expression_list -> empty .)
    RPAREN          reduce using rule 105 (expression_list -> empty .)
    RBRACE          reduce using rule 105 (expression_list -> empty .)


state 78

    (55) factor -> LPAREN expression . RPAREN
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 112
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 79

    (91) expression -> LBRACE set_or_map_contents . RBRACE

    RBRACE          shift and go to state 113


state 80

    (92) set_or_map_contents -> expression . set_or_map_tail
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression
    (94) set_or_map_tail -> . COLON expression map_tail
    (95) set_or_map_tail -> . set_tail
    (101) set_tail -> . COMMA expression_list
    (102) set_tail -> . empty
    (106) empty -> .

    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73
    COLON           shift and go to state 115
    COMMA           shift and go to state 117
    RBRACE          reduce using rule 106 (empty -> .)

    set_or_map_tail                shift and go to state 114
    set_tail                       shift and go to state 116
    empty                          shift and go to state 118

state 81

    (93) set_or_map_contents -> empty .

    RBRACE          reduce using rule 93 (set_or_map_contents -> empty .)


state 82

    (51) factor -> primitive_type DOT . ID LPAREN arguments RPAREN

    ID              shift and go to state 119


state 83

    (25) generic_type -> ID MINSIGN type_list MAXSIGN .

    ID              reduce using rule 25 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MAIN            reduce using rule 25 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MAXSIGN         reduce using rule 25 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    COMMA           reduce using rule 25 (generic_type -> ID MINSIGN type_list MAXSIGN .)


state 84

    (26) type_list -> type_list COMMA . declaration_type
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 44
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    declaration_type               shift and go to state 120
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 85

    (77) parameters -> declaration_type . ID

    ID              shift and go to state 121


state 86

    (12) function_declaration -> declaration_type function_name LPAREN parameters . RPAREN LBRACE body RBRACE
    (76) parameters -> parameters . COMMA declaration_type ID

    RPAREN          shift and go to state 122
    COMMA           shift and go to state 123


state 87

    (78) parameters -> empty .

    RPAREN          reduce using rule 78 (parameters -> empty .)
    COMMA           reduce using rule 78 (parameters -> empty .)


state 88

    (66) assignment -> declaration_type ID EQUALS expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 66 (assignment -> declaration_type ID EQUALS expression .)
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 89

    (7) class -> CLASS ID LBRACE class_body RBRACE .

    CLASS           reduce using rule 7 (class -> CLASS ID LBRACE class_body RBRACE .)
    ID              reduce using rule 7 (class -> CLASS ID LBRACE class_body RBRACE .)
    INT             reduce using rule 7 (class -> CLASS ID LBRACE class_body RBRACE .)
    DOUBLE          reduce using rule 7 (class -> CLASS ID LBRACE class_body RBRACE .)
    STRING          reduce using rule 7 (class -> CLASS ID LBRACE class_body RBRACE .)
    BOOL            reduce using rule 7 (class -> CLASS ID LBRACE class_body RBRACE .)
    VOID            reduce using rule 7 (class -> CLASS ID LBRACE class_body RBRACE .)
    VAR             reduce using rule 7 (class -> CLASS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 7 (class -> CLASS ID LBRACE class_body RBRACE .)


state 90

    (8) class_body -> class_member class_body .

    RBRACE          reduce using rule 8 (class_body -> class_member class_body .)


state 91

    (15) class_property -> declaration_type ID . SEMICOLON
    (13) function_name -> ID .

    SEMICOLON       shift and go to state 124
    LPAREN          reduce using rule 13 (function_name -> ID .)


state 92

    (28) expression -> expression AND expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 28 (expression -> expression AND expression .)
    OR              reduce using rule 28 (expression -> expression AND expression .)
    LPAREN          reduce using rule 28 (expression -> expression AND expression .)
    QMARK           reduce using rule 28 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 28 (expression -> expression AND expression .)
    COMMA           reduce using rule 28 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 28 (expression -> expression AND expression .)
    RPAREN          reduce using rule 28 (expression -> expression AND expression .)
    COLON           reduce using rule 28 (expression -> expression AND expression .)
    RBRACE          reduce using rule 28 (expression -> expression AND expression .)
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! EQEQ            [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! MINSIGN         [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! MAXSIGN         [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! MINSIGNEQ       [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! PLUSPLUS        [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! MINUSMINUS      [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! NOT             [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 28 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! QMARK           [ shift and go to state 73 ]


state 93

    (29) expression -> expression OR expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    OR              reduce using rule 29 (expression -> expression OR expression .)
    LPAREN          reduce using rule 29 (expression -> expression OR expression .)
    QMARK           reduce using rule 29 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 29 (expression -> expression OR expression .)
    COMMA           reduce using rule 29 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 29 (expression -> expression OR expression .)
    RPAREN          reduce using rule 29 (expression -> expression OR expression .)
    COLON           reduce using rule 29 (expression -> expression OR expression .)
    RBRACE          reduce using rule 29 (expression -> expression OR expression .)
    AND             shift and go to state 55
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! AND             [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! EQEQ            [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! MINSIGN         [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! MAXSIGN         [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! MINSIGNEQ       [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! PLUSPLUS        [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! MINUSMINUS      [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! NOT             [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 29 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 56 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! QMARK           [ shift and go to state 73 ]


state 94

    (30) expression -> expression EQEQ expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 30 (expression -> expression EQEQ expression .)
    OR              reduce using rule 30 (expression -> expression EQEQ expression .)
    EQEQ            reduce using rule 30 (expression -> expression EQEQ expression .)
    NEQ             reduce using rule 30 (expression -> expression EQEQ expression .)
    LPAREN          reduce using rule 30 (expression -> expression EQEQ expression .)
    QMARK           reduce using rule 30 (expression -> expression EQEQ expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression EQEQ expression .)
    COMMA           reduce using rule 30 (expression -> expression EQEQ expression .)
    RBRACKET        reduce using rule 30 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 30 (expression -> expression EQEQ expression .)
    COLON           reduce using rule 30 (expression -> expression EQEQ expression .)
    RBRACE          reduce using rule 30 (expression -> expression EQEQ expression .)
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! MINSIGN         [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! DOT             [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! LBRACKET        [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! NOT             [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! PLUS            [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! MINUS           [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression EQEQ expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! QMARK           [ shift and go to state 73 ]


state 95

    (31) expression -> expression NEQ expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 31 (expression -> expression NEQ expression .)
    OR              reduce using rule 31 (expression -> expression NEQ expression .)
    EQEQ            reduce using rule 31 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 31 (expression -> expression NEQ expression .)
    LPAREN          reduce using rule 31 (expression -> expression NEQ expression .)
    QMARK           reduce using rule 31 (expression -> expression NEQ expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 31 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 31 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 31 (expression -> expression NEQ expression .)
    COLON           reduce using rule 31 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 31 (expression -> expression NEQ expression .)
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! MINSIGN         [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! NOT             [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression NEQ expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! QMARK           [ shift and go to state 73 ]


state 96

    (32) expression -> expression MINSIGN expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 32 (expression -> expression MINSIGN expression .)
    OR              reduce using rule 32 (expression -> expression MINSIGN expression .)
    EQEQ            reduce using rule 32 (expression -> expression MINSIGN expression .)
    NEQ             reduce using rule 32 (expression -> expression MINSIGN expression .)
    MINSIGN         reduce using rule 32 (expression -> expression MINSIGN expression .)
    MAXSIGN         reduce using rule 32 (expression -> expression MINSIGN expression .)
    MINSIGNEQ       reduce using rule 32 (expression -> expression MINSIGN expression .)
    MAXSIGNEQ       reduce using rule 32 (expression -> expression MINSIGN expression .)
    LPAREN          reduce using rule 32 (expression -> expression MINSIGN expression .)
    QMARK           reduce using rule 32 (expression -> expression MINSIGN expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression MINSIGN expression .)
    COMMA           reduce using rule 32 (expression -> expression MINSIGN expression .)
    RBRACKET        reduce using rule 32 (expression -> expression MINSIGN expression .)
    RPAREN          reduce using rule 32 (expression -> expression MINSIGN expression .)
    COLON           reduce using rule 32 (expression -> expression MINSIGN expression .)
    RBRACE          reduce using rule 32 (expression -> expression MINSIGN expression .)
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! PLUSPLUS        [ reduce using rule 32 (expression -> expression MINSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 32 (expression -> expression MINSIGN expression .) ]
  ! DOT             [ reduce using rule 32 (expression -> expression MINSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 32 (expression -> expression MINSIGN expression .) ]
  ! NOT             [ reduce using rule 32 (expression -> expression MINSIGN expression .) ]
  ! PLUS            [ reduce using rule 32 (expression -> expression MINSIGN expression .) ]
  ! MINUS           [ reduce using rule 32 (expression -> expression MINSIGN expression .) ]
  ! TIMES           [ reduce using rule 32 (expression -> expression MINSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 32 (expression -> expression MINSIGN expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! MINSIGN         [ shift and go to state 59 ]
  ! MAXSIGN         [ shift and go to state 60 ]
  ! MINSIGNEQ       [ shift and go to state 61 ]
  ! MAXSIGNEQ       [ shift and go to state 62 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! QMARK           [ shift and go to state 73 ]


state 97

    (33) expression -> expression MAXSIGN expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 33 (expression -> expression MAXSIGN expression .)
    OR              reduce using rule 33 (expression -> expression MAXSIGN expression .)
    EQEQ            reduce using rule 33 (expression -> expression MAXSIGN expression .)
    NEQ             reduce using rule 33 (expression -> expression MAXSIGN expression .)
    MINSIGN         reduce using rule 33 (expression -> expression MAXSIGN expression .)
    MAXSIGN         reduce using rule 33 (expression -> expression MAXSIGN expression .)
    MINSIGNEQ       reduce using rule 33 (expression -> expression MAXSIGN expression .)
    MAXSIGNEQ       reduce using rule 33 (expression -> expression MAXSIGN expression .)
    LPAREN          reduce using rule 33 (expression -> expression MAXSIGN expression .)
    QMARK           reduce using rule 33 (expression -> expression MAXSIGN expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression MAXSIGN expression .)
    COMMA           reduce using rule 33 (expression -> expression MAXSIGN expression .)
    RBRACKET        reduce using rule 33 (expression -> expression MAXSIGN expression .)
    RPAREN          reduce using rule 33 (expression -> expression MAXSIGN expression .)
    COLON           reduce using rule 33 (expression -> expression MAXSIGN expression .)
    RBRACE          reduce using rule 33 (expression -> expression MAXSIGN expression .)
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! PLUSPLUS        [ reduce using rule 33 (expression -> expression MAXSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 33 (expression -> expression MAXSIGN expression .) ]
  ! DOT             [ reduce using rule 33 (expression -> expression MAXSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 33 (expression -> expression MAXSIGN expression .) ]
  ! NOT             [ reduce using rule 33 (expression -> expression MAXSIGN expression .) ]
  ! PLUS            [ reduce using rule 33 (expression -> expression MAXSIGN expression .) ]
  ! MINUS           [ reduce using rule 33 (expression -> expression MAXSIGN expression .) ]
  ! TIMES           [ reduce using rule 33 (expression -> expression MAXSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 33 (expression -> expression MAXSIGN expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! MINSIGN         [ shift and go to state 59 ]
  ! MAXSIGN         [ shift and go to state 60 ]
  ! MINSIGNEQ       [ shift and go to state 61 ]
  ! MAXSIGNEQ       [ shift and go to state 62 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! QMARK           [ shift and go to state 73 ]


state 98

    (34) expression -> expression MINSIGNEQ expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    OR              reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    EQEQ            reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    NEQ             reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    MINSIGN         reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    MAXSIGN         reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    MINSIGNEQ       reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    MAXSIGNEQ       reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    LPAREN          reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    QMARK           reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    COMMA           reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    RBRACKET        reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    RPAREN          reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    COLON           reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    RBRACE          reduce using rule 34 (expression -> expression MINSIGNEQ expression .)
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! PLUSPLUS        [ reduce using rule 34 (expression -> expression MINSIGNEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 34 (expression -> expression MINSIGNEQ expression .) ]
  ! DOT             [ reduce using rule 34 (expression -> expression MINSIGNEQ expression .) ]
  ! LBRACKET        [ reduce using rule 34 (expression -> expression MINSIGNEQ expression .) ]
  ! NOT             [ reduce using rule 34 (expression -> expression MINSIGNEQ expression .) ]
  ! PLUS            [ reduce using rule 34 (expression -> expression MINSIGNEQ expression .) ]
  ! MINUS           [ reduce using rule 34 (expression -> expression MINSIGNEQ expression .) ]
  ! TIMES           [ reduce using rule 34 (expression -> expression MINSIGNEQ expression .) ]
  ! DIVIDE          [ reduce using rule 34 (expression -> expression MINSIGNEQ expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! MINSIGN         [ shift and go to state 59 ]
  ! MAXSIGN         [ shift and go to state 60 ]
  ! MINSIGNEQ       [ shift and go to state 61 ]
  ! MAXSIGNEQ       [ shift and go to state 62 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! QMARK           [ shift and go to state 73 ]


state 99

    (35) expression -> expression MAXSIGNEQ expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    OR              reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    EQEQ            reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    NEQ             reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    MINSIGN         reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    MAXSIGN         reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    MINSIGNEQ       reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    MAXSIGNEQ       reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    LPAREN          reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    QMARK           reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    COMMA           reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    RBRACKET        reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    RPAREN          reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    COLON           reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    RBRACE          reduce using rule 35 (expression -> expression MAXSIGNEQ expression .)
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! PLUSPLUS        [ reduce using rule 35 (expression -> expression MAXSIGNEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 35 (expression -> expression MAXSIGNEQ expression .) ]
  ! DOT             [ reduce using rule 35 (expression -> expression MAXSIGNEQ expression .) ]
  ! LBRACKET        [ reduce using rule 35 (expression -> expression MAXSIGNEQ expression .) ]
  ! NOT             [ reduce using rule 35 (expression -> expression MAXSIGNEQ expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression MAXSIGNEQ expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression MAXSIGNEQ expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression MAXSIGNEQ expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression MAXSIGNEQ expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! MINSIGN         [ shift and go to state 59 ]
  ! MAXSIGN         [ shift and go to state 60 ]
  ! MINSIGNEQ       [ shift and go to state 61 ]
  ! MAXSIGNEQ       [ shift and go to state 62 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! QMARK           [ shift and go to state 73 ]


state 100

    (39) expression -> expression DOT ID .

    AND             reduce using rule 39 (expression -> expression DOT ID .)
    OR              reduce using rule 39 (expression -> expression DOT ID .)
    EQEQ            reduce using rule 39 (expression -> expression DOT ID .)
    NEQ             reduce using rule 39 (expression -> expression DOT ID .)
    MINSIGN         reduce using rule 39 (expression -> expression DOT ID .)
    MAXSIGN         reduce using rule 39 (expression -> expression DOT ID .)
    MINSIGNEQ       reduce using rule 39 (expression -> expression DOT ID .)
    MAXSIGNEQ       reduce using rule 39 (expression -> expression DOT ID .)
    PLUSPLUS        reduce using rule 39 (expression -> expression DOT ID .)
    MINUSMINUS      reduce using rule 39 (expression -> expression DOT ID .)
    DOT             reduce using rule 39 (expression -> expression DOT ID .)
    LBRACKET        reduce using rule 39 (expression -> expression DOT ID .)
    LPAREN          reduce using rule 39 (expression -> expression DOT ID .)
    NOT             reduce using rule 39 (expression -> expression DOT ID .)
    PLUS            reduce using rule 39 (expression -> expression DOT ID .)
    MINUS           reduce using rule 39 (expression -> expression DOT ID .)
    TIMES           reduce using rule 39 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 39 (expression -> expression DOT ID .)
    QMARK           reduce using rule 39 (expression -> expression DOT ID .)
    SEMICOLON       reduce using rule 39 (expression -> expression DOT ID .)
    COMMA           reduce using rule 39 (expression -> expression DOT ID .)
    RBRACKET        reduce using rule 39 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 39 (expression -> expression DOT ID .)
    COLON           reduce using rule 39 (expression -> expression DOT ID .)
    RBRACE          reduce using rule 39 (expression -> expression DOT ID .)


state 101

    (40) expression -> expression LBRACKET expression . RBRACKET
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    RBRACKET        shift and go to state 125
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 102

    (41) expression -> expression LPAREN arguments . RPAREN

    RPAREN          shift and go to state 126


state 103

    (42) arguments -> expression_list .

    RPAREN          reduce using rule 42 (arguments -> expression_list .)


state 104

    (43) arguments -> empty .
    (105) expression_list -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 43 (arguments -> empty .)
    RPAREN          reduce using rule 43 (arguments -> empty .)

  ! RPAREN          [ reduce using rule 105 (expression_list -> empty .) ]


state 105

    (45) expression -> expression PLUS expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 45 (expression -> expression PLUS expression .)
    OR              reduce using rule 45 (expression -> expression PLUS expression .)
    EQEQ            reduce using rule 45 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 45 (expression -> expression PLUS expression .)
    MINSIGN         reduce using rule 45 (expression -> expression PLUS expression .)
    MAXSIGN         reduce using rule 45 (expression -> expression PLUS expression .)
    MINSIGNEQ       reduce using rule 45 (expression -> expression PLUS expression .)
    MAXSIGNEQ       reduce using rule 45 (expression -> expression PLUS expression .)
    LPAREN          reduce using rule 45 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 45 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 45 (expression -> expression PLUS expression .)
    QMARK           reduce using rule 45 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 45 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 45 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 45 (expression -> expression PLUS expression .)
    COLON           reduce using rule 45 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 45 (expression -> expression PLUS expression .)
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! PLUSPLUS        [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! NOT             [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression PLUS expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! MINSIGN         [ shift and go to state 59 ]
  ! MAXSIGN         [ shift and go to state 60 ]
  ! MINSIGNEQ       [ shift and go to state 61 ]
  ! MAXSIGNEQ       [ shift and go to state 62 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! QMARK           [ shift and go to state 73 ]


state 106

    (46) expression -> expression MINUS expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 46 (expression -> expression MINUS expression .)
    OR              reduce using rule 46 (expression -> expression MINUS expression .)
    EQEQ            reduce using rule 46 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 46 (expression -> expression MINUS expression .)
    MINSIGN         reduce using rule 46 (expression -> expression MINUS expression .)
    MAXSIGN         reduce using rule 46 (expression -> expression MINUS expression .)
    MINSIGNEQ       reduce using rule 46 (expression -> expression MINUS expression .)
    MAXSIGNEQ       reduce using rule 46 (expression -> expression MINUS expression .)
    LPAREN          reduce using rule 46 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 46 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 46 (expression -> expression MINUS expression .)
    QMARK           reduce using rule 46 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 46 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 46 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 46 (expression -> expression MINUS expression .)
    COLON           reduce using rule 46 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 46 (expression -> expression MINUS expression .)
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72

  ! PLUSPLUS        [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! NOT             [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression MINUS expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! MINSIGN         [ shift and go to state 59 ]
  ! MAXSIGN         [ shift and go to state 60 ]
  ! MINSIGNEQ       [ shift and go to state 61 ]
  ! MAXSIGNEQ       [ shift and go to state 62 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! QMARK           [ shift and go to state 73 ]


state 107

    (47) expression -> expression TIMES expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 47 (expression -> expression TIMES expression .)
    OR              reduce using rule 47 (expression -> expression TIMES expression .)
    EQEQ            reduce using rule 47 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 47 (expression -> expression TIMES expression .)
    MINSIGN         reduce using rule 47 (expression -> expression TIMES expression .)
    MAXSIGN         reduce using rule 47 (expression -> expression TIMES expression .)
    MINSIGNEQ       reduce using rule 47 (expression -> expression TIMES expression .)
    MAXSIGNEQ       reduce using rule 47 (expression -> expression TIMES expression .)
    LPAREN          reduce using rule 47 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 47 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 47 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 47 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 47 (expression -> expression TIMES expression .)
    QMARK           reduce using rule 47 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 47 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 47 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 47 (expression -> expression TIMES expression .)
    COLON           reduce using rule 47 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 47 (expression -> expression TIMES expression .)
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68

  ! PLUSPLUS        [ reduce using rule 47 (expression -> expression TIMES expression .) ]
  ! MINUSMINUS      [ reduce using rule 47 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> expression TIMES expression .) ]
  ! LBRACKET        [ reduce using rule 47 (expression -> expression TIMES expression .) ]
  ! NOT             [ reduce using rule 47 (expression -> expression TIMES expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! MINSIGN         [ shift and go to state 59 ]
  ! MAXSIGN         [ shift and go to state 60 ]
  ! MINSIGNEQ       [ shift and go to state 61 ]
  ! MAXSIGNEQ       [ shift and go to state 62 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 72 ]
  ! QMARK           [ shift and go to state 73 ]


state 108

    (48) expression -> expression DIVIDE expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    AND             reduce using rule 48 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 48 (expression -> expression DIVIDE expression .)
    EQEQ            reduce using rule 48 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 48 (expression -> expression DIVIDE expression .)
    MINSIGN         reduce using rule 48 (expression -> expression DIVIDE expression .)
    MAXSIGN         reduce using rule 48 (expression -> expression DIVIDE expression .)
    MINSIGNEQ       reduce using rule 48 (expression -> expression DIVIDE expression .)
    MAXSIGNEQ       reduce using rule 48 (expression -> expression DIVIDE expression .)
    LPAREN          reduce using rule 48 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 48 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 48 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 48 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 48 (expression -> expression DIVIDE expression .)
    QMARK           reduce using rule 48 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 48 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 48 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 48 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 48 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 48 (expression -> expression DIVIDE expression .)
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    NOT             shift and go to state 68

  ! PLUSPLUS        [ reduce using rule 48 (expression -> expression DIVIDE expression .) ]
  ! MINUSMINUS      [ reduce using rule 48 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 48 (expression -> expression DIVIDE expression .) ]
  ! LBRACKET        [ reduce using rule 48 (expression -> expression DIVIDE expression .) ]
  ! NOT             [ reduce using rule 48 (expression -> expression DIVIDE expression .) ]
  ! AND             [ shift and go to state 55 ]
  ! OR              [ shift and go to state 56 ]
  ! EQEQ            [ shift and go to state 57 ]
  ! NEQ             [ shift and go to state 58 ]
  ! MINSIGN         [ shift and go to state 59 ]
  ! MAXSIGN         [ shift and go to state 60 ]
  ! MINSIGNEQ       [ shift and go to state 61 ]
  ! MAXSIGNEQ       [ shift and go to state 62 ]
  ! LPAREN          [ shift and go to state 67 ]
  ! PLUS            [ shift and go to state 69 ]
  ! MINUS           [ shift and go to state 70 ]
  ! TIMES           [ shift and go to state 71 ]
  ! DIVIDE          [ shift and go to state 72 ]
  ! QMARK           [ shift and go to state 73 ]


state 109

    (74) expression -> expression QMARK expression . COLON expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    COLON           shift and go to state 127
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 110

    (90) expression -> LBRACKET expression_list RBRACKET .

    AND             reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    EQEQ            reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    NEQ             reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    MINSIGN         reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    MAXSIGN         reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    MINSIGNEQ       reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    MAXSIGNEQ       reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    PLUSPLUS        reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    MINUSMINUS      reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    DOT             reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    LBRACKET        reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    LPAREN          reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    NOT             reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    QMARK           reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    SEMICOLON       reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    COLON           reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACE          reduce using rule 90 (expression -> LBRACKET expression_list RBRACKET .)


state 111

    (103) expression_list -> expression COMMA . expression_list
    (103) expression_list -> . expression COMMA expression_list
    (104) expression_list -> . expression
    (105) expression_list -> . empty
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (106) empty -> .
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    RBRACKET        reduce using rule 106 (empty -> .)
    RPAREN          reduce using rule 106 (empty -> .)
    RBRACE          reduce using rule 106 (empty -> .)
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 76
    expression_list                shift and go to state 128
    empty                          shift and go to state 77
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 112

    (55) factor -> LPAREN expression RPAREN .

    AND             reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MINSIGN         reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MAXSIGN         reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MINSIGNEQ       reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MAXSIGNEQ       reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    DOT             reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    QMARK           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    COLON           reduce using rule 55 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 55 (factor -> LPAREN expression RPAREN .)


state 113

    (91) expression -> LBRACE set_or_map_contents RBRACE .

    AND             reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    OR              reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    EQEQ            reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    NEQ             reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINSIGN         reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    MAXSIGN         reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINSIGNEQ       reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    MAXSIGNEQ       reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    PLUSPLUS        reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINUSMINUS      reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    DOT             reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    LBRACKET        reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    LPAREN          reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    NOT             reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    PLUS            reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINUS           reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    TIMES           reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    DIVIDE          reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    QMARK           reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    SEMICOLON       reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    COMMA           reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    RBRACKET        reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    RPAREN          reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    COLON           reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)
    RBRACE          reduce using rule 91 (expression -> LBRACE set_or_map_contents RBRACE .)


state 114

    (92) set_or_map_contents -> expression set_or_map_tail .

    RBRACE          reduce using rule 92 (set_or_map_contents -> expression set_or_map_tail .)


state 115

    (94) set_or_map_tail -> COLON . expression map_tail
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 129
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 116

    (95) set_or_map_tail -> set_tail .

    RBRACE          reduce using rule 95 (set_or_map_tail -> set_tail .)


state 117

    (101) set_tail -> COMMA . expression_list
    (103) expression_list -> . expression COMMA expression_list
    (104) expression_list -> . expression
    (105) expression_list -> . empty
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (106) empty -> .
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    RBRACE          reduce using rule 106 (empty -> .)
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression_list                shift and go to state 130
    expression                     shift and go to state 76
    empty                          shift and go to state 77
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 118

    (102) set_tail -> empty .

    RBRACE          reduce using rule 102 (set_tail -> empty .)


state 119

    (51) factor -> primitive_type DOT ID . LPAREN arguments RPAREN

    LPAREN          shift and go to state 131


state 120

    (26) type_list -> type_list COMMA declaration_type .

    MAXSIGN         reduce using rule 26 (type_list -> type_list COMMA declaration_type .)
    COMMA           reduce using rule 26 (type_list -> type_list COMMA declaration_type .)


state 121

    (77) parameters -> declaration_type ID .

    RPAREN          reduce using rule 77 (parameters -> declaration_type ID .)
    COMMA           reduce using rule 77 (parameters -> declaration_type ID .)


state 122

    (12) function_declaration -> declaration_type function_name LPAREN parameters RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 132


state 123

    (76) parameters -> parameters COMMA . declaration_type ID
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 44
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    declaration_type               shift and go to state 133
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 124

    (15) class_property -> declaration_type ID SEMICOLON .

    ID              reduce using rule 15 (class_property -> declaration_type ID SEMICOLON .)
    INT             reduce using rule 15 (class_property -> declaration_type ID SEMICOLON .)
    DOUBLE          reduce using rule 15 (class_property -> declaration_type ID SEMICOLON .)
    STRING          reduce using rule 15 (class_property -> declaration_type ID SEMICOLON .)
    BOOL            reduce using rule 15 (class_property -> declaration_type ID SEMICOLON .)
    VOID            reduce using rule 15 (class_property -> declaration_type ID SEMICOLON .)
    VAR             reduce using rule 15 (class_property -> declaration_type ID SEMICOLON .)
    RBRACE          reduce using rule 15 (class_property -> declaration_type ID SEMICOLON .)


state 125

    (40) expression -> expression LBRACKET expression RBRACKET .

    AND             reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    EQEQ            reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    MINSIGN         reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    MAXSIGN         reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    MINSIGNEQ       reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    MAXSIGNEQ       reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    NOT             reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    QMARK           reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    COLON           reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 40 (expression -> expression LBRACKET expression RBRACKET .)


state 126

    (41) expression -> expression LPAREN arguments RPAREN .

    AND             reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    OR              reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    EQEQ            reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    NEQ             reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    MINSIGN         reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    MAXSIGN         reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    MINSIGNEQ       reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    MAXSIGNEQ       reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    PLUSPLUS        reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    MINUSMINUS      reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    DOT             reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    LBRACKET        reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    NOT             reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    PLUS            reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    MINUS           reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    TIMES           reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    QMARK           reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    SEMICOLON       reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    COMMA           reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    RBRACKET        reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    COLON           reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 41 (expression -> expression LPAREN arguments RPAREN .)


state 127

    (74) expression -> expression QMARK expression COLON . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 134
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 128

    (103) expression_list -> expression COMMA expression_list .

    RBRACKET        reduce using rule 103 (expression_list -> expression COMMA expression_list .)
    RPAREN          reduce using rule 103 (expression_list -> expression COMMA expression_list .)
    RBRACE          reduce using rule 103 (expression_list -> expression COMMA expression_list .)


state 129

    (94) set_or_map_tail -> COLON expression . map_tail
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression
    (96) map_tail -> . COMMA map_entries
    (97) map_tail -> . empty
    (106) empty -> .

    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73
    COMMA           shift and go to state 136
    RBRACE          reduce using rule 106 (empty -> .)

    map_tail                       shift and go to state 135
    empty                          shift and go to state 137

state 130

    (101) set_tail -> COMMA expression_list .

    RBRACE          reduce using rule 101 (set_tail -> COMMA expression_list .)


state 131

    (51) factor -> primitive_type DOT ID LPAREN . arguments RPAREN
    (42) arguments -> . expression_list
    (43) arguments -> . empty
    (103) expression_list -> . expression COMMA expression_list
    (104) expression_list -> . expression
    (105) expression_list -> . empty
    (106) empty -> .
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    RPAREN          reduce using rule 106 (empty -> .)
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    primitive_type                 shift and go to state 41
    arguments                      shift and go to state 138
    expression_list                shift and go to state 103
    empty                          shift and go to state 104
    expression                     shift and go to state 76
    term                           shift and go to state 38
    factor                         shift and go to state 40

state 132

    (12) function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE . body RBRACE
    (81) body -> . instructions
    (56) instructions -> . instruction instructions
    (57) instructions -> . empty
    (58) instruction -> . assignment SEMICOLON
    (59) instruction -> . print_statement
    (60) instruction -> . if_else
    (61) instruction -> . while_loop
    (62) instruction -> . for_loop
    (63) instruction -> . return_statement
    (64) instruction -> . block_statement
    (106) empty -> .
    (66) assignment -> . declaration_type ID EQUALS expression
    (67) assignment -> . ID assign_op expression
    (75) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (82) if_else -> . IF LPAREN expression RPAREN instruction
    (83) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (84) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (85) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (79) return_statement -> . RETURN expression SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (65) block_statement -> . LBRACE instructions RBRACE
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    RBRACE          reduce using rule 106 (empty -> .)
    ID              shift and go to state 9
    PRINT           shift and go to state 152
    IF              shift and go to state 153
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    RETURN          shift and go to state 156
    LBRACE          shift and go to state 140
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    declaration_type               shift and go to state 139
    body                           shift and go to state 141
    instructions                   shift and go to state 142
    instruction                    shift and go to state 143
    empty                          shift and go to state 144
    assignment                     shift and go to state 145
    print_statement                shift and go to state 146
    if_else                        shift and go to state 147
    while_loop                     shift and go to state 148
    for_loop                       shift and go to state 149
    return_statement               shift and go to state 150
    block_statement                shift and go to state 151
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 133

    (76) parameters -> parameters COMMA declaration_type . ID

    ID              shift and go to state 157


state 134

    (74) expression -> expression QMARK expression COLON expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for MINSIGN resolved as shift
  ! shift/reduce conflict for MAXSIGN resolved as shift
  ! shift/reduce conflict for MINSIGNEQ resolved as shift
  ! shift/reduce conflict for MAXSIGNEQ resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for QMARK resolved as shift
    SEMICOLON       reduce using rule 74 (expression -> expression QMARK expression COLON expression .)
    COMMA           reduce using rule 74 (expression -> expression QMARK expression COLON expression .)
    RBRACKET        reduce using rule 74 (expression -> expression QMARK expression COLON expression .)
    RPAREN          reduce using rule 74 (expression -> expression QMARK expression COLON expression .)
    COLON           reduce using rule 74 (expression -> expression QMARK expression COLON expression .)
    RBRACE          reduce using rule 74 (expression -> expression QMARK expression COLON expression .)
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73

  ! AND             [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! OR              [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! EQEQ            [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! NEQ             [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! MINSIGN         [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! MAXSIGN         [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! MINSIGNEQ       [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! PLUSPLUS        [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! MINUSMINUS      [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! DOT             [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! LBRACKET        [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! LPAREN          [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! NOT             [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! PLUS            [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! MINUS           [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! TIMES           [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]
  ! QMARK           [ reduce using rule 74 (expression -> expression QMARK expression COLON expression .) ]


state 135

    (94) set_or_map_tail -> COLON expression map_tail .

    RBRACE          reduce using rule 94 (set_or_map_tail -> COLON expression map_tail .)


state 136

    (96) map_tail -> COMMA . map_entries
    (98) map_entries -> . map_entries COMMA map_entry
    (99) map_entries -> . map_entry
    (100) map_entry -> . expression COLON expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    map_entries                    shift and go to state 158
    map_entry                      shift and go to state 159
    expression                     shift and go to state 160
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 137

    (97) map_tail -> empty .

    RBRACE          reduce using rule 97 (map_tail -> empty .)


state 138

    (51) factor -> primitive_type DOT ID LPAREN arguments . RPAREN

    RPAREN          shift and go to state 161


state 139

    (66) assignment -> declaration_type . ID EQUALS expression

    ID              shift and go to state 162


state 140

    (65) block_statement -> LBRACE . instructions RBRACE
    (56) instructions -> . instruction instructions
    (57) instructions -> . empty
    (58) instruction -> . assignment SEMICOLON
    (59) instruction -> . print_statement
    (60) instruction -> . if_else
    (61) instruction -> . while_loop
    (62) instruction -> . for_loop
    (63) instruction -> . return_statement
    (64) instruction -> . block_statement
    (106) empty -> .
    (66) assignment -> . declaration_type ID EQUALS expression
    (67) assignment -> . ID assign_op expression
    (75) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (82) if_else -> . IF LPAREN expression RPAREN instruction
    (83) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (84) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (85) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (79) return_statement -> . RETURN expression SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (65) block_statement -> . LBRACE instructions RBRACE
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    RBRACE          reduce using rule 106 (empty -> .)
    ID              shift and go to state 9
    PRINT           shift and go to state 152
    IF              shift and go to state 153
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    RETURN          shift and go to state 156
    LBRACE          shift and go to state 140
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    instructions                   shift and go to state 163
    instruction                    shift and go to state 143
    empty                          shift and go to state 144
    assignment                     shift and go to state 145
    print_statement                shift and go to state 146
    if_else                        shift and go to state 147
    while_loop                     shift and go to state 148
    for_loop                       shift and go to state 149
    return_statement               shift and go to state 150
    block_statement                shift and go to state 151
    declaration_type               shift and go to state 139
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 141

    (12) function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 164


state 142

    (81) body -> instructions .

    RBRACE          reduce using rule 81 (body -> instructions .)


state 143

    (56) instructions -> instruction . instructions
    (56) instructions -> . instruction instructions
    (57) instructions -> . empty
    (58) instruction -> . assignment SEMICOLON
    (59) instruction -> . print_statement
    (60) instruction -> . if_else
    (61) instruction -> . while_loop
    (62) instruction -> . for_loop
    (63) instruction -> . return_statement
    (64) instruction -> . block_statement
    (106) empty -> .
    (66) assignment -> . declaration_type ID EQUALS expression
    (67) assignment -> . ID assign_op expression
    (75) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (82) if_else -> . IF LPAREN expression RPAREN instruction
    (83) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (84) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (85) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (79) return_statement -> . RETURN expression SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (65) block_statement -> . LBRACE instructions RBRACE
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    RBRACE          reduce using rule 106 (empty -> .)
    ID              shift and go to state 9
    PRINT           shift and go to state 152
    IF              shift and go to state 153
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    RETURN          shift and go to state 156
    LBRACE          shift and go to state 140
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    instruction                    shift and go to state 143
    instructions                   shift and go to state 165
    empty                          shift and go to state 144
    assignment                     shift and go to state 145
    print_statement                shift and go to state 146
    if_else                        shift and go to state 147
    while_loop                     shift and go to state 148
    for_loop                       shift and go to state 149
    return_statement               shift and go to state 150
    block_statement                shift and go to state 151
    declaration_type               shift and go to state 139
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 144

    (57) instructions -> empty .

    RBRACE          reduce using rule 57 (instructions -> empty .)


state 145

    (58) instruction -> assignment . SEMICOLON

    SEMICOLON       shift and go to state 166


state 146

    (59) instruction -> print_statement .

    ID              reduce using rule 59 (instruction -> print_statement .)
    PRINT           reduce using rule 59 (instruction -> print_statement .)
    IF              reduce using rule 59 (instruction -> print_statement .)
    WHILE           reduce using rule 59 (instruction -> print_statement .)
    FOR             reduce using rule 59 (instruction -> print_statement .)
    RETURN          reduce using rule 59 (instruction -> print_statement .)
    LBRACE          reduce using rule 59 (instruction -> print_statement .)
    INT             reduce using rule 59 (instruction -> print_statement .)
    DOUBLE          reduce using rule 59 (instruction -> print_statement .)
    STRING          reduce using rule 59 (instruction -> print_statement .)
    BOOL            reduce using rule 59 (instruction -> print_statement .)
    VOID            reduce using rule 59 (instruction -> print_statement .)
    VAR             reduce using rule 59 (instruction -> print_statement .)
    RBRACE          reduce using rule 59 (instruction -> print_statement .)
    ELSE            reduce using rule 59 (instruction -> print_statement .)


state 147

    (60) instruction -> if_else .

    ID              reduce using rule 60 (instruction -> if_else .)
    PRINT           reduce using rule 60 (instruction -> if_else .)
    IF              reduce using rule 60 (instruction -> if_else .)
    WHILE           reduce using rule 60 (instruction -> if_else .)
    FOR             reduce using rule 60 (instruction -> if_else .)
    RETURN          reduce using rule 60 (instruction -> if_else .)
    LBRACE          reduce using rule 60 (instruction -> if_else .)
    INT             reduce using rule 60 (instruction -> if_else .)
    DOUBLE          reduce using rule 60 (instruction -> if_else .)
    STRING          reduce using rule 60 (instruction -> if_else .)
    BOOL            reduce using rule 60 (instruction -> if_else .)
    VOID            reduce using rule 60 (instruction -> if_else .)
    VAR             reduce using rule 60 (instruction -> if_else .)
    RBRACE          reduce using rule 60 (instruction -> if_else .)
    ELSE            reduce using rule 60 (instruction -> if_else .)


state 148

    (61) instruction -> while_loop .

    ID              reduce using rule 61 (instruction -> while_loop .)
    PRINT           reduce using rule 61 (instruction -> while_loop .)
    IF              reduce using rule 61 (instruction -> while_loop .)
    WHILE           reduce using rule 61 (instruction -> while_loop .)
    FOR             reduce using rule 61 (instruction -> while_loop .)
    RETURN          reduce using rule 61 (instruction -> while_loop .)
    LBRACE          reduce using rule 61 (instruction -> while_loop .)
    INT             reduce using rule 61 (instruction -> while_loop .)
    DOUBLE          reduce using rule 61 (instruction -> while_loop .)
    STRING          reduce using rule 61 (instruction -> while_loop .)
    BOOL            reduce using rule 61 (instruction -> while_loop .)
    VOID            reduce using rule 61 (instruction -> while_loop .)
    VAR             reduce using rule 61 (instruction -> while_loop .)
    RBRACE          reduce using rule 61 (instruction -> while_loop .)
    ELSE            reduce using rule 61 (instruction -> while_loop .)


state 149

    (62) instruction -> for_loop .

    ID              reduce using rule 62 (instruction -> for_loop .)
    PRINT           reduce using rule 62 (instruction -> for_loop .)
    IF              reduce using rule 62 (instruction -> for_loop .)
    WHILE           reduce using rule 62 (instruction -> for_loop .)
    FOR             reduce using rule 62 (instruction -> for_loop .)
    RETURN          reduce using rule 62 (instruction -> for_loop .)
    LBRACE          reduce using rule 62 (instruction -> for_loop .)
    INT             reduce using rule 62 (instruction -> for_loop .)
    DOUBLE          reduce using rule 62 (instruction -> for_loop .)
    STRING          reduce using rule 62 (instruction -> for_loop .)
    BOOL            reduce using rule 62 (instruction -> for_loop .)
    VOID            reduce using rule 62 (instruction -> for_loop .)
    VAR             reduce using rule 62 (instruction -> for_loop .)
    RBRACE          reduce using rule 62 (instruction -> for_loop .)
    ELSE            reduce using rule 62 (instruction -> for_loop .)


state 150

    (63) instruction -> return_statement .

    ID              reduce using rule 63 (instruction -> return_statement .)
    PRINT           reduce using rule 63 (instruction -> return_statement .)
    IF              reduce using rule 63 (instruction -> return_statement .)
    WHILE           reduce using rule 63 (instruction -> return_statement .)
    FOR             reduce using rule 63 (instruction -> return_statement .)
    RETURN          reduce using rule 63 (instruction -> return_statement .)
    LBRACE          reduce using rule 63 (instruction -> return_statement .)
    INT             reduce using rule 63 (instruction -> return_statement .)
    DOUBLE          reduce using rule 63 (instruction -> return_statement .)
    STRING          reduce using rule 63 (instruction -> return_statement .)
    BOOL            reduce using rule 63 (instruction -> return_statement .)
    VOID            reduce using rule 63 (instruction -> return_statement .)
    VAR             reduce using rule 63 (instruction -> return_statement .)
    RBRACE          reduce using rule 63 (instruction -> return_statement .)
    ELSE            reduce using rule 63 (instruction -> return_statement .)


state 151

    (64) instruction -> block_statement .

    ID              reduce using rule 64 (instruction -> block_statement .)
    PRINT           reduce using rule 64 (instruction -> block_statement .)
    IF              reduce using rule 64 (instruction -> block_statement .)
    WHILE           reduce using rule 64 (instruction -> block_statement .)
    FOR             reduce using rule 64 (instruction -> block_statement .)
    RETURN          reduce using rule 64 (instruction -> block_statement .)
    LBRACE          reduce using rule 64 (instruction -> block_statement .)
    INT             reduce using rule 64 (instruction -> block_statement .)
    DOUBLE          reduce using rule 64 (instruction -> block_statement .)
    STRING          reduce using rule 64 (instruction -> block_statement .)
    BOOL            reduce using rule 64 (instruction -> block_statement .)
    VOID            reduce using rule 64 (instruction -> block_statement .)
    VAR             reduce using rule 64 (instruction -> block_statement .)
    RBRACE          reduce using rule 64 (instruction -> block_statement .)
    ELSE            reduce using rule 64 (instruction -> block_statement .)


state 152

    (75) print_statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 167


state 153

    (82) if_else -> IF . LPAREN expression RPAREN instruction
    (83) if_else -> IF . LPAREN expression RPAREN instruction ELSE instruction

    LPAREN          shift and go to state 168


state 154

    (84) while_loop -> WHILE . LPAREN expression RPAREN instruction

    LPAREN          shift and go to state 169


state 155

    (85) for_loop -> FOR . LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction

    LPAREN          shift and go to state 170


state 156

    (79) return_statement -> RETURN . expression SEMICOLON
    (80) return_statement -> RETURN . SEMICOLON
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    SEMICOLON       shift and go to state 172
    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 171
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 157

    (76) parameters -> parameters COMMA declaration_type ID .

    RPAREN          reduce using rule 76 (parameters -> parameters COMMA declaration_type ID .)
    COMMA           reduce using rule 76 (parameters -> parameters COMMA declaration_type ID .)


state 158

    (96) map_tail -> COMMA map_entries .
    (98) map_entries -> map_entries . COMMA map_entry

    RBRACE          reduce using rule 96 (map_tail -> COMMA map_entries .)
    COMMA           shift and go to state 173


state 159

    (99) map_entries -> map_entry .

    COMMA           reduce using rule 99 (map_entries -> map_entry .)
    RBRACE          reduce using rule 99 (map_entries -> map_entry .)


state 160

    (100) map_entry -> expression . COLON expression
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    COLON           shift and go to state 174
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 161

    (51) factor -> primitive_type DOT ID LPAREN arguments RPAREN .

    AND             reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    OR              reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    EQEQ            reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    NEQ             reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINSIGN         reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MAXSIGN         reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINSIGNEQ       reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MAXSIGNEQ       reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    PLUSPLUS        reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINUSMINUS      reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    DOT             reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    LBRACKET        reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    NOT             reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    PLUS            reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINUS           reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    TIMES           reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    QMARK           reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    SEMICOLON       reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    COMMA           reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    RBRACKET        reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    COLON           reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 51 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)


state 162

    (66) assignment -> declaration_type ID . EQUALS expression

    EQUALS          shift and go to state 48


state 163

    (65) block_statement -> LBRACE instructions . RBRACE

    RBRACE          shift and go to state 175


state 164

    (12) function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .

    CLASS           reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    DOUBLE          reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    VOID            reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    VAR             reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    $end            reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 12 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)


state 165

    (56) instructions -> instruction instructions .

    RBRACE          reduce using rule 56 (instructions -> instruction instructions .)


state 166

    (58) instruction -> assignment SEMICOLON .

    ID              reduce using rule 58 (instruction -> assignment SEMICOLON .)
    PRINT           reduce using rule 58 (instruction -> assignment SEMICOLON .)
    IF              reduce using rule 58 (instruction -> assignment SEMICOLON .)
    WHILE           reduce using rule 58 (instruction -> assignment SEMICOLON .)
    FOR             reduce using rule 58 (instruction -> assignment SEMICOLON .)
    RETURN          reduce using rule 58 (instruction -> assignment SEMICOLON .)
    LBRACE          reduce using rule 58 (instruction -> assignment SEMICOLON .)
    INT             reduce using rule 58 (instruction -> assignment SEMICOLON .)
    DOUBLE          reduce using rule 58 (instruction -> assignment SEMICOLON .)
    STRING          reduce using rule 58 (instruction -> assignment SEMICOLON .)
    BOOL            reduce using rule 58 (instruction -> assignment SEMICOLON .)
    VOID            reduce using rule 58 (instruction -> assignment SEMICOLON .)
    VAR             reduce using rule 58 (instruction -> assignment SEMICOLON .)
    RBRACE          reduce using rule 58 (instruction -> assignment SEMICOLON .)
    ELSE            reduce using rule 58 (instruction -> assignment SEMICOLON .)


state 167

    (75) print_statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 176
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 168

    (82) if_else -> IF LPAREN . expression RPAREN instruction
    (83) if_else -> IF LPAREN . expression RPAREN instruction ELSE instruction
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 177
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 169

    (84) while_loop -> WHILE LPAREN . expression RPAREN instruction
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 178
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 170

    (85) for_loop -> FOR LPAREN . for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (86) for_initializer -> . assignment
    (87) for_initializer -> . empty
    (66) assignment -> . declaration_type ID EQUALS expression
    (67) assignment -> . ID assign_op expression
    (106) empty -> .
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 9
    SEMICOLON       reduce using rule 106 (empty -> .)
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    for_initializer                shift and go to state 179
    assignment                     shift and go to state 180
    empty                          shift and go to state 181
    declaration_type               shift and go to state 139
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 171

    (79) return_statement -> RETURN expression . SEMICOLON
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    SEMICOLON       shift and go to state 182
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 172

    (80) return_statement -> RETURN SEMICOLON .

    ID              reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    PRINT           reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    INT             reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    DOUBLE          reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    BOOL            reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    VOID            reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    VAR             reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 80 (return_statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 80 (return_statement -> RETURN SEMICOLON .)


state 173

    (98) map_entries -> map_entries COMMA . map_entry
    (100) map_entry -> . expression COLON expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    map_entry                      shift and go to state 183
    expression                     shift and go to state 160
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 174

    (100) map_entry -> expression COLON . expression
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression                     shift and go to state 184
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 175

    (65) block_statement -> LBRACE instructions RBRACE .

    ID              reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    PRINT           reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    IF              reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    WHILE           reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    FOR             reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    RETURN          reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    LBRACE          reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    INT             reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    DOUBLE          reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    STRING          reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    BOOL            reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    VOID            reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    VAR             reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    RBRACE          reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)
    ELSE            reduce using rule 65 (block_statement -> LBRACE instructions RBRACE .)


state 176

    (75) print_statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 185
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 177

    (82) if_else -> IF LPAREN expression . RPAREN instruction
    (83) if_else -> IF LPAREN expression . RPAREN instruction ELSE instruction
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 186
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 178

    (84) while_loop -> WHILE LPAREN expression . RPAREN instruction
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 187
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 179

    (85) for_loop -> FOR LPAREN for_initializer . SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction

    SEMICOLON       shift and go to state 188


state 180

    (86) for_initializer -> assignment .

    SEMICOLON       reduce using rule 86 (for_initializer -> assignment .)


state 181

    (87) for_initializer -> empty .

    SEMICOLON       reduce using rule 87 (for_initializer -> empty .)


state 182

    (79) return_statement -> RETURN expression SEMICOLON .

    ID              reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    DOUBLE          reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    VAR             reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 79 (return_statement -> RETURN expression SEMICOLON .)


state 183

    (98) map_entries -> map_entries COMMA map_entry .

    COMMA           reduce using rule 98 (map_entries -> map_entries COMMA map_entry .)
    RBRACE          reduce using rule 98 (map_entries -> map_entries COMMA map_entry .)


state 184

    (100) map_entry -> expression COLON expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    COMMA           reduce using rule 100 (map_entry -> expression COLON expression .)
    RBRACE          reduce using rule 100 (map_entry -> expression COLON expression .)
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 185

    (75) print_statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 189


state 186

    (82) if_else -> IF LPAREN expression RPAREN . instruction
    (83) if_else -> IF LPAREN expression RPAREN . instruction ELSE instruction
    (58) instruction -> . assignment SEMICOLON
    (59) instruction -> . print_statement
    (60) instruction -> . if_else
    (61) instruction -> . while_loop
    (62) instruction -> . for_loop
    (63) instruction -> . return_statement
    (64) instruction -> . block_statement
    (66) assignment -> . declaration_type ID EQUALS expression
    (67) assignment -> . ID assign_op expression
    (75) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (82) if_else -> . IF LPAREN expression RPAREN instruction
    (83) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (84) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (85) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (79) return_statement -> . RETURN expression SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (65) block_statement -> . LBRACE instructions RBRACE
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 9
    PRINT           shift and go to state 152
    IF              shift and go to state 153
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    RETURN          shift and go to state 156
    LBRACE          shift and go to state 140
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    instruction                    shift and go to state 190
    assignment                     shift and go to state 145
    print_statement                shift and go to state 146
    if_else                        shift and go to state 147
    while_loop                     shift and go to state 148
    for_loop                       shift and go to state 149
    return_statement               shift and go to state 150
    block_statement                shift and go to state 151
    declaration_type               shift and go to state 139
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 187

    (84) while_loop -> WHILE LPAREN expression RPAREN . instruction
    (58) instruction -> . assignment SEMICOLON
    (59) instruction -> . print_statement
    (60) instruction -> . if_else
    (61) instruction -> . while_loop
    (62) instruction -> . for_loop
    (63) instruction -> . return_statement
    (64) instruction -> . block_statement
    (66) assignment -> . declaration_type ID EQUALS expression
    (67) assignment -> . ID assign_op expression
    (75) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (82) if_else -> . IF LPAREN expression RPAREN instruction
    (83) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (84) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (85) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (79) return_statement -> . RETURN expression SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (65) block_statement -> . LBRACE instructions RBRACE
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 9
    PRINT           shift and go to state 152
    IF              shift and go to state 153
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    RETURN          shift and go to state 156
    LBRACE          shift and go to state 140
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    instruction                    shift and go to state 191
    assignment                     shift and go to state 145
    print_statement                shift and go to state 146
    if_else                        shift and go to state 147
    while_loop                     shift and go to state 148
    for_loop                       shift and go to state 149
    return_statement               shift and go to state 150
    block_statement                shift and go to state 151
    declaration_type               shift and go to state 139
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 188

    (85) for_loop -> FOR LPAREN for_initializer SEMICOLON . expression_opt SEMICOLON expression_opt RPAREN instruction
    (88) expression_opt -> . expression
    (89) expression_opt -> . empty
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (106) empty -> .
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    SEMICOLON       reduce using rule 106 (empty -> .)
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression_opt                 shift and go to state 192
    expression                     shift and go to state 193
    empty                          shift and go to state 194
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 189

    (75) print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    ID              reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 75 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 190

    (82) if_else -> IF LPAREN expression RPAREN instruction .
    (83) if_else -> IF LPAREN expression RPAREN instruction . ELSE instruction

  ! shift/reduce conflict for ELSE resolved as shift
    ID              reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    PRINT           reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    IF              reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    WHILE           reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    FOR             reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    RETURN          reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    LBRACE          reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    INT             reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    DOUBLE          reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    STRING          reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    BOOL            reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    VOID            reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    VAR             reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    RBRACE          reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .)
    ELSE            shift and go to state 195

  ! ELSE            [ reduce using rule 82 (if_else -> IF LPAREN expression RPAREN instruction .) ]


state 191

    (84) while_loop -> WHILE LPAREN expression RPAREN instruction .

    ID              reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    PRINT           reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    IF              reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    WHILE           reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    FOR             reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    RETURN          reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    LBRACE          reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    INT             reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    DOUBLE          reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    STRING          reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    BOOL            reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    VOID            reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    VAR             reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    RBRACE          reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    ELSE            reduce using rule 84 (while_loop -> WHILE LPAREN expression RPAREN instruction .)


state 192

    (85) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt . SEMICOLON expression_opt RPAREN instruction

    SEMICOLON       shift and go to state 196


state 193

    (88) expression_opt -> expression .
    (28) expression -> expression . AND expression
    (29) expression -> expression . OR expression
    (30) expression -> expression . EQEQ expression
    (31) expression -> expression . NEQ expression
    (32) expression -> expression . MINSIGN expression
    (33) expression -> expression . MAXSIGN expression
    (34) expression -> expression . MINSIGNEQ expression
    (35) expression -> expression . MAXSIGNEQ expression
    (37) expression -> expression . PLUSPLUS
    (38) expression -> expression . MINUSMINUS
    (39) expression -> expression . DOT ID
    (40) expression -> expression . LBRACKET expression RBRACKET
    (41) expression -> expression . LPAREN arguments RPAREN
    (44) expression -> expression . NOT
    (45) expression -> expression . PLUS expression
    (46) expression -> expression . MINUS expression
    (47) expression -> expression . TIMES expression
    (48) expression -> expression . DIVIDE expression
    (74) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 88 (expression_opt -> expression .)
    RPAREN          reduce using rule 88 (expression_opt -> expression .)
    AND             shift and go to state 55
    OR              shift and go to state 56
    EQEQ            shift and go to state 57
    NEQ             shift and go to state 58
    MINSIGN         shift and go to state 59
    MAXSIGN         shift and go to state 60
    MINSIGNEQ       shift and go to state 61
    MAXSIGNEQ       shift and go to state 62
    PLUSPLUS        shift and go to state 63
    MINUSMINUS      shift and go to state 64
    DOT             shift and go to state 65
    LBRACKET        shift and go to state 66
    LPAREN          shift and go to state 67
    NOT             shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    QMARK           shift and go to state 73


state 194

    (89) expression_opt -> empty .

    SEMICOLON       reduce using rule 89 (expression_opt -> empty .)
    RPAREN          reduce using rule 89 (expression_opt -> empty .)


state 195

    (83) if_else -> IF LPAREN expression RPAREN instruction ELSE . instruction
    (58) instruction -> . assignment SEMICOLON
    (59) instruction -> . print_statement
    (60) instruction -> . if_else
    (61) instruction -> . while_loop
    (62) instruction -> . for_loop
    (63) instruction -> . return_statement
    (64) instruction -> . block_statement
    (66) assignment -> . declaration_type ID EQUALS expression
    (67) assignment -> . ID assign_op expression
    (75) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (82) if_else -> . IF LPAREN expression RPAREN instruction
    (83) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (84) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (85) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (79) return_statement -> . RETURN expression SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (65) block_statement -> . LBRACE instructions RBRACE
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 9
    PRINT           shift and go to state 152
    IF              shift and go to state 153
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    RETURN          shift and go to state 156
    LBRACE          shift and go to state 140
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    instruction                    shift and go to state 197
    assignment                     shift and go to state 145
    print_statement                shift and go to state 146
    if_else                        shift and go to state 147
    while_loop                     shift and go to state 148
    for_loop                       shift and go to state 149
    return_statement               shift and go to state 150
    block_statement                shift and go to state 151
    declaration_type               shift and go to state 139
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 196

    (85) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON . expression_opt RPAREN instruction
    (88) expression_opt -> . expression
    (89) expression_opt -> . empty
    (28) expression -> . expression AND expression
    (29) expression -> . expression OR expression
    (30) expression -> . expression EQEQ expression
    (31) expression -> . expression NEQ expression
    (32) expression -> . expression MINSIGN expression
    (33) expression -> . expression MAXSIGN expression
    (34) expression -> . expression MINSIGNEQ expression
    (35) expression -> . expression MAXSIGNEQ expression
    (36) expression -> . NOT expression
    (37) expression -> . expression PLUSPLUS
    (38) expression -> . expression MINUSMINUS
    (39) expression -> . expression DOT ID
    (40) expression -> . expression LBRACKET expression RBRACKET
    (41) expression -> . expression LPAREN arguments RPAREN
    (44) expression -> . expression NOT
    (45) expression -> . expression PLUS expression
    (46) expression -> . expression MINUS expression
    (47) expression -> . expression TIMES expression
    (48) expression -> . expression DIVIDE expression
    (49) expression -> . term
    (74) expression -> . expression QMARK expression COLON expression
    (90) expression -> . LBRACKET expression_list RBRACKET
    (91) expression -> . LBRACE set_or_map_contents RBRACE
    (106) empty -> .
    (50) term -> . factor
    (51) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (52) factor -> . NUMBER
    (53) factor -> . STRING_LITERAL
    (54) factor -> . ID
    (55) factor -> . LPAREN expression RPAREN
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR

    NOT             shift and go to state 35
    LBRACKET        shift and go to state 36
    LBRACE          shift and go to state 39
    RPAREN          reduce using rule 106 (empty -> .)
    NUMBER          shift and go to state 42
    STRING_LITERAL  shift and go to state 43
    ID              shift and go to state 33
    LPAREN          shift and go to state 37
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    expression_opt                 shift and go to state 198
    expression                     shift and go to state 193
    empty                          shift and go to state 194
    term                           shift and go to state 38
    factor                         shift and go to state 40
    primitive_type                 shift and go to state 41

state 197

    (83) if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .

    ID              reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    PRINT           reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    IF              reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    WHILE           reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    FOR             reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    RETURN          reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    LBRACE          reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    INT             reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    DOUBLE          reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    STRING          reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    BOOL            reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    VOID            reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    VAR             reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    RBRACE          reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    ELSE            reduce using rule 83 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)


state 198

    (85) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt . RPAREN instruction

    RPAREN          shift and go to state 199


state 199

    (85) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN . instruction
    (58) instruction -> . assignment SEMICOLON
    (59) instruction -> . print_statement
    (60) instruction -> . if_else
    (61) instruction -> . while_loop
    (62) instruction -> . for_loop
    (63) instruction -> . return_statement
    (64) instruction -> . block_statement
    (66) assignment -> . declaration_type ID EQUALS expression
    (67) assignment -> . ID assign_op expression
    (75) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (82) if_else -> . IF LPAREN expression RPAREN instruction
    (83) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (84) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (85) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (79) return_statement -> . RETURN expression SEMICOLON
    (80) return_statement -> . RETURN SEMICOLON
    (65) block_statement -> . LBRACE instructions RBRACE
    (16) declaration_type -> . primitive_type
    (17) declaration_type -> . generic_type
    (18) declaration_type -> . ID
    (19) primitive_type -> . INT
    (20) primitive_type -> . DOUBLE
    (21) primitive_type -> . STRING
    (22) primitive_type -> . BOOL
    (23) primitive_type -> . VOID
    (24) primitive_type -> . VAR
    (25) generic_type -> . ID MINSIGN type_list MAXSIGN

    ID              shift and go to state 9
    PRINT           shift and go to state 152
    IF              shift and go to state 153
    WHILE           shift and go to state 154
    FOR             shift and go to state 155
    RETURN          shift and go to state 156
    LBRACE          shift and go to state 140
    INT             shift and go to state 13
    DOUBLE          shift and go to state 14
    STRING          shift and go to state 15
    BOOL            shift and go to state 16
    VOID            shift and go to state 17
    VAR             shift and go to state 18

    instruction                    shift and go to state 200
    assignment                     shift and go to state 145
    print_statement                shift and go to state 146
    if_else                        shift and go to state 147
    while_loop                     shift and go to state 148
    for_loop                       shift and go to state 149
    return_statement               shift and go to state 150
    block_statement                shift and go to state 151
    declaration_type               shift and go to state 139
    primitive_type                 shift and go to state 11
    generic_type                   shift and go to state 12

state 200

    (85) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .

    ID              reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    PRINT           reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    IF              reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    WHILE           reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    FOR             reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    RETURN          reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    LBRACE          reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    INT             reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    DOUBLE          reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    STRING          reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    BOOL            reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    VOID            reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    VAR             reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    RBRACE          reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    ELSE            reduce using rule 85 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AND in state 134 resolved as shift
WARNING: shift/reduce conflict for OR in state 134 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 134 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 134 resolved as shift
WARNING: shift/reduce conflict for MINSIGN in state 134 resolved as shift
WARNING: shift/reduce conflict for MAXSIGN in state 134 resolved as shift
WARNING: shift/reduce conflict for MINSIGNEQ in state 134 resolved as shift
WARNING: shift/reduce conflict for MAXSIGNEQ in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for DOT in state 134 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 134 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 134 resolved as shift
WARNING: shift/reduce conflict for NOT in state 134 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 134 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 134 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 134 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 134 resolved as shift
WARNING: shift/reduce conflict for QMARK in state 134 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 190 resolved as shift
WARNING: reduce/reduce conflict in state 104 resolved using rule (arguments -> empty)
WARNING: rejected rule (expression_list -> empty) in state 104
