Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CASE
    COMMENT
    EXTENDS
    FINAL
    IMPLEMENTS
    QMARK_DOT
    SQUOTE
    SWITCH
    THEN

Grammar

Rule 0     S' -> program
Rule 1     program -> declaration_list
Rule 2     declaration_list -> declaration_list declaration
Rule 3     declaration_list -> empty
Rule 4     declaration -> class
Rule 5     declaration -> function_declaration
Rule 6     declaration -> variable_declaration SEMICOLON
Rule 7     declaration -> import_statement
Rule 8     declaration -> const_declaration SEMICOLON
Rule 9     import_statement -> IMPORT STRING_LITERAL SEMICOLON
Rule 10    const_declaration -> CONST declaration_type ID EQUALS expression
Rule 11    class -> CLASS ID LBRACE class_body RBRACE
Rule 12    class_body -> class_member class_body
Rule 13    class_body -> empty
Rule 14    class_member -> class_property
Rule 15    class_member -> function_declaration
Rule 16    class_member -> constructor_declaration
Rule 17    function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
Rule 18    function_name -> ID
Rule 19    function_name -> MAIN
Rule 20    class_property -> declaration_type ID SEMICOLON
Rule 21    constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON
Rule 22    constructor_params -> constructor_param_list
Rule 23    constructor_params -> empty
Rule 24    constructor_param_list -> constructor_param_list COMMA constructor_param
Rule 25    constructor_param_list -> constructor_param
Rule 26    constructor_param -> THIS DOT ID
Rule 27    declaration_type -> primitive_type
Rule 28    declaration_type -> generic_type
Rule 29    declaration_type -> type_nullable
Rule 30    declaration_type -> ID
Rule 31    primitive_type -> INT
Rule 32    primitive_type -> DOUBLE
Rule 33    primitive_type -> STRING
Rule 34    primitive_type -> BOOL
Rule 35    primitive_type -> VOID
Rule 36    primitive_type -> VAR
Rule 37    primitive_type -> DYNAMIC
Rule 38    generic_type -> ID MINSIGN type_list MAXSIGN
Rule 39    type_nullable -> primitive_type QMARK
Rule 40    expression -> expression NULLCOALESCING expression
Rule 41    type_list -> type_list COMMA declaration_type
Rule 42    type_list -> declaration_type
Rule 43    expression -> expression AND expression
Rule 44    expression -> expression OR expression
Rule 45    expression -> expression EQEQ expression
Rule 46    expression -> expression NEQ expression
Rule 47    expression -> expression MINSIGN expression
Rule 48    expression -> expression MAXSIGN expression
Rule 49    expression -> expression MINSIGNEQ expression
Rule 50    expression -> expression MAXSIGNEQ expression
Rule 51    expression -> expression IS declaration_type
Rule 52    expression -> expression IS NOT declaration_type
Rule 53    expression -> NOT expression
Rule 54    expression -> MINUS expression
Rule 55    expression -> expression PLUSPLUS
Rule 56    expression -> expression MINUSMINUS
Rule 57    expression -> expression DOT ID
Rule 58    expression -> expression LBRACKET expression RBRACKET
Rule 59    expression -> expression LPAREN arguments RPAREN
Rule 60    arguments -> expression_list
Rule 61    arguments -> empty
Rule 62    expression -> expression NOT
Rule 63    expression -> expression PLUS expression
Rule 64    expression -> expression MINUS expression
Rule 65    expression -> expression TIMES expression
Rule 66    expression -> expression DIVIDE expression
Rule 67    expression -> expression INTDIV expression
Rule 68    expression -> expression MODULE expression
Rule 69    expression -> term
Rule 70    term -> factor
Rule 71    factor -> primitive_type DOT ID LPAREN arguments RPAREN
Rule 72    factor -> NUMBER
Rule 73    factor -> STRING_LITERAL
Rule 74    factor -> ID
Rule 75    factor -> TRUE
Rule 76    factor -> FALSE
Rule 77    factor -> LPAREN expression RPAREN
Rule 78    instructions -> instruction instructions
Rule 79    instructions -> empty
Rule 80    instruction -> variable_declaration SEMICOLON
Rule 81    instruction -> expression SEMICOLON
Rule 82    instruction -> print_statement
Rule 83    instruction -> if_else
Rule 84    instruction -> while_loop
Rule 85    instruction -> for_loop
Rule 86    instruction -> return_statement
Rule 87    instruction -> block_statement
Rule 88    instruction -> throw_statement
Rule 89    instruction -> try_statement
Rule 90    instruction -> const_declaration SEMICOLON
Rule 91    instruction -> break_statement
Rule 92    instruction -> continue_statement
Rule 93    try_statement -> TRY block_statement catch_clauses
Rule 94    try_statement -> TRY block_statement catch_clauses finally_clause
Rule 95    try_statement -> TRY block_statement finally_clause
Rule 96    catch_clauses -> catch_clauses catch_clause
Rule 97    catch_clauses -> catch_clause
Rule 98    catch_clause -> CATCH LPAREN ID RPAREN block_statement
Rule 99    catch_clause -> CATCH LPAREN ID ID RPAREN block_statement
Rule 100   finally_clause -> FINALLY block_statement
Rule 101   block_statement -> LBRACE instructions RBRACE
Rule 102   throw_statement -> THROW expression SEMICOLON
Rule 103   variable_declaration -> declaration_type ID
Rule 104   variable_declaration -> declaration_type ID EQUALS expression
Rule 105   expression -> expression EQUALS expression
Rule 106   expression -> expression PLUSEQ expression
Rule 107   expression -> expression MINUSEQ expression
Rule 108   expression -> expression TIMESEQ expression
Rule 109   expression -> expression DIVEQ expression
Rule 110   expression -> expression NULLASSIGN expression
Rule 111   expression -> expression QMARK expression COLON expression
Rule 112   print_statement -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 113   parameters -> parameters COMMA declaration_type ID
Rule 114   parameters -> declaration_type ID
Rule 115   parameters -> empty
Rule 116   return_statement -> RETURN expression SEMICOLON
Rule 117   return_statement -> RETURN SEMICOLON
Rule 118   body -> instructions
Rule 119   if_else -> IF LPAREN expression RPAREN instruction
Rule 120   if_else -> IF LPAREN expression RPAREN instruction ELSE instruction
Rule 121   while_loop -> WHILE LPAREN expression RPAREN instruction
Rule 122   for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
Rule 123   for_initializer -> variable_declaration
Rule 124   for_initializer -> expression
Rule 125   for_initializer -> empty
Rule 126   expression_opt -> expression
Rule 127   expression_opt -> empty
Rule 128   expression -> LBRACKET expression_list RBRACKET
Rule 129   expression -> LBRACE set_or_map_contents RBRACE
Rule 130   set_or_map_contents -> expression set_or_map_tail
Rule 131   set_or_map_contents -> empty
Rule 132   set_or_map_tail -> COLON expression map_tail
Rule 133   set_or_map_tail -> set_tail
Rule 134   map_tail -> COMMA map_entries
Rule 135   map_tail -> empty
Rule 136   map_entries -> map_entries COMMA map_entry
Rule 137   map_entries -> map_entry
Rule 138   map_entry -> expression COLON expression
Rule 139   set_tail -> COMMA expression_list
Rule 140   set_tail -> empty
Rule 141   expression_list -> expression COMMA expression_list
Rule 142   expression_list -> expression
Rule 143   expression_list -> empty
Rule 144   break_statement -> BREAK SEMICOLON
Rule 145   continue_statement -> CONTINUE SEMICOLON
Rule 146   empty -> <empty>

Terminals, with rules where they appear

AND                  : 43
BOOL                 : 34
BREAK                : 144
CASE                 : 
CATCH                : 98 99
CLASS                : 11
COLON                : 111 132 138
COMMA                : 24 41 113 134 136 139 141
COMMENT              : 
CONST                : 10
CONTINUE             : 145
DIVEQ                : 109
DIVIDE               : 66
DOT                  : 26 57 71
DOUBLE               : 32
DYNAMIC              : 37
ELSE                 : 120
EQEQ                 : 45
EQUALS               : 10 104 105
EXTENDS              : 
FALSE                : 76
FINAL                : 
FINALLY              : 100
FOR                  : 122
ID                   : 10 11 18 20 21 26 30 38 57 71 74 98 99 99 103 104 113 114
IF                   : 119 120
IMPLEMENTS           : 
IMPORT               : 9
INT                  : 31
INTDIV               : 67
IS                   : 51 52
LBRACE               : 11 17 101 129
LBRACKET             : 58 128
LPAREN               : 17 21 59 71 77 98 99 112 119 120 121 122
MAIN                 : 19
MAXSIGN              : 38 48
MAXSIGNEQ            : 50
MINSIGN              : 38 47
MINSIGNEQ            : 49
MINUS                : 54 64
MINUSEQ              : 107
MINUSMINUS           : 56
MODULE               : 68
NEQ                  : 46
NOT                  : 52 53 62
NULLASSIGN           : 110
NULLCOALESCING       : 40
NUMBER               : 72
OR                   : 44
PLUS                 : 63
PLUSEQ               : 106
PLUSPLUS             : 55
PRINT                : 112
QMARK                : 39 111
QMARK_DOT            : 
RBRACE               : 11 17 101 129
RBRACKET             : 58 128
RETURN               : 116 117
RPAREN               : 17 21 59 71 77 98 99 112 119 120 121 122
SEMICOLON            : 6 8 9 20 21 80 81 90 102 112 116 117 122 122 144 145
SQUOTE               : 
STRING               : 33
STRING_LITERAL       : 9 73
SWITCH               : 
THEN                 : 
THIS                 : 26
THROW                : 102
TIMES                : 65
TIMESEQ              : 108
TRUE                 : 75
TRY                  : 93 94 95
VAR                  : 36
VOID                 : 35
WHILE                : 121
error                : 

Nonterminals, with rules where they appear

arguments            : 59 71
block_statement      : 87 93 94 95 98 99 100
body                 : 17
break_statement      : 91
catch_clause         : 96 97
catch_clauses        : 93 94 96
class                : 4
class_body           : 11 12
class_member         : 12
class_property       : 14
const_declaration    : 8 90
constructor_declaration : 16
constructor_param    : 24 25
constructor_param_list : 22 24
constructor_params   : 21
continue_statement   : 92
declaration          : 2
declaration_list     : 1 2
declaration_type     : 10 17 20 41 42 51 52 103 104 113 114
empty                : 3 13 23 61 79 115 125 127 131 135 140 143
expression           : 10 40 40 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 52 53 54 55 56 57 58 58 59 62 63 63 64 64 65 65 66 66 67 67 68 68 77 81 102 104 105 105 106 106 107 107 108 108 109 109 110 110 111 111 111 112 116 119 120 121 124 126 130 132 138 138 141 142
expression_list      : 60 128 139 141
expression_opt       : 122 122
factor               : 70
finally_clause       : 94 95
for_initializer      : 122
for_loop             : 85
function_declaration : 5 15
function_name        : 17
generic_type         : 28
if_else              : 83
import_statement     : 7
instruction          : 78 119 120 120 121 122
instructions         : 78 101 118
map_entries          : 134 136
map_entry            : 136 137
map_tail             : 132
parameters           : 17 113
primitive_type       : 27 39 71
print_statement      : 82
program              : 0
return_statement     : 86
set_or_map_contents  : 129
set_or_map_tail      : 130
set_tail             : 133
term                 : 69
throw_statement      : 88
try_statement        : 89
type_list            : 38 41
type_nullable        : 29
variable_declaration : 6 80 123
while_loop           : 84

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . declaration_list
    (2) declaration_list -> . declaration_list declaration
    (3) declaration_list -> . empty
    (146) empty -> .

    CLASS           reduce using rule 146 (empty -> .)
    IMPORT          reduce using rule 146 (empty -> .)
    CONST           reduce using rule 146 (empty -> .)
    ID              reduce using rule 146 (empty -> .)
    INT             reduce using rule 146 (empty -> .)
    DOUBLE          reduce using rule 146 (empty -> .)
    STRING          reduce using rule 146 (empty -> .)
    BOOL            reduce using rule 146 (empty -> .)
    VOID            reduce using rule 146 (empty -> .)
    VAR             reduce using rule 146 (empty -> .)
    DYNAMIC         reduce using rule 146 (empty -> .)
    $end            reduce using rule 146 (empty -> .)

    program                        shift and go to state 1
    declaration_list               shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> program .



state 2

    (1) program -> declaration_list .
    (2) declaration_list -> declaration_list . declaration
    (4) declaration -> . class
    (5) declaration -> . function_declaration
    (6) declaration -> . variable_declaration SEMICOLON
    (7) declaration -> . import_statement
    (8) declaration -> . const_declaration SEMICOLON
    (11) class -> . CLASS ID LBRACE class_body RBRACE
    (17) function_declaration -> . declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (9) import_statement -> . IMPORT STRING_LITERAL SEMICOLON
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    $end            reduce using rule 1 (program -> declaration_list .)
    CLASS           shift and go to state 10
    IMPORT          shift and go to state 13
    CONST           shift and go to state 14
    ID              shift and go to state 11
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    declaration                    shift and go to state 4
    class                          shift and go to state 5
    function_declaration           shift and go to state 6
    variable_declaration           shift and go to state 7
    import_statement               shift and go to state 8
    const_declaration              shift and go to state 9
    declaration_type               shift and go to state 12
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 3

    (3) declaration_list -> empty .

    CLASS           reduce using rule 3 (declaration_list -> empty .)
    IMPORT          reduce using rule 3 (declaration_list -> empty .)
    CONST           reduce using rule 3 (declaration_list -> empty .)
    ID              reduce using rule 3 (declaration_list -> empty .)
    INT             reduce using rule 3 (declaration_list -> empty .)
    DOUBLE          reduce using rule 3 (declaration_list -> empty .)
    STRING          reduce using rule 3 (declaration_list -> empty .)
    BOOL            reduce using rule 3 (declaration_list -> empty .)
    VOID            reduce using rule 3 (declaration_list -> empty .)
    VAR             reduce using rule 3 (declaration_list -> empty .)
    DYNAMIC         reduce using rule 3 (declaration_list -> empty .)
    $end            reduce using rule 3 (declaration_list -> empty .)


state 4

    (2) declaration_list -> declaration_list declaration .

    CLASS           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    IMPORT          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    CONST           reduce using rule 2 (declaration_list -> declaration_list declaration .)
    ID              reduce using rule 2 (declaration_list -> declaration_list declaration .)
    INT             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DOUBLE          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    STRING          reduce using rule 2 (declaration_list -> declaration_list declaration .)
    BOOL            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VOID            reduce using rule 2 (declaration_list -> declaration_list declaration .)
    VAR             reduce using rule 2 (declaration_list -> declaration_list declaration .)
    DYNAMIC         reduce using rule 2 (declaration_list -> declaration_list declaration .)
    $end            reduce using rule 2 (declaration_list -> declaration_list declaration .)


state 5

    (4) declaration -> class .

    CLASS           reduce using rule 4 (declaration -> class .)
    IMPORT          reduce using rule 4 (declaration -> class .)
    CONST           reduce using rule 4 (declaration -> class .)
    ID              reduce using rule 4 (declaration -> class .)
    INT             reduce using rule 4 (declaration -> class .)
    DOUBLE          reduce using rule 4 (declaration -> class .)
    STRING          reduce using rule 4 (declaration -> class .)
    BOOL            reduce using rule 4 (declaration -> class .)
    VOID            reduce using rule 4 (declaration -> class .)
    VAR             reduce using rule 4 (declaration -> class .)
    DYNAMIC         reduce using rule 4 (declaration -> class .)
    $end            reduce using rule 4 (declaration -> class .)


state 6

    (5) declaration -> function_declaration .

    CLASS           reduce using rule 5 (declaration -> function_declaration .)
    IMPORT          reduce using rule 5 (declaration -> function_declaration .)
    CONST           reduce using rule 5 (declaration -> function_declaration .)
    ID              reduce using rule 5 (declaration -> function_declaration .)
    INT             reduce using rule 5 (declaration -> function_declaration .)
    DOUBLE          reduce using rule 5 (declaration -> function_declaration .)
    STRING          reduce using rule 5 (declaration -> function_declaration .)
    BOOL            reduce using rule 5 (declaration -> function_declaration .)
    VOID            reduce using rule 5 (declaration -> function_declaration .)
    VAR             reduce using rule 5 (declaration -> function_declaration .)
    DYNAMIC         reduce using rule 5 (declaration -> function_declaration .)
    $end            reduce using rule 5 (declaration -> function_declaration .)


state 7

    (6) declaration -> variable_declaration . SEMICOLON

    SEMICOLON       shift and go to state 25


state 8

    (7) declaration -> import_statement .

    CLASS           reduce using rule 7 (declaration -> import_statement .)
    IMPORT          reduce using rule 7 (declaration -> import_statement .)
    CONST           reduce using rule 7 (declaration -> import_statement .)
    ID              reduce using rule 7 (declaration -> import_statement .)
    INT             reduce using rule 7 (declaration -> import_statement .)
    DOUBLE          reduce using rule 7 (declaration -> import_statement .)
    STRING          reduce using rule 7 (declaration -> import_statement .)
    BOOL            reduce using rule 7 (declaration -> import_statement .)
    VOID            reduce using rule 7 (declaration -> import_statement .)
    VAR             reduce using rule 7 (declaration -> import_statement .)
    DYNAMIC         reduce using rule 7 (declaration -> import_statement .)
    $end            reduce using rule 7 (declaration -> import_statement .)


state 9

    (8) declaration -> const_declaration . SEMICOLON

    SEMICOLON       shift and go to state 26


state 10

    (11) class -> CLASS . ID LBRACE class_body RBRACE

    ID              shift and go to state 27


state 11

    (30) declaration_type -> ID .
    (38) generic_type -> ID . MINSIGN type_list MAXSIGN

  ! shift/reduce conflict for MINSIGN resolved as shift
    ID              reduce using rule 30 (declaration_type -> ID .)
    MAIN            reduce using rule 30 (declaration_type -> ID .)
    MAXSIGN         reduce using rule 30 (declaration_type -> ID .)
    COMMA           reduce using rule 30 (declaration_type -> ID .)
    NULLCOALESCING  reduce using rule 30 (declaration_type -> ID .)
    AND             reduce using rule 30 (declaration_type -> ID .)
    OR              reduce using rule 30 (declaration_type -> ID .)
    EQEQ            reduce using rule 30 (declaration_type -> ID .)
    NEQ             reduce using rule 30 (declaration_type -> ID .)
    MINSIGNEQ       reduce using rule 30 (declaration_type -> ID .)
    MAXSIGNEQ       reduce using rule 30 (declaration_type -> ID .)
    IS              reduce using rule 30 (declaration_type -> ID .)
    PLUSPLUS        reduce using rule 30 (declaration_type -> ID .)
    MINUSMINUS      reduce using rule 30 (declaration_type -> ID .)
    DOT             reduce using rule 30 (declaration_type -> ID .)
    LBRACKET        reduce using rule 30 (declaration_type -> ID .)
    LPAREN          reduce using rule 30 (declaration_type -> ID .)
    NOT             reduce using rule 30 (declaration_type -> ID .)
    PLUS            reduce using rule 30 (declaration_type -> ID .)
    MINUS           reduce using rule 30 (declaration_type -> ID .)
    TIMES           reduce using rule 30 (declaration_type -> ID .)
    DIVIDE          reduce using rule 30 (declaration_type -> ID .)
    INTDIV          reduce using rule 30 (declaration_type -> ID .)
    MODULE          reduce using rule 30 (declaration_type -> ID .)
    EQUALS          reduce using rule 30 (declaration_type -> ID .)
    PLUSEQ          reduce using rule 30 (declaration_type -> ID .)
    MINUSEQ         reduce using rule 30 (declaration_type -> ID .)
    TIMESEQ         reduce using rule 30 (declaration_type -> ID .)
    DIVEQ           reduce using rule 30 (declaration_type -> ID .)
    NULLASSIGN      reduce using rule 30 (declaration_type -> ID .)
    QMARK           reduce using rule 30 (declaration_type -> ID .)
    SEMICOLON       reduce using rule 30 (declaration_type -> ID .)
    RBRACKET        reduce using rule 30 (declaration_type -> ID .)
    RPAREN          reduce using rule 30 (declaration_type -> ID .)
    COLON           reduce using rule 30 (declaration_type -> ID .)
    RBRACE          reduce using rule 30 (declaration_type -> ID .)
    MINSIGN         shift and go to state 28

  ! MINSIGN         [ reduce using rule 30 (declaration_type -> ID .) ]


state 12

    (17) function_declaration -> declaration_type . function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (103) variable_declaration -> declaration_type . ID
    (104) variable_declaration -> declaration_type . ID EQUALS expression
    (18) function_name -> . ID
    (19) function_name -> . MAIN

    ID              shift and go to state 30
    MAIN            shift and go to state 31

    function_name                  shift and go to state 29

state 13

    (9) import_statement -> IMPORT . STRING_LITERAL SEMICOLON

    STRING_LITERAL  shift and go to state 32


state 14

    (10) const_declaration -> CONST . declaration_type ID EQUALS expression
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    ID              shift and go to state 11
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    declaration_type               shift and go to state 33
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 15

    (27) declaration_type -> primitive_type .
    (39) type_nullable -> primitive_type . QMARK

  ! shift/reduce conflict for QMARK resolved as shift
    ID              reduce using rule 27 (declaration_type -> primitive_type .)
    MAIN            reduce using rule 27 (declaration_type -> primitive_type .)
    MAXSIGN         reduce using rule 27 (declaration_type -> primitive_type .)
    COMMA           reduce using rule 27 (declaration_type -> primitive_type .)
    NULLCOALESCING  reduce using rule 27 (declaration_type -> primitive_type .)
    AND             reduce using rule 27 (declaration_type -> primitive_type .)
    OR              reduce using rule 27 (declaration_type -> primitive_type .)
    EQEQ            reduce using rule 27 (declaration_type -> primitive_type .)
    NEQ             reduce using rule 27 (declaration_type -> primitive_type .)
    MINSIGN         reduce using rule 27 (declaration_type -> primitive_type .)
    MINSIGNEQ       reduce using rule 27 (declaration_type -> primitive_type .)
    MAXSIGNEQ       reduce using rule 27 (declaration_type -> primitive_type .)
    IS              reduce using rule 27 (declaration_type -> primitive_type .)
    PLUSPLUS        reduce using rule 27 (declaration_type -> primitive_type .)
    MINUSMINUS      reduce using rule 27 (declaration_type -> primitive_type .)
    DOT             reduce using rule 27 (declaration_type -> primitive_type .)
    LBRACKET        reduce using rule 27 (declaration_type -> primitive_type .)
    LPAREN          reduce using rule 27 (declaration_type -> primitive_type .)
    NOT             reduce using rule 27 (declaration_type -> primitive_type .)
    PLUS            reduce using rule 27 (declaration_type -> primitive_type .)
    MINUS           reduce using rule 27 (declaration_type -> primitive_type .)
    TIMES           reduce using rule 27 (declaration_type -> primitive_type .)
    DIVIDE          reduce using rule 27 (declaration_type -> primitive_type .)
    INTDIV          reduce using rule 27 (declaration_type -> primitive_type .)
    MODULE          reduce using rule 27 (declaration_type -> primitive_type .)
    EQUALS          reduce using rule 27 (declaration_type -> primitive_type .)
    PLUSEQ          reduce using rule 27 (declaration_type -> primitive_type .)
    MINUSEQ         reduce using rule 27 (declaration_type -> primitive_type .)
    TIMESEQ         reduce using rule 27 (declaration_type -> primitive_type .)
    DIVEQ           reduce using rule 27 (declaration_type -> primitive_type .)
    NULLASSIGN      reduce using rule 27 (declaration_type -> primitive_type .)
    SEMICOLON       reduce using rule 27 (declaration_type -> primitive_type .)
    RBRACKET        reduce using rule 27 (declaration_type -> primitive_type .)
    RPAREN          reduce using rule 27 (declaration_type -> primitive_type .)
    COLON           reduce using rule 27 (declaration_type -> primitive_type .)
    RBRACE          reduce using rule 27 (declaration_type -> primitive_type .)
    QMARK           shift and go to state 34

  ! QMARK           [ reduce using rule 27 (declaration_type -> primitive_type .) ]


state 16

    (28) declaration_type -> generic_type .

    ID              reduce using rule 28 (declaration_type -> generic_type .)
    MAIN            reduce using rule 28 (declaration_type -> generic_type .)
    MAXSIGN         reduce using rule 28 (declaration_type -> generic_type .)
    COMMA           reduce using rule 28 (declaration_type -> generic_type .)
    NULLCOALESCING  reduce using rule 28 (declaration_type -> generic_type .)
    AND             reduce using rule 28 (declaration_type -> generic_type .)
    OR              reduce using rule 28 (declaration_type -> generic_type .)
    EQEQ            reduce using rule 28 (declaration_type -> generic_type .)
    NEQ             reduce using rule 28 (declaration_type -> generic_type .)
    MINSIGN         reduce using rule 28 (declaration_type -> generic_type .)
    MINSIGNEQ       reduce using rule 28 (declaration_type -> generic_type .)
    MAXSIGNEQ       reduce using rule 28 (declaration_type -> generic_type .)
    IS              reduce using rule 28 (declaration_type -> generic_type .)
    PLUSPLUS        reduce using rule 28 (declaration_type -> generic_type .)
    MINUSMINUS      reduce using rule 28 (declaration_type -> generic_type .)
    DOT             reduce using rule 28 (declaration_type -> generic_type .)
    LBRACKET        reduce using rule 28 (declaration_type -> generic_type .)
    LPAREN          reduce using rule 28 (declaration_type -> generic_type .)
    NOT             reduce using rule 28 (declaration_type -> generic_type .)
    PLUS            reduce using rule 28 (declaration_type -> generic_type .)
    MINUS           reduce using rule 28 (declaration_type -> generic_type .)
    TIMES           reduce using rule 28 (declaration_type -> generic_type .)
    DIVIDE          reduce using rule 28 (declaration_type -> generic_type .)
    INTDIV          reduce using rule 28 (declaration_type -> generic_type .)
    MODULE          reduce using rule 28 (declaration_type -> generic_type .)
    EQUALS          reduce using rule 28 (declaration_type -> generic_type .)
    PLUSEQ          reduce using rule 28 (declaration_type -> generic_type .)
    MINUSEQ         reduce using rule 28 (declaration_type -> generic_type .)
    TIMESEQ         reduce using rule 28 (declaration_type -> generic_type .)
    DIVEQ           reduce using rule 28 (declaration_type -> generic_type .)
    NULLASSIGN      reduce using rule 28 (declaration_type -> generic_type .)
    QMARK           reduce using rule 28 (declaration_type -> generic_type .)
    SEMICOLON       reduce using rule 28 (declaration_type -> generic_type .)
    RBRACKET        reduce using rule 28 (declaration_type -> generic_type .)
    RPAREN          reduce using rule 28 (declaration_type -> generic_type .)
    COLON           reduce using rule 28 (declaration_type -> generic_type .)
    RBRACE          reduce using rule 28 (declaration_type -> generic_type .)


state 17

    (29) declaration_type -> type_nullable .

    ID              reduce using rule 29 (declaration_type -> type_nullable .)
    MAIN            reduce using rule 29 (declaration_type -> type_nullable .)
    MAXSIGN         reduce using rule 29 (declaration_type -> type_nullable .)
    COMMA           reduce using rule 29 (declaration_type -> type_nullable .)
    NULLCOALESCING  reduce using rule 29 (declaration_type -> type_nullable .)
    AND             reduce using rule 29 (declaration_type -> type_nullable .)
    OR              reduce using rule 29 (declaration_type -> type_nullable .)
    EQEQ            reduce using rule 29 (declaration_type -> type_nullable .)
    NEQ             reduce using rule 29 (declaration_type -> type_nullable .)
    MINSIGN         reduce using rule 29 (declaration_type -> type_nullable .)
    MINSIGNEQ       reduce using rule 29 (declaration_type -> type_nullable .)
    MAXSIGNEQ       reduce using rule 29 (declaration_type -> type_nullable .)
    IS              reduce using rule 29 (declaration_type -> type_nullable .)
    PLUSPLUS        reduce using rule 29 (declaration_type -> type_nullable .)
    MINUSMINUS      reduce using rule 29 (declaration_type -> type_nullable .)
    DOT             reduce using rule 29 (declaration_type -> type_nullable .)
    LBRACKET        reduce using rule 29 (declaration_type -> type_nullable .)
    LPAREN          reduce using rule 29 (declaration_type -> type_nullable .)
    NOT             reduce using rule 29 (declaration_type -> type_nullable .)
    PLUS            reduce using rule 29 (declaration_type -> type_nullable .)
    MINUS           reduce using rule 29 (declaration_type -> type_nullable .)
    TIMES           reduce using rule 29 (declaration_type -> type_nullable .)
    DIVIDE          reduce using rule 29 (declaration_type -> type_nullable .)
    INTDIV          reduce using rule 29 (declaration_type -> type_nullable .)
    MODULE          reduce using rule 29 (declaration_type -> type_nullable .)
    EQUALS          reduce using rule 29 (declaration_type -> type_nullable .)
    PLUSEQ          reduce using rule 29 (declaration_type -> type_nullable .)
    MINUSEQ         reduce using rule 29 (declaration_type -> type_nullable .)
    TIMESEQ         reduce using rule 29 (declaration_type -> type_nullable .)
    DIVEQ           reduce using rule 29 (declaration_type -> type_nullable .)
    NULLASSIGN      reduce using rule 29 (declaration_type -> type_nullable .)
    QMARK           reduce using rule 29 (declaration_type -> type_nullable .)
    SEMICOLON       reduce using rule 29 (declaration_type -> type_nullable .)
    RBRACKET        reduce using rule 29 (declaration_type -> type_nullable .)
    RPAREN          reduce using rule 29 (declaration_type -> type_nullable .)
    COLON           reduce using rule 29 (declaration_type -> type_nullable .)
    RBRACE          reduce using rule 29 (declaration_type -> type_nullable .)


state 18

    (31) primitive_type -> INT .

    QMARK           reduce using rule 31 (primitive_type -> INT .)
    ID              reduce using rule 31 (primitive_type -> INT .)
    MAIN            reduce using rule 31 (primitive_type -> INT .)
    MAXSIGN         reduce using rule 31 (primitive_type -> INT .)
    COMMA           reduce using rule 31 (primitive_type -> INT .)
    DOT             reduce using rule 31 (primitive_type -> INT .)
    NULLCOALESCING  reduce using rule 31 (primitive_type -> INT .)
    AND             reduce using rule 31 (primitive_type -> INT .)
    OR              reduce using rule 31 (primitive_type -> INT .)
    EQEQ            reduce using rule 31 (primitive_type -> INT .)
    NEQ             reduce using rule 31 (primitive_type -> INT .)
    MINSIGN         reduce using rule 31 (primitive_type -> INT .)
    MINSIGNEQ       reduce using rule 31 (primitive_type -> INT .)
    MAXSIGNEQ       reduce using rule 31 (primitive_type -> INT .)
    IS              reduce using rule 31 (primitive_type -> INT .)
    PLUSPLUS        reduce using rule 31 (primitive_type -> INT .)
    MINUSMINUS      reduce using rule 31 (primitive_type -> INT .)
    LBRACKET        reduce using rule 31 (primitive_type -> INT .)
    LPAREN          reduce using rule 31 (primitive_type -> INT .)
    NOT             reduce using rule 31 (primitive_type -> INT .)
    PLUS            reduce using rule 31 (primitive_type -> INT .)
    MINUS           reduce using rule 31 (primitive_type -> INT .)
    TIMES           reduce using rule 31 (primitive_type -> INT .)
    DIVIDE          reduce using rule 31 (primitive_type -> INT .)
    INTDIV          reduce using rule 31 (primitive_type -> INT .)
    MODULE          reduce using rule 31 (primitive_type -> INT .)
    EQUALS          reduce using rule 31 (primitive_type -> INT .)
    PLUSEQ          reduce using rule 31 (primitive_type -> INT .)
    MINUSEQ         reduce using rule 31 (primitive_type -> INT .)
    TIMESEQ         reduce using rule 31 (primitive_type -> INT .)
    DIVEQ           reduce using rule 31 (primitive_type -> INT .)
    NULLASSIGN      reduce using rule 31 (primitive_type -> INT .)
    SEMICOLON       reduce using rule 31 (primitive_type -> INT .)
    RBRACKET        reduce using rule 31 (primitive_type -> INT .)
    RPAREN          reduce using rule 31 (primitive_type -> INT .)
    COLON           reduce using rule 31 (primitive_type -> INT .)
    RBRACE          reduce using rule 31 (primitive_type -> INT .)


state 19

    (32) primitive_type -> DOUBLE .

    QMARK           reduce using rule 32 (primitive_type -> DOUBLE .)
    ID              reduce using rule 32 (primitive_type -> DOUBLE .)
    MAIN            reduce using rule 32 (primitive_type -> DOUBLE .)
    MAXSIGN         reduce using rule 32 (primitive_type -> DOUBLE .)
    COMMA           reduce using rule 32 (primitive_type -> DOUBLE .)
    DOT             reduce using rule 32 (primitive_type -> DOUBLE .)
    NULLCOALESCING  reduce using rule 32 (primitive_type -> DOUBLE .)
    AND             reduce using rule 32 (primitive_type -> DOUBLE .)
    OR              reduce using rule 32 (primitive_type -> DOUBLE .)
    EQEQ            reduce using rule 32 (primitive_type -> DOUBLE .)
    NEQ             reduce using rule 32 (primitive_type -> DOUBLE .)
    MINSIGN         reduce using rule 32 (primitive_type -> DOUBLE .)
    MINSIGNEQ       reduce using rule 32 (primitive_type -> DOUBLE .)
    MAXSIGNEQ       reduce using rule 32 (primitive_type -> DOUBLE .)
    IS              reduce using rule 32 (primitive_type -> DOUBLE .)
    PLUSPLUS        reduce using rule 32 (primitive_type -> DOUBLE .)
    MINUSMINUS      reduce using rule 32 (primitive_type -> DOUBLE .)
    LBRACKET        reduce using rule 32 (primitive_type -> DOUBLE .)
    LPAREN          reduce using rule 32 (primitive_type -> DOUBLE .)
    NOT             reduce using rule 32 (primitive_type -> DOUBLE .)
    PLUS            reduce using rule 32 (primitive_type -> DOUBLE .)
    MINUS           reduce using rule 32 (primitive_type -> DOUBLE .)
    TIMES           reduce using rule 32 (primitive_type -> DOUBLE .)
    DIVIDE          reduce using rule 32 (primitive_type -> DOUBLE .)
    INTDIV          reduce using rule 32 (primitive_type -> DOUBLE .)
    MODULE          reduce using rule 32 (primitive_type -> DOUBLE .)
    EQUALS          reduce using rule 32 (primitive_type -> DOUBLE .)
    PLUSEQ          reduce using rule 32 (primitive_type -> DOUBLE .)
    MINUSEQ         reduce using rule 32 (primitive_type -> DOUBLE .)
    TIMESEQ         reduce using rule 32 (primitive_type -> DOUBLE .)
    DIVEQ           reduce using rule 32 (primitive_type -> DOUBLE .)
    NULLASSIGN      reduce using rule 32 (primitive_type -> DOUBLE .)
    SEMICOLON       reduce using rule 32 (primitive_type -> DOUBLE .)
    RBRACKET        reduce using rule 32 (primitive_type -> DOUBLE .)
    RPAREN          reduce using rule 32 (primitive_type -> DOUBLE .)
    COLON           reduce using rule 32 (primitive_type -> DOUBLE .)
    RBRACE          reduce using rule 32 (primitive_type -> DOUBLE .)


state 20

    (33) primitive_type -> STRING .

    QMARK           reduce using rule 33 (primitive_type -> STRING .)
    ID              reduce using rule 33 (primitive_type -> STRING .)
    MAIN            reduce using rule 33 (primitive_type -> STRING .)
    MAXSIGN         reduce using rule 33 (primitive_type -> STRING .)
    COMMA           reduce using rule 33 (primitive_type -> STRING .)
    DOT             reduce using rule 33 (primitive_type -> STRING .)
    NULLCOALESCING  reduce using rule 33 (primitive_type -> STRING .)
    AND             reduce using rule 33 (primitive_type -> STRING .)
    OR              reduce using rule 33 (primitive_type -> STRING .)
    EQEQ            reduce using rule 33 (primitive_type -> STRING .)
    NEQ             reduce using rule 33 (primitive_type -> STRING .)
    MINSIGN         reduce using rule 33 (primitive_type -> STRING .)
    MINSIGNEQ       reduce using rule 33 (primitive_type -> STRING .)
    MAXSIGNEQ       reduce using rule 33 (primitive_type -> STRING .)
    IS              reduce using rule 33 (primitive_type -> STRING .)
    PLUSPLUS        reduce using rule 33 (primitive_type -> STRING .)
    MINUSMINUS      reduce using rule 33 (primitive_type -> STRING .)
    LBRACKET        reduce using rule 33 (primitive_type -> STRING .)
    LPAREN          reduce using rule 33 (primitive_type -> STRING .)
    NOT             reduce using rule 33 (primitive_type -> STRING .)
    PLUS            reduce using rule 33 (primitive_type -> STRING .)
    MINUS           reduce using rule 33 (primitive_type -> STRING .)
    TIMES           reduce using rule 33 (primitive_type -> STRING .)
    DIVIDE          reduce using rule 33 (primitive_type -> STRING .)
    INTDIV          reduce using rule 33 (primitive_type -> STRING .)
    MODULE          reduce using rule 33 (primitive_type -> STRING .)
    EQUALS          reduce using rule 33 (primitive_type -> STRING .)
    PLUSEQ          reduce using rule 33 (primitive_type -> STRING .)
    MINUSEQ         reduce using rule 33 (primitive_type -> STRING .)
    TIMESEQ         reduce using rule 33 (primitive_type -> STRING .)
    DIVEQ           reduce using rule 33 (primitive_type -> STRING .)
    NULLASSIGN      reduce using rule 33 (primitive_type -> STRING .)
    SEMICOLON       reduce using rule 33 (primitive_type -> STRING .)
    RBRACKET        reduce using rule 33 (primitive_type -> STRING .)
    RPAREN          reduce using rule 33 (primitive_type -> STRING .)
    COLON           reduce using rule 33 (primitive_type -> STRING .)
    RBRACE          reduce using rule 33 (primitive_type -> STRING .)


state 21

    (34) primitive_type -> BOOL .

    QMARK           reduce using rule 34 (primitive_type -> BOOL .)
    ID              reduce using rule 34 (primitive_type -> BOOL .)
    MAIN            reduce using rule 34 (primitive_type -> BOOL .)
    MAXSIGN         reduce using rule 34 (primitive_type -> BOOL .)
    COMMA           reduce using rule 34 (primitive_type -> BOOL .)
    DOT             reduce using rule 34 (primitive_type -> BOOL .)
    NULLCOALESCING  reduce using rule 34 (primitive_type -> BOOL .)
    AND             reduce using rule 34 (primitive_type -> BOOL .)
    OR              reduce using rule 34 (primitive_type -> BOOL .)
    EQEQ            reduce using rule 34 (primitive_type -> BOOL .)
    NEQ             reduce using rule 34 (primitive_type -> BOOL .)
    MINSIGN         reduce using rule 34 (primitive_type -> BOOL .)
    MINSIGNEQ       reduce using rule 34 (primitive_type -> BOOL .)
    MAXSIGNEQ       reduce using rule 34 (primitive_type -> BOOL .)
    IS              reduce using rule 34 (primitive_type -> BOOL .)
    PLUSPLUS        reduce using rule 34 (primitive_type -> BOOL .)
    MINUSMINUS      reduce using rule 34 (primitive_type -> BOOL .)
    LBRACKET        reduce using rule 34 (primitive_type -> BOOL .)
    LPAREN          reduce using rule 34 (primitive_type -> BOOL .)
    NOT             reduce using rule 34 (primitive_type -> BOOL .)
    PLUS            reduce using rule 34 (primitive_type -> BOOL .)
    MINUS           reduce using rule 34 (primitive_type -> BOOL .)
    TIMES           reduce using rule 34 (primitive_type -> BOOL .)
    DIVIDE          reduce using rule 34 (primitive_type -> BOOL .)
    INTDIV          reduce using rule 34 (primitive_type -> BOOL .)
    MODULE          reduce using rule 34 (primitive_type -> BOOL .)
    EQUALS          reduce using rule 34 (primitive_type -> BOOL .)
    PLUSEQ          reduce using rule 34 (primitive_type -> BOOL .)
    MINUSEQ         reduce using rule 34 (primitive_type -> BOOL .)
    TIMESEQ         reduce using rule 34 (primitive_type -> BOOL .)
    DIVEQ           reduce using rule 34 (primitive_type -> BOOL .)
    NULLASSIGN      reduce using rule 34 (primitive_type -> BOOL .)
    SEMICOLON       reduce using rule 34 (primitive_type -> BOOL .)
    RBRACKET        reduce using rule 34 (primitive_type -> BOOL .)
    RPAREN          reduce using rule 34 (primitive_type -> BOOL .)
    COLON           reduce using rule 34 (primitive_type -> BOOL .)
    RBRACE          reduce using rule 34 (primitive_type -> BOOL .)


state 22

    (35) primitive_type -> VOID .

    QMARK           reduce using rule 35 (primitive_type -> VOID .)
    ID              reduce using rule 35 (primitive_type -> VOID .)
    MAIN            reduce using rule 35 (primitive_type -> VOID .)
    MAXSIGN         reduce using rule 35 (primitive_type -> VOID .)
    COMMA           reduce using rule 35 (primitive_type -> VOID .)
    DOT             reduce using rule 35 (primitive_type -> VOID .)
    NULLCOALESCING  reduce using rule 35 (primitive_type -> VOID .)
    AND             reduce using rule 35 (primitive_type -> VOID .)
    OR              reduce using rule 35 (primitive_type -> VOID .)
    EQEQ            reduce using rule 35 (primitive_type -> VOID .)
    NEQ             reduce using rule 35 (primitive_type -> VOID .)
    MINSIGN         reduce using rule 35 (primitive_type -> VOID .)
    MINSIGNEQ       reduce using rule 35 (primitive_type -> VOID .)
    MAXSIGNEQ       reduce using rule 35 (primitive_type -> VOID .)
    IS              reduce using rule 35 (primitive_type -> VOID .)
    PLUSPLUS        reduce using rule 35 (primitive_type -> VOID .)
    MINUSMINUS      reduce using rule 35 (primitive_type -> VOID .)
    LBRACKET        reduce using rule 35 (primitive_type -> VOID .)
    LPAREN          reduce using rule 35 (primitive_type -> VOID .)
    NOT             reduce using rule 35 (primitive_type -> VOID .)
    PLUS            reduce using rule 35 (primitive_type -> VOID .)
    MINUS           reduce using rule 35 (primitive_type -> VOID .)
    TIMES           reduce using rule 35 (primitive_type -> VOID .)
    DIVIDE          reduce using rule 35 (primitive_type -> VOID .)
    INTDIV          reduce using rule 35 (primitive_type -> VOID .)
    MODULE          reduce using rule 35 (primitive_type -> VOID .)
    EQUALS          reduce using rule 35 (primitive_type -> VOID .)
    PLUSEQ          reduce using rule 35 (primitive_type -> VOID .)
    MINUSEQ         reduce using rule 35 (primitive_type -> VOID .)
    TIMESEQ         reduce using rule 35 (primitive_type -> VOID .)
    DIVEQ           reduce using rule 35 (primitive_type -> VOID .)
    NULLASSIGN      reduce using rule 35 (primitive_type -> VOID .)
    SEMICOLON       reduce using rule 35 (primitive_type -> VOID .)
    RBRACKET        reduce using rule 35 (primitive_type -> VOID .)
    RPAREN          reduce using rule 35 (primitive_type -> VOID .)
    COLON           reduce using rule 35 (primitive_type -> VOID .)
    RBRACE          reduce using rule 35 (primitive_type -> VOID .)


state 23

    (36) primitive_type -> VAR .

    QMARK           reduce using rule 36 (primitive_type -> VAR .)
    ID              reduce using rule 36 (primitive_type -> VAR .)
    MAIN            reduce using rule 36 (primitive_type -> VAR .)
    MAXSIGN         reduce using rule 36 (primitive_type -> VAR .)
    COMMA           reduce using rule 36 (primitive_type -> VAR .)
    DOT             reduce using rule 36 (primitive_type -> VAR .)
    NULLCOALESCING  reduce using rule 36 (primitive_type -> VAR .)
    AND             reduce using rule 36 (primitive_type -> VAR .)
    OR              reduce using rule 36 (primitive_type -> VAR .)
    EQEQ            reduce using rule 36 (primitive_type -> VAR .)
    NEQ             reduce using rule 36 (primitive_type -> VAR .)
    MINSIGN         reduce using rule 36 (primitive_type -> VAR .)
    MINSIGNEQ       reduce using rule 36 (primitive_type -> VAR .)
    MAXSIGNEQ       reduce using rule 36 (primitive_type -> VAR .)
    IS              reduce using rule 36 (primitive_type -> VAR .)
    PLUSPLUS        reduce using rule 36 (primitive_type -> VAR .)
    MINUSMINUS      reduce using rule 36 (primitive_type -> VAR .)
    LBRACKET        reduce using rule 36 (primitive_type -> VAR .)
    LPAREN          reduce using rule 36 (primitive_type -> VAR .)
    NOT             reduce using rule 36 (primitive_type -> VAR .)
    PLUS            reduce using rule 36 (primitive_type -> VAR .)
    MINUS           reduce using rule 36 (primitive_type -> VAR .)
    TIMES           reduce using rule 36 (primitive_type -> VAR .)
    DIVIDE          reduce using rule 36 (primitive_type -> VAR .)
    INTDIV          reduce using rule 36 (primitive_type -> VAR .)
    MODULE          reduce using rule 36 (primitive_type -> VAR .)
    EQUALS          reduce using rule 36 (primitive_type -> VAR .)
    PLUSEQ          reduce using rule 36 (primitive_type -> VAR .)
    MINUSEQ         reduce using rule 36 (primitive_type -> VAR .)
    TIMESEQ         reduce using rule 36 (primitive_type -> VAR .)
    DIVEQ           reduce using rule 36 (primitive_type -> VAR .)
    NULLASSIGN      reduce using rule 36 (primitive_type -> VAR .)
    SEMICOLON       reduce using rule 36 (primitive_type -> VAR .)
    RBRACKET        reduce using rule 36 (primitive_type -> VAR .)
    RPAREN          reduce using rule 36 (primitive_type -> VAR .)
    COLON           reduce using rule 36 (primitive_type -> VAR .)
    RBRACE          reduce using rule 36 (primitive_type -> VAR .)


state 24

    (37) primitive_type -> DYNAMIC .

    QMARK           reduce using rule 37 (primitive_type -> DYNAMIC .)
    ID              reduce using rule 37 (primitive_type -> DYNAMIC .)
    MAIN            reduce using rule 37 (primitive_type -> DYNAMIC .)
    MAXSIGN         reduce using rule 37 (primitive_type -> DYNAMIC .)
    COMMA           reduce using rule 37 (primitive_type -> DYNAMIC .)
    DOT             reduce using rule 37 (primitive_type -> DYNAMIC .)
    NULLCOALESCING  reduce using rule 37 (primitive_type -> DYNAMIC .)
    AND             reduce using rule 37 (primitive_type -> DYNAMIC .)
    OR              reduce using rule 37 (primitive_type -> DYNAMIC .)
    EQEQ            reduce using rule 37 (primitive_type -> DYNAMIC .)
    NEQ             reduce using rule 37 (primitive_type -> DYNAMIC .)
    MINSIGN         reduce using rule 37 (primitive_type -> DYNAMIC .)
    MINSIGNEQ       reduce using rule 37 (primitive_type -> DYNAMIC .)
    MAXSIGNEQ       reduce using rule 37 (primitive_type -> DYNAMIC .)
    IS              reduce using rule 37 (primitive_type -> DYNAMIC .)
    PLUSPLUS        reduce using rule 37 (primitive_type -> DYNAMIC .)
    MINUSMINUS      reduce using rule 37 (primitive_type -> DYNAMIC .)
    LBRACKET        reduce using rule 37 (primitive_type -> DYNAMIC .)
    LPAREN          reduce using rule 37 (primitive_type -> DYNAMIC .)
    NOT             reduce using rule 37 (primitive_type -> DYNAMIC .)
    PLUS            reduce using rule 37 (primitive_type -> DYNAMIC .)
    MINUS           reduce using rule 37 (primitive_type -> DYNAMIC .)
    TIMES           reduce using rule 37 (primitive_type -> DYNAMIC .)
    DIVIDE          reduce using rule 37 (primitive_type -> DYNAMIC .)
    INTDIV          reduce using rule 37 (primitive_type -> DYNAMIC .)
    MODULE          reduce using rule 37 (primitive_type -> DYNAMIC .)
    EQUALS          reduce using rule 37 (primitive_type -> DYNAMIC .)
    PLUSEQ          reduce using rule 37 (primitive_type -> DYNAMIC .)
    MINUSEQ         reduce using rule 37 (primitive_type -> DYNAMIC .)
    TIMESEQ         reduce using rule 37 (primitive_type -> DYNAMIC .)
    DIVEQ           reduce using rule 37 (primitive_type -> DYNAMIC .)
    NULLASSIGN      reduce using rule 37 (primitive_type -> DYNAMIC .)
    SEMICOLON       reduce using rule 37 (primitive_type -> DYNAMIC .)
    RBRACKET        reduce using rule 37 (primitive_type -> DYNAMIC .)
    RPAREN          reduce using rule 37 (primitive_type -> DYNAMIC .)
    COLON           reduce using rule 37 (primitive_type -> DYNAMIC .)
    RBRACE          reduce using rule 37 (primitive_type -> DYNAMIC .)


state 25

    (6) declaration -> variable_declaration SEMICOLON .

    CLASS           reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    IMPORT          reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    CONST           reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    ID              reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    INT             reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    DOUBLE          reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    STRING          reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    BOOL            reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    VOID            reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    VAR             reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    DYNAMIC         reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)
    $end            reduce using rule 6 (declaration -> variable_declaration SEMICOLON .)


state 26

    (8) declaration -> const_declaration SEMICOLON .

    CLASS           reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    IMPORT          reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    CONST           reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    ID              reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    INT             reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    DOUBLE          reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    STRING          reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    BOOL            reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    VOID            reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    VAR             reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    DYNAMIC         reduce using rule 8 (declaration -> const_declaration SEMICOLON .)
    $end            reduce using rule 8 (declaration -> const_declaration SEMICOLON .)


state 27

    (11) class -> CLASS ID . LBRACE class_body RBRACE

    LBRACE          shift and go to state 35


state 28

    (38) generic_type -> ID MINSIGN . type_list MAXSIGN
    (41) type_list -> . type_list COMMA declaration_type
    (42) type_list -> . declaration_type
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    ID              shift and go to state 11
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    type_list                      shift and go to state 36
    declaration_type               shift and go to state 37
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 29

    (17) function_declaration -> declaration_type function_name . LPAREN parameters RPAREN LBRACE body RBRACE

    LPAREN          shift and go to state 38


state 30

    (103) variable_declaration -> declaration_type ID .
    (104) variable_declaration -> declaration_type ID . EQUALS expression
    (18) function_name -> ID .

    SEMICOLON       reduce using rule 103 (variable_declaration -> declaration_type ID .)
    EQUALS          shift and go to state 39
    LPAREN          reduce using rule 18 (function_name -> ID .)


state 31

    (19) function_name -> MAIN .

    LPAREN          reduce using rule 19 (function_name -> MAIN .)


state 32

    (9) import_statement -> IMPORT STRING_LITERAL . SEMICOLON

    SEMICOLON       shift and go to state 40


state 33

    (10) const_declaration -> CONST declaration_type . ID EQUALS expression

    ID              shift and go to state 41


state 34

    (39) type_nullable -> primitive_type QMARK .

    ID              reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    MAIN            reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    MAXSIGN         reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    COMMA           reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    NULLCOALESCING  reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    AND             reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    OR              reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    EQEQ            reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    NEQ             reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    MINSIGN         reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    MINSIGNEQ       reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    MAXSIGNEQ       reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    IS              reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    PLUSPLUS        reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    MINUSMINUS      reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    DOT             reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    LBRACKET        reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    LPAREN          reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    NOT             reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    PLUS            reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    MINUS           reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    TIMES           reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    DIVIDE          reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    INTDIV          reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    MODULE          reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    EQUALS          reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    PLUSEQ          reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    MINUSEQ         reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    TIMESEQ         reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    DIVEQ           reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    NULLASSIGN      reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    QMARK           reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    SEMICOLON       reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    RBRACKET        reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    RPAREN          reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    COLON           reduce using rule 39 (type_nullable -> primitive_type QMARK .)
    RBRACE          reduce using rule 39 (type_nullable -> primitive_type QMARK .)


state 35

    (11) class -> CLASS ID LBRACE . class_body RBRACE
    (12) class_body -> . class_member class_body
    (13) class_body -> . empty
    (14) class_member -> . class_property
    (15) class_member -> . function_declaration
    (16) class_member -> . constructor_declaration
    (146) empty -> .
    (20) class_property -> . declaration_type ID SEMICOLON
    (17) function_declaration -> . declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (21) constructor_declaration -> . ID LPAREN constructor_params RPAREN SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    RBRACE          reduce using rule 146 (empty -> .)
    ID              shift and go to state 42
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    class_body                     shift and go to state 43
    class_member                   shift and go to state 44
    empty                          shift and go to state 45
    class_property                 shift and go to state 46
    function_declaration           shift and go to state 47
    constructor_declaration        shift and go to state 48
    declaration_type               shift and go to state 49
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 36

    (38) generic_type -> ID MINSIGN type_list . MAXSIGN
    (41) type_list -> type_list . COMMA declaration_type

    MAXSIGN         shift and go to state 50
    COMMA           shift and go to state 51


state 37

    (42) type_list -> declaration_type .

    MAXSIGN         reduce using rule 42 (type_list -> declaration_type .)
    COMMA           reduce using rule 42 (type_list -> declaration_type .)


state 38

    (17) function_declaration -> declaration_type function_name LPAREN . parameters RPAREN LBRACE body RBRACE
    (113) parameters -> . parameters COMMA declaration_type ID
    (114) parameters -> . declaration_type ID
    (115) parameters -> . empty
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (146) empty -> .
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    ID              shift and go to state 11
    RPAREN          reduce using rule 146 (empty -> .)
    COMMA           reduce using rule 146 (empty -> .)
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    declaration_type               shift and go to state 52
    parameters                     shift and go to state 53
    empty                          shift and go to state 54
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 39

    (104) variable_declaration -> declaration_type ID EQUALS . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 56
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 40

    (9) import_statement -> IMPORT STRING_LITERAL SEMICOLON .

    CLASS           reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    IMPORT          reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    CONST           reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    ID              reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    INT             reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    DOUBLE          reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    STRING          reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    BOOL            reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    VOID            reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    VAR             reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    DYNAMIC         reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)
    $end            reduce using rule 9 (import_statement -> IMPORT STRING_LITERAL SEMICOLON .)


state 41

    (10) const_declaration -> CONST declaration_type ID . EQUALS expression

    EQUALS          shift and go to state 69


state 42

    (21) constructor_declaration -> ID . LPAREN constructor_params RPAREN SEMICOLON
    (30) declaration_type -> ID .
    (38) generic_type -> ID . MINSIGN type_list MAXSIGN

    LPAREN          shift and go to state 70
    ID              reduce using rule 30 (declaration_type -> ID .)
    MAIN            reduce using rule 30 (declaration_type -> ID .)
    MINSIGN         shift and go to state 28


state 43

    (11) class -> CLASS ID LBRACE class_body . RBRACE

    RBRACE          shift and go to state 71


state 44

    (12) class_body -> class_member . class_body
    (12) class_body -> . class_member class_body
    (13) class_body -> . empty
    (14) class_member -> . class_property
    (15) class_member -> . function_declaration
    (16) class_member -> . constructor_declaration
    (146) empty -> .
    (20) class_property -> . declaration_type ID SEMICOLON
    (17) function_declaration -> . declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (21) constructor_declaration -> . ID LPAREN constructor_params RPAREN SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    RBRACE          reduce using rule 146 (empty -> .)
    ID              shift and go to state 42
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    class_member                   shift and go to state 44
    class_body                     shift and go to state 72
    empty                          shift and go to state 45
    class_property                 shift and go to state 46
    function_declaration           shift and go to state 47
    constructor_declaration        shift and go to state 48
    declaration_type               shift and go to state 49
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 45

    (13) class_body -> empty .

    RBRACE          reduce using rule 13 (class_body -> empty .)


state 46

    (14) class_member -> class_property .

    ID              reduce using rule 14 (class_member -> class_property .)
    INT             reduce using rule 14 (class_member -> class_property .)
    DOUBLE          reduce using rule 14 (class_member -> class_property .)
    STRING          reduce using rule 14 (class_member -> class_property .)
    BOOL            reduce using rule 14 (class_member -> class_property .)
    VOID            reduce using rule 14 (class_member -> class_property .)
    VAR             reduce using rule 14 (class_member -> class_property .)
    DYNAMIC         reduce using rule 14 (class_member -> class_property .)
    RBRACE          reduce using rule 14 (class_member -> class_property .)


state 47

    (15) class_member -> function_declaration .

    ID              reduce using rule 15 (class_member -> function_declaration .)
    INT             reduce using rule 15 (class_member -> function_declaration .)
    DOUBLE          reduce using rule 15 (class_member -> function_declaration .)
    STRING          reduce using rule 15 (class_member -> function_declaration .)
    BOOL            reduce using rule 15 (class_member -> function_declaration .)
    VOID            reduce using rule 15 (class_member -> function_declaration .)
    VAR             reduce using rule 15 (class_member -> function_declaration .)
    DYNAMIC         reduce using rule 15 (class_member -> function_declaration .)
    RBRACE          reduce using rule 15 (class_member -> function_declaration .)


state 48

    (16) class_member -> constructor_declaration .

    ID              reduce using rule 16 (class_member -> constructor_declaration .)
    INT             reduce using rule 16 (class_member -> constructor_declaration .)
    DOUBLE          reduce using rule 16 (class_member -> constructor_declaration .)
    STRING          reduce using rule 16 (class_member -> constructor_declaration .)
    BOOL            reduce using rule 16 (class_member -> constructor_declaration .)
    VOID            reduce using rule 16 (class_member -> constructor_declaration .)
    VAR             reduce using rule 16 (class_member -> constructor_declaration .)
    DYNAMIC         reduce using rule 16 (class_member -> constructor_declaration .)
    RBRACE          reduce using rule 16 (class_member -> constructor_declaration .)


state 49

    (20) class_property -> declaration_type . ID SEMICOLON
    (17) function_declaration -> declaration_type . function_name LPAREN parameters RPAREN LBRACE body RBRACE
    (18) function_name -> . ID
    (19) function_name -> . MAIN

    ID              shift and go to state 73
    MAIN            shift and go to state 31

    function_name                  shift and go to state 29

state 50

    (38) generic_type -> ID MINSIGN type_list MAXSIGN .

    ID              reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MAIN            reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MAXSIGN         reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    COMMA           reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    NULLCOALESCING  reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    AND             reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    OR              reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    EQEQ            reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    NEQ             reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINSIGN         reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINSIGNEQ       reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MAXSIGNEQ       reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    IS              reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    PLUSPLUS        reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINUSMINUS      reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    DOT             reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    LBRACKET        reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    LPAREN          reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    NOT             reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    PLUS            reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINUS           reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    TIMES           reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    DIVIDE          reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    INTDIV          reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MODULE          reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    EQUALS          reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    PLUSEQ          reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    MINUSEQ         reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    TIMESEQ         reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    DIVEQ           reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    NULLASSIGN      reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    QMARK           reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    SEMICOLON       reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    RBRACKET        reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    RPAREN          reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    COLON           reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)
    RBRACE          reduce using rule 38 (generic_type -> ID MINSIGN type_list MAXSIGN .)


state 51

    (41) type_list -> type_list COMMA . declaration_type
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    ID              shift and go to state 11
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    declaration_type               shift and go to state 74
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 52

    (114) parameters -> declaration_type . ID

    ID              shift and go to state 75


state 53

    (17) function_declaration -> declaration_type function_name LPAREN parameters . RPAREN LBRACE body RBRACE
    (113) parameters -> parameters . COMMA declaration_type ID

    RPAREN          shift and go to state 76
    COMMA           shift and go to state 77


state 54

    (115) parameters -> empty .

    RPAREN          reduce using rule 115 (parameters -> empty .)
    COMMA           reduce using rule 115 (parameters -> empty .)


state 55

    (74) factor -> ID .

    NULLCOALESCING  reduce using rule 74 (factor -> ID .)
    AND             reduce using rule 74 (factor -> ID .)
    OR              reduce using rule 74 (factor -> ID .)
    EQEQ            reduce using rule 74 (factor -> ID .)
    NEQ             reduce using rule 74 (factor -> ID .)
    MINSIGN         reduce using rule 74 (factor -> ID .)
    MAXSIGN         reduce using rule 74 (factor -> ID .)
    MINSIGNEQ       reduce using rule 74 (factor -> ID .)
    MAXSIGNEQ       reduce using rule 74 (factor -> ID .)
    IS              reduce using rule 74 (factor -> ID .)
    PLUSPLUS        reduce using rule 74 (factor -> ID .)
    MINUSMINUS      reduce using rule 74 (factor -> ID .)
    DOT             reduce using rule 74 (factor -> ID .)
    LBRACKET        reduce using rule 74 (factor -> ID .)
    LPAREN          reduce using rule 74 (factor -> ID .)
    NOT             reduce using rule 74 (factor -> ID .)
    PLUS            reduce using rule 74 (factor -> ID .)
    MINUS           reduce using rule 74 (factor -> ID .)
    TIMES           reduce using rule 74 (factor -> ID .)
    DIVIDE          reduce using rule 74 (factor -> ID .)
    INTDIV          reduce using rule 74 (factor -> ID .)
    MODULE          reduce using rule 74 (factor -> ID .)
    EQUALS          reduce using rule 74 (factor -> ID .)
    PLUSEQ          reduce using rule 74 (factor -> ID .)
    MINUSEQ         reduce using rule 74 (factor -> ID .)
    TIMESEQ         reduce using rule 74 (factor -> ID .)
    DIVEQ           reduce using rule 74 (factor -> ID .)
    NULLASSIGN      reduce using rule 74 (factor -> ID .)
    QMARK           reduce using rule 74 (factor -> ID .)
    SEMICOLON       reduce using rule 74 (factor -> ID .)
    COMMA           reduce using rule 74 (factor -> ID .)
    RBRACKET        reduce using rule 74 (factor -> ID .)
    RPAREN          reduce using rule 74 (factor -> ID .)
    COLON           reduce using rule 74 (factor -> ID .)
    RBRACE          reduce using rule 74 (factor -> ID .)


state 56

    (104) variable_declaration -> declaration_type ID EQUALS expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 104 (variable_declaration -> declaration_type ID EQUALS expression .)
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 57

    (53) expression -> NOT . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 107
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 58

    (54) expression -> MINUS . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 108
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 59

    (128) expression -> LBRACKET . expression_list RBRACKET
    (141) expression_list -> . expression COMMA expression_list
    (142) expression_list -> . expression
    (143) expression_list -> . empty
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (146) empty -> .
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    RBRACKET        reduce using rule 146 (empty -> .)
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression_list                shift and go to state 109
    expression                     shift and go to state 110
    empty                          shift and go to state 111
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 60

    (77) factor -> LPAREN . expression RPAREN
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 112
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 61

    (69) expression -> term .

    NULLCOALESCING  reduce using rule 69 (expression -> term .)
    AND             reduce using rule 69 (expression -> term .)
    OR              reduce using rule 69 (expression -> term .)
    EQEQ            reduce using rule 69 (expression -> term .)
    NEQ             reduce using rule 69 (expression -> term .)
    MINSIGN         reduce using rule 69 (expression -> term .)
    MAXSIGN         reduce using rule 69 (expression -> term .)
    MINSIGNEQ       reduce using rule 69 (expression -> term .)
    MAXSIGNEQ       reduce using rule 69 (expression -> term .)
    IS              reduce using rule 69 (expression -> term .)
    PLUSPLUS        reduce using rule 69 (expression -> term .)
    MINUSMINUS      reduce using rule 69 (expression -> term .)
    DOT             reduce using rule 69 (expression -> term .)
    LBRACKET        reduce using rule 69 (expression -> term .)
    LPAREN          reduce using rule 69 (expression -> term .)
    NOT             reduce using rule 69 (expression -> term .)
    PLUS            reduce using rule 69 (expression -> term .)
    MINUS           reduce using rule 69 (expression -> term .)
    TIMES           reduce using rule 69 (expression -> term .)
    DIVIDE          reduce using rule 69 (expression -> term .)
    INTDIV          reduce using rule 69 (expression -> term .)
    MODULE          reduce using rule 69 (expression -> term .)
    EQUALS          reduce using rule 69 (expression -> term .)
    PLUSEQ          reduce using rule 69 (expression -> term .)
    MINUSEQ         reduce using rule 69 (expression -> term .)
    TIMESEQ         reduce using rule 69 (expression -> term .)
    DIVEQ           reduce using rule 69 (expression -> term .)
    NULLASSIGN      reduce using rule 69 (expression -> term .)
    QMARK           reduce using rule 69 (expression -> term .)
    SEMICOLON       reduce using rule 69 (expression -> term .)
    COMMA           reduce using rule 69 (expression -> term .)
    RBRACKET        reduce using rule 69 (expression -> term .)
    RPAREN          reduce using rule 69 (expression -> term .)
    COLON           reduce using rule 69 (expression -> term .)
    RBRACE          reduce using rule 69 (expression -> term .)


state 62

    (129) expression -> LBRACE . set_or_map_contents RBRACE
    (130) set_or_map_contents -> . expression set_or_map_tail
    (131) set_or_map_contents -> . empty
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (146) empty -> .
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    RBRACE          reduce using rule 146 (empty -> .)
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    set_or_map_contents            shift and go to state 113
    expression                     shift and go to state 114
    empty                          shift and go to state 115
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 63

    (70) term -> factor .

    NULLCOALESCING  reduce using rule 70 (term -> factor .)
    AND             reduce using rule 70 (term -> factor .)
    OR              reduce using rule 70 (term -> factor .)
    EQEQ            reduce using rule 70 (term -> factor .)
    NEQ             reduce using rule 70 (term -> factor .)
    MINSIGN         reduce using rule 70 (term -> factor .)
    MAXSIGN         reduce using rule 70 (term -> factor .)
    MINSIGNEQ       reduce using rule 70 (term -> factor .)
    MAXSIGNEQ       reduce using rule 70 (term -> factor .)
    IS              reduce using rule 70 (term -> factor .)
    PLUSPLUS        reduce using rule 70 (term -> factor .)
    MINUSMINUS      reduce using rule 70 (term -> factor .)
    DOT             reduce using rule 70 (term -> factor .)
    LBRACKET        reduce using rule 70 (term -> factor .)
    LPAREN          reduce using rule 70 (term -> factor .)
    NOT             reduce using rule 70 (term -> factor .)
    PLUS            reduce using rule 70 (term -> factor .)
    MINUS           reduce using rule 70 (term -> factor .)
    TIMES           reduce using rule 70 (term -> factor .)
    DIVIDE          reduce using rule 70 (term -> factor .)
    INTDIV          reduce using rule 70 (term -> factor .)
    MODULE          reduce using rule 70 (term -> factor .)
    EQUALS          reduce using rule 70 (term -> factor .)
    PLUSEQ          reduce using rule 70 (term -> factor .)
    MINUSEQ         reduce using rule 70 (term -> factor .)
    TIMESEQ         reduce using rule 70 (term -> factor .)
    DIVEQ           reduce using rule 70 (term -> factor .)
    NULLASSIGN      reduce using rule 70 (term -> factor .)
    QMARK           reduce using rule 70 (term -> factor .)
    SEMICOLON       reduce using rule 70 (term -> factor .)
    COMMA           reduce using rule 70 (term -> factor .)
    RBRACKET        reduce using rule 70 (term -> factor .)
    RPAREN          reduce using rule 70 (term -> factor .)
    COLON           reduce using rule 70 (term -> factor .)
    RBRACE          reduce using rule 70 (term -> factor .)


state 64

    (71) factor -> primitive_type . DOT ID LPAREN arguments RPAREN

    DOT             shift and go to state 116


state 65

    (72) factor -> NUMBER .

    NULLCOALESCING  reduce using rule 72 (factor -> NUMBER .)
    AND             reduce using rule 72 (factor -> NUMBER .)
    OR              reduce using rule 72 (factor -> NUMBER .)
    EQEQ            reduce using rule 72 (factor -> NUMBER .)
    NEQ             reduce using rule 72 (factor -> NUMBER .)
    MINSIGN         reduce using rule 72 (factor -> NUMBER .)
    MAXSIGN         reduce using rule 72 (factor -> NUMBER .)
    MINSIGNEQ       reduce using rule 72 (factor -> NUMBER .)
    MAXSIGNEQ       reduce using rule 72 (factor -> NUMBER .)
    IS              reduce using rule 72 (factor -> NUMBER .)
    PLUSPLUS        reduce using rule 72 (factor -> NUMBER .)
    MINUSMINUS      reduce using rule 72 (factor -> NUMBER .)
    DOT             reduce using rule 72 (factor -> NUMBER .)
    LBRACKET        reduce using rule 72 (factor -> NUMBER .)
    LPAREN          reduce using rule 72 (factor -> NUMBER .)
    NOT             reduce using rule 72 (factor -> NUMBER .)
    PLUS            reduce using rule 72 (factor -> NUMBER .)
    MINUS           reduce using rule 72 (factor -> NUMBER .)
    TIMES           reduce using rule 72 (factor -> NUMBER .)
    DIVIDE          reduce using rule 72 (factor -> NUMBER .)
    INTDIV          reduce using rule 72 (factor -> NUMBER .)
    MODULE          reduce using rule 72 (factor -> NUMBER .)
    EQUALS          reduce using rule 72 (factor -> NUMBER .)
    PLUSEQ          reduce using rule 72 (factor -> NUMBER .)
    MINUSEQ         reduce using rule 72 (factor -> NUMBER .)
    TIMESEQ         reduce using rule 72 (factor -> NUMBER .)
    DIVEQ           reduce using rule 72 (factor -> NUMBER .)
    NULLASSIGN      reduce using rule 72 (factor -> NUMBER .)
    QMARK           reduce using rule 72 (factor -> NUMBER .)
    SEMICOLON       reduce using rule 72 (factor -> NUMBER .)
    COMMA           reduce using rule 72 (factor -> NUMBER .)
    RBRACKET        reduce using rule 72 (factor -> NUMBER .)
    RPAREN          reduce using rule 72 (factor -> NUMBER .)
    COLON           reduce using rule 72 (factor -> NUMBER .)
    RBRACE          reduce using rule 72 (factor -> NUMBER .)


state 66

    (73) factor -> STRING_LITERAL .

    NULLCOALESCING  reduce using rule 73 (factor -> STRING_LITERAL .)
    AND             reduce using rule 73 (factor -> STRING_LITERAL .)
    OR              reduce using rule 73 (factor -> STRING_LITERAL .)
    EQEQ            reduce using rule 73 (factor -> STRING_LITERAL .)
    NEQ             reduce using rule 73 (factor -> STRING_LITERAL .)
    MINSIGN         reduce using rule 73 (factor -> STRING_LITERAL .)
    MAXSIGN         reduce using rule 73 (factor -> STRING_LITERAL .)
    MINSIGNEQ       reduce using rule 73 (factor -> STRING_LITERAL .)
    MAXSIGNEQ       reduce using rule 73 (factor -> STRING_LITERAL .)
    IS              reduce using rule 73 (factor -> STRING_LITERAL .)
    PLUSPLUS        reduce using rule 73 (factor -> STRING_LITERAL .)
    MINUSMINUS      reduce using rule 73 (factor -> STRING_LITERAL .)
    DOT             reduce using rule 73 (factor -> STRING_LITERAL .)
    LBRACKET        reduce using rule 73 (factor -> STRING_LITERAL .)
    LPAREN          reduce using rule 73 (factor -> STRING_LITERAL .)
    NOT             reduce using rule 73 (factor -> STRING_LITERAL .)
    PLUS            reduce using rule 73 (factor -> STRING_LITERAL .)
    MINUS           reduce using rule 73 (factor -> STRING_LITERAL .)
    TIMES           reduce using rule 73 (factor -> STRING_LITERAL .)
    DIVIDE          reduce using rule 73 (factor -> STRING_LITERAL .)
    INTDIV          reduce using rule 73 (factor -> STRING_LITERAL .)
    MODULE          reduce using rule 73 (factor -> STRING_LITERAL .)
    EQUALS          reduce using rule 73 (factor -> STRING_LITERAL .)
    PLUSEQ          reduce using rule 73 (factor -> STRING_LITERAL .)
    MINUSEQ         reduce using rule 73 (factor -> STRING_LITERAL .)
    TIMESEQ         reduce using rule 73 (factor -> STRING_LITERAL .)
    DIVEQ           reduce using rule 73 (factor -> STRING_LITERAL .)
    NULLASSIGN      reduce using rule 73 (factor -> STRING_LITERAL .)
    QMARK           reduce using rule 73 (factor -> STRING_LITERAL .)
    SEMICOLON       reduce using rule 73 (factor -> STRING_LITERAL .)
    COMMA           reduce using rule 73 (factor -> STRING_LITERAL .)
    RBRACKET        reduce using rule 73 (factor -> STRING_LITERAL .)
    RPAREN          reduce using rule 73 (factor -> STRING_LITERAL .)
    COLON           reduce using rule 73 (factor -> STRING_LITERAL .)
    RBRACE          reduce using rule 73 (factor -> STRING_LITERAL .)


state 67

    (75) factor -> TRUE .

    NULLCOALESCING  reduce using rule 75 (factor -> TRUE .)
    AND             reduce using rule 75 (factor -> TRUE .)
    OR              reduce using rule 75 (factor -> TRUE .)
    EQEQ            reduce using rule 75 (factor -> TRUE .)
    NEQ             reduce using rule 75 (factor -> TRUE .)
    MINSIGN         reduce using rule 75 (factor -> TRUE .)
    MAXSIGN         reduce using rule 75 (factor -> TRUE .)
    MINSIGNEQ       reduce using rule 75 (factor -> TRUE .)
    MAXSIGNEQ       reduce using rule 75 (factor -> TRUE .)
    IS              reduce using rule 75 (factor -> TRUE .)
    PLUSPLUS        reduce using rule 75 (factor -> TRUE .)
    MINUSMINUS      reduce using rule 75 (factor -> TRUE .)
    DOT             reduce using rule 75 (factor -> TRUE .)
    LBRACKET        reduce using rule 75 (factor -> TRUE .)
    LPAREN          reduce using rule 75 (factor -> TRUE .)
    NOT             reduce using rule 75 (factor -> TRUE .)
    PLUS            reduce using rule 75 (factor -> TRUE .)
    MINUS           reduce using rule 75 (factor -> TRUE .)
    TIMES           reduce using rule 75 (factor -> TRUE .)
    DIVIDE          reduce using rule 75 (factor -> TRUE .)
    INTDIV          reduce using rule 75 (factor -> TRUE .)
    MODULE          reduce using rule 75 (factor -> TRUE .)
    EQUALS          reduce using rule 75 (factor -> TRUE .)
    PLUSEQ          reduce using rule 75 (factor -> TRUE .)
    MINUSEQ         reduce using rule 75 (factor -> TRUE .)
    TIMESEQ         reduce using rule 75 (factor -> TRUE .)
    DIVEQ           reduce using rule 75 (factor -> TRUE .)
    NULLASSIGN      reduce using rule 75 (factor -> TRUE .)
    QMARK           reduce using rule 75 (factor -> TRUE .)
    SEMICOLON       reduce using rule 75 (factor -> TRUE .)
    COMMA           reduce using rule 75 (factor -> TRUE .)
    RBRACKET        reduce using rule 75 (factor -> TRUE .)
    RPAREN          reduce using rule 75 (factor -> TRUE .)
    COLON           reduce using rule 75 (factor -> TRUE .)
    RBRACE          reduce using rule 75 (factor -> TRUE .)


state 68

    (76) factor -> FALSE .

    NULLCOALESCING  reduce using rule 76 (factor -> FALSE .)
    AND             reduce using rule 76 (factor -> FALSE .)
    OR              reduce using rule 76 (factor -> FALSE .)
    EQEQ            reduce using rule 76 (factor -> FALSE .)
    NEQ             reduce using rule 76 (factor -> FALSE .)
    MINSIGN         reduce using rule 76 (factor -> FALSE .)
    MAXSIGN         reduce using rule 76 (factor -> FALSE .)
    MINSIGNEQ       reduce using rule 76 (factor -> FALSE .)
    MAXSIGNEQ       reduce using rule 76 (factor -> FALSE .)
    IS              reduce using rule 76 (factor -> FALSE .)
    PLUSPLUS        reduce using rule 76 (factor -> FALSE .)
    MINUSMINUS      reduce using rule 76 (factor -> FALSE .)
    DOT             reduce using rule 76 (factor -> FALSE .)
    LBRACKET        reduce using rule 76 (factor -> FALSE .)
    LPAREN          reduce using rule 76 (factor -> FALSE .)
    NOT             reduce using rule 76 (factor -> FALSE .)
    PLUS            reduce using rule 76 (factor -> FALSE .)
    MINUS           reduce using rule 76 (factor -> FALSE .)
    TIMES           reduce using rule 76 (factor -> FALSE .)
    DIVIDE          reduce using rule 76 (factor -> FALSE .)
    INTDIV          reduce using rule 76 (factor -> FALSE .)
    MODULE          reduce using rule 76 (factor -> FALSE .)
    EQUALS          reduce using rule 76 (factor -> FALSE .)
    PLUSEQ          reduce using rule 76 (factor -> FALSE .)
    MINUSEQ         reduce using rule 76 (factor -> FALSE .)
    TIMESEQ         reduce using rule 76 (factor -> FALSE .)
    DIVEQ           reduce using rule 76 (factor -> FALSE .)
    NULLASSIGN      reduce using rule 76 (factor -> FALSE .)
    QMARK           reduce using rule 76 (factor -> FALSE .)
    SEMICOLON       reduce using rule 76 (factor -> FALSE .)
    COMMA           reduce using rule 76 (factor -> FALSE .)
    RBRACKET        reduce using rule 76 (factor -> FALSE .)
    RPAREN          reduce using rule 76 (factor -> FALSE .)
    COLON           reduce using rule 76 (factor -> FALSE .)
    RBRACE          reduce using rule 76 (factor -> FALSE .)


state 69

    (10) const_declaration -> CONST declaration_type ID EQUALS . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 117
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 70

    (21) constructor_declaration -> ID LPAREN . constructor_params RPAREN SEMICOLON
    (22) constructor_params -> . constructor_param_list
    (23) constructor_params -> . empty
    (24) constructor_param_list -> . constructor_param_list COMMA constructor_param
    (25) constructor_param_list -> . constructor_param
    (146) empty -> .
    (26) constructor_param -> . THIS DOT ID

    RPAREN          reduce using rule 146 (empty -> .)
    THIS            shift and go to state 122

    constructor_params             shift and go to state 118
    constructor_param_list         shift and go to state 119
    empty                          shift and go to state 120
    constructor_param              shift and go to state 121

state 71

    (11) class -> CLASS ID LBRACE class_body RBRACE .

    CLASS           reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    IMPORT          reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    CONST           reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    ID              reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    INT             reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    DOUBLE          reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    STRING          reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    BOOL            reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    VOID            reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    VAR             reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    DYNAMIC         reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)
    $end            reduce using rule 11 (class -> CLASS ID LBRACE class_body RBRACE .)


state 72

    (12) class_body -> class_member class_body .

    RBRACE          reduce using rule 12 (class_body -> class_member class_body .)


state 73

    (20) class_property -> declaration_type ID . SEMICOLON
    (18) function_name -> ID .

    SEMICOLON       shift and go to state 123
    LPAREN          reduce using rule 18 (function_name -> ID .)


state 74

    (41) type_list -> type_list COMMA declaration_type .

    MAXSIGN         reduce using rule 41 (type_list -> type_list COMMA declaration_type .)
    COMMA           reduce using rule 41 (type_list -> type_list COMMA declaration_type .)


state 75

    (114) parameters -> declaration_type ID .

    RPAREN          reduce using rule 114 (parameters -> declaration_type ID .)
    COMMA           reduce using rule 114 (parameters -> declaration_type ID .)


state 76

    (17) function_declaration -> declaration_type function_name LPAREN parameters RPAREN . LBRACE body RBRACE

    LBRACE          shift and go to state 124


state 77

    (113) parameters -> parameters COMMA . declaration_type ID
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    ID              shift and go to state 11
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    declaration_type               shift and go to state 125
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 78

    (105) expression -> expression EQUALS . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 126
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 79

    (40) expression -> expression NULLCOALESCING . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 127
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 80

    (43) expression -> expression AND . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 128
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 81

    (44) expression -> expression OR . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 129
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 82

    (45) expression -> expression EQEQ . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 130
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 83

    (46) expression -> expression NEQ . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 131
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 84

    (47) expression -> expression MINSIGN . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 132
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 85

    (48) expression -> expression MAXSIGN . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 133
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 86

    (49) expression -> expression MINSIGNEQ . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 134
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 87

    (50) expression -> expression MAXSIGNEQ . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 135
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 88

    (51) expression -> expression IS . declaration_type
    (52) expression -> expression IS . NOT declaration_type
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    NOT             shift and go to state 137
    ID              shift and go to state 11
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    declaration_type               shift and go to state 136
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 89

    (62) expression -> expression NOT .

    NULLCOALESCING  reduce using rule 62 (expression -> expression NOT .)
    AND             reduce using rule 62 (expression -> expression NOT .)
    OR              reduce using rule 62 (expression -> expression NOT .)
    EQEQ            reduce using rule 62 (expression -> expression NOT .)
    NEQ             reduce using rule 62 (expression -> expression NOT .)
    MINSIGN         reduce using rule 62 (expression -> expression NOT .)
    MAXSIGN         reduce using rule 62 (expression -> expression NOT .)
    MINSIGNEQ       reduce using rule 62 (expression -> expression NOT .)
    MAXSIGNEQ       reduce using rule 62 (expression -> expression NOT .)
    IS              reduce using rule 62 (expression -> expression NOT .)
    PLUSPLUS        reduce using rule 62 (expression -> expression NOT .)
    MINUSMINUS      reduce using rule 62 (expression -> expression NOT .)
    DOT             reduce using rule 62 (expression -> expression NOT .)
    LBRACKET        reduce using rule 62 (expression -> expression NOT .)
    LPAREN          reduce using rule 62 (expression -> expression NOT .)
    NOT             reduce using rule 62 (expression -> expression NOT .)
    PLUS            reduce using rule 62 (expression -> expression NOT .)
    MINUS           reduce using rule 62 (expression -> expression NOT .)
    TIMES           reduce using rule 62 (expression -> expression NOT .)
    DIVIDE          reduce using rule 62 (expression -> expression NOT .)
    INTDIV          reduce using rule 62 (expression -> expression NOT .)
    MODULE          reduce using rule 62 (expression -> expression NOT .)
    EQUALS          reduce using rule 62 (expression -> expression NOT .)
    PLUSEQ          reduce using rule 62 (expression -> expression NOT .)
    MINUSEQ         reduce using rule 62 (expression -> expression NOT .)
    TIMESEQ         reduce using rule 62 (expression -> expression NOT .)
    DIVEQ           reduce using rule 62 (expression -> expression NOT .)
    NULLASSIGN      reduce using rule 62 (expression -> expression NOT .)
    QMARK           reduce using rule 62 (expression -> expression NOT .)
    SEMICOLON       reduce using rule 62 (expression -> expression NOT .)
    COMMA           reduce using rule 62 (expression -> expression NOT .)
    RBRACKET        reduce using rule 62 (expression -> expression NOT .)
    RPAREN          reduce using rule 62 (expression -> expression NOT .)
    COLON           reduce using rule 62 (expression -> expression NOT .)
    RBRACE          reduce using rule 62 (expression -> expression NOT .)


state 90

    (55) expression -> expression PLUSPLUS .

    NULLCOALESCING  reduce using rule 55 (expression -> expression PLUSPLUS .)
    AND             reduce using rule 55 (expression -> expression PLUSPLUS .)
    OR              reduce using rule 55 (expression -> expression PLUSPLUS .)
    EQEQ            reduce using rule 55 (expression -> expression PLUSPLUS .)
    NEQ             reduce using rule 55 (expression -> expression PLUSPLUS .)
    MINSIGN         reduce using rule 55 (expression -> expression PLUSPLUS .)
    MAXSIGN         reduce using rule 55 (expression -> expression PLUSPLUS .)
    MINSIGNEQ       reduce using rule 55 (expression -> expression PLUSPLUS .)
    MAXSIGNEQ       reduce using rule 55 (expression -> expression PLUSPLUS .)
    IS              reduce using rule 55 (expression -> expression PLUSPLUS .)
    PLUSPLUS        reduce using rule 55 (expression -> expression PLUSPLUS .)
    MINUSMINUS      reduce using rule 55 (expression -> expression PLUSPLUS .)
    DOT             reduce using rule 55 (expression -> expression PLUSPLUS .)
    LBRACKET        reduce using rule 55 (expression -> expression PLUSPLUS .)
    LPAREN          reduce using rule 55 (expression -> expression PLUSPLUS .)
    NOT             reduce using rule 55 (expression -> expression PLUSPLUS .)
    PLUS            reduce using rule 55 (expression -> expression PLUSPLUS .)
    MINUS           reduce using rule 55 (expression -> expression PLUSPLUS .)
    TIMES           reduce using rule 55 (expression -> expression PLUSPLUS .)
    DIVIDE          reduce using rule 55 (expression -> expression PLUSPLUS .)
    INTDIV          reduce using rule 55 (expression -> expression PLUSPLUS .)
    MODULE          reduce using rule 55 (expression -> expression PLUSPLUS .)
    EQUALS          reduce using rule 55 (expression -> expression PLUSPLUS .)
    PLUSEQ          reduce using rule 55 (expression -> expression PLUSPLUS .)
    MINUSEQ         reduce using rule 55 (expression -> expression PLUSPLUS .)
    TIMESEQ         reduce using rule 55 (expression -> expression PLUSPLUS .)
    DIVEQ           reduce using rule 55 (expression -> expression PLUSPLUS .)
    NULLASSIGN      reduce using rule 55 (expression -> expression PLUSPLUS .)
    QMARK           reduce using rule 55 (expression -> expression PLUSPLUS .)
    SEMICOLON       reduce using rule 55 (expression -> expression PLUSPLUS .)
    COMMA           reduce using rule 55 (expression -> expression PLUSPLUS .)
    RBRACKET        reduce using rule 55 (expression -> expression PLUSPLUS .)
    RPAREN          reduce using rule 55 (expression -> expression PLUSPLUS .)
    COLON           reduce using rule 55 (expression -> expression PLUSPLUS .)
    RBRACE          reduce using rule 55 (expression -> expression PLUSPLUS .)


state 91

    (56) expression -> expression MINUSMINUS .

    NULLCOALESCING  reduce using rule 56 (expression -> expression MINUSMINUS .)
    AND             reduce using rule 56 (expression -> expression MINUSMINUS .)
    OR              reduce using rule 56 (expression -> expression MINUSMINUS .)
    EQEQ            reduce using rule 56 (expression -> expression MINUSMINUS .)
    NEQ             reduce using rule 56 (expression -> expression MINUSMINUS .)
    MINSIGN         reduce using rule 56 (expression -> expression MINUSMINUS .)
    MAXSIGN         reduce using rule 56 (expression -> expression MINUSMINUS .)
    MINSIGNEQ       reduce using rule 56 (expression -> expression MINUSMINUS .)
    MAXSIGNEQ       reduce using rule 56 (expression -> expression MINUSMINUS .)
    IS              reduce using rule 56 (expression -> expression MINUSMINUS .)
    PLUSPLUS        reduce using rule 56 (expression -> expression MINUSMINUS .)
    MINUSMINUS      reduce using rule 56 (expression -> expression MINUSMINUS .)
    DOT             reduce using rule 56 (expression -> expression MINUSMINUS .)
    LBRACKET        reduce using rule 56 (expression -> expression MINUSMINUS .)
    LPAREN          reduce using rule 56 (expression -> expression MINUSMINUS .)
    NOT             reduce using rule 56 (expression -> expression MINUSMINUS .)
    PLUS            reduce using rule 56 (expression -> expression MINUSMINUS .)
    MINUS           reduce using rule 56 (expression -> expression MINUSMINUS .)
    TIMES           reduce using rule 56 (expression -> expression MINUSMINUS .)
    DIVIDE          reduce using rule 56 (expression -> expression MINUSMINUS .)
    INTDIV          reduce using rule 56 (expression -> expression MINUSMINUS .)
    MODULE          reduce using rule 56 (expression -> expression MINUSMINUS .)
    EQUALS          reduce using rule 56 (expression -> expression MINUSMINUS .)
    PLUSEQ          reduce using rule 56 (expression -> expression MINUSMINUS .)
    MINUSEQ         reduce using rule 56 (expression -> expression MINUSMINUS .)
    TIMESEQ         reduce using rule 56 (expression -> expression MINUSMINUS .)
    DIVEQ           reduce using rule 56 (expression -> expression MINUSMINUS .)
    NULLASSIGN      reduce using rule 56 (expression -> expression MINUSMINUS .)
    QMARK           reduce using rule 56 (expression -> expression MINUSMINUS .)
    SEMICOLON       reduce using rule 56 (expression -> expression MINUSMINUS .)
    COMMA           reduce using rule 56 (expression -> expression MINUSMINUS .)
    RBRACKET        reduce using rule 56 (expression -> expression MINUSMINUS .)
    RPAREN          reduce using rule 56 (expression -> expression MINUSMINUS .)
    COLON           reduce using rule 56 (expression -> expression MINUSMINUS .)
    RBRACE          reduce using rule 56 (expression -> expression MINUSMINUS .)


state 92

    (57) expression -> expression DOT . ID

    ID              shift and go to state 138


state 93

    (58) expression -> expression LBRACKET . expression RBRACKET
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 139
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 94

    (59) expression -> expression LPAREN . arguments RPAREN
    (60) arguments -> . expression_list
    (61) arguments -> . empty
    (141) expression_list -> . expression COMMA expression_list
    (142) expression_list -> . expression
    (143) expression_list -> . empty
    (146) empty -> .
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    RPAREN          reduce using rule 146 (empty -> .)
    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 110
    arguments                      shift and go to state 140
    expression_list                shift and go to state 141
    empty                          shift and go to state 142
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 95

    (63) expression -> expression PLUS . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 143
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 96

    (64) expression -> expression MINUS . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 144
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 97

    (65) expression -> expression TIMES . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 145
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 98

    (66) expression -> expression DIVIDE . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 146
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 99

    (67) expression -> expression INTDIV . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 147
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 100

    (68) expression -> expression MODULE . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 148
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 101

    (106) expression -> expression PLUSEQ . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 149
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 102

    (107) expression -> expression MINUSEQ . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 150
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 103

    (108) expression -> expression TIMESEQ . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 151
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 104

    (109) expression -> expression DIVEQ . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 152
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 105

    (110) expression -> expression NULLASSIGN . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 153
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 106

    (111) expression -> expression QMARK . expression COLON expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 154
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 107

    (53) expression -> NOT expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 53 (expression -> NOT expression .)
    AND             reduce using rule 53 (expression -> NOT expression .)
    OR              reduce using rule 53 (expression -> NOT expression .)
    EQEQ            reduce using rule 53 (expression -> NOT expression .)
    NEQ             reduce using rule 53 (expression -> NOT expression .)
    MINSIGN         reduce using rule 53 (expression -> NOT expression .)
    MAXSIGN         reduce using rule 53 (expression -> NOT expression .)
    MINSIGNEQ       reduce using rule 53 (expression -> NOT expression .)
    MAXSIGNEQ       reduce using rule 53 (expression -> NOT expression .)
    IS              reduce using rule 53 (expression -> NOT expression .)
    PLUS            reduce using rule 53 (expression -> NOT expression .)
    MINUS           reduce using rule 53 (expression -> NOT expression .)
    TIMES           reduce using rule 53 (expression -> NOT expression .)
    DIVIDE          reduce using rule 53 (expression -> NOT expression .)
    INTDIV          reduce using rule 53 (expression -> NOT expression .)
    MODULE          reduce using rule 53 (expression -> NOT expression .)
    EQUALS          reduce using rule 53 (expression -> NOT expression .)
    PLUSEQ          reduce using rule 53 (expression -> NOT expression .)
    MINUSEQ         reduce using rule 53 (expression -> NOT expression .)
    TIMESEQ         reduce using rule 53 (expression -> NOT expression .)
    DIVEQ           reduce using rule 53 (expression -> NOT expression .)
    NULLASSIGN      reduce using rule 53 (expression -> NOT expression .)
    QMARK           reduce using rule 53 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 53 (expression -> NOT expression .)
    COMMA           reduce using rule 53 (expression -> NOT expression .)
    RBRACKET        reduce using rule 53 (expression -> NOT expression .)
    RPAREN          reduce using rule 53 (expression -> NOT expression .)
    COLON           reduce using rule 53 (expression -> NOT expression .)
    RBRACE          reduce using rule 53 (expression -> NOT expression .)
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89

  ! PLUSPLUS        [ reduce using rule 53 (expression -> NOT expression .) ]
  ! MINUSMINUS      [ reduce using rule 53 (expression -> NOT expression .) ]
  ! DOT             [ reduce using rule 53 (expression -> NOT expression .) ]
  ! LBRACKET        [ reduce using rule 53 (expression -> NOT expression .) ]
  ! LPAREN          [ reduce using rule 53 (expression -> NOT expression .) ]
  ! NOT             [ reduce using rule 53 (expression -> NOT expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! IS              [ shift and go to state 88 ]
  ! PLUS            [ shift and go to state 95 ]
  ! MINUS           [ shift and go to state 96 ]
  ! TIMES           [ shift and go to state 97 ]
  ! DIVIDE          [ shift and go to state 98 ]
  ! INTDIV          [ shift and go to state 99 ]
  ! MODULE          [ shift and go to state 100 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 108

    (54) expression -> MINUS expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 54 (expression -> MINUS expression .)
    AND             reduce using rule 54 (expression -> MINUS expression .)
    OR              reduce using rule 54 (expression -> MINUS expression .)
    EQEQ            reduce using rule 54 (expression -> MINUS expression .)
    NEQ             reduce using rule 54 (expression -> MINUS expression .)
    MINSIGN         reduce using rule 54 (expression -> MINUS expression .)
    MAXSIGN         reduce using rule 54 (expression -> MINUS expression .)
    MINSIGNEQ       reduce using rule 54 (expression -> MINUS expression .)
    MAXSIGNEQ       reduce using rule 54 (expression -> MINUS expression .)
    IS              reduce using rule 54 (expression -> MINUS expression .)
    PLUS            reduce using rule 54 (expression -> MINUS expression .)
    MINUS           reduce using rule 54 (expression -> MINUS expression .)
    TIMES           reduce using rule 54 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 54 (expression -> MINUS expression .)
    INTDIV          reduce using rule 54 (expression -> MINUS expression .)
    MODULE          reduce using rule 54 (expression -> MINUS expression .)
    EQUALS          reduce using rule 54 (expression -> MINUS expression .)
    PLUSEQ          reduce using rule 54 (expression -> MINUS expression .)
    MINUSEQ         reduce using rule 54 (expression -> MINUS expression .)
    TIMESEQ         reduce using rule 54 (expression -> MINUS expression .)
    DIVEQ           reduce using rule 54 (expression -> MINUS expression .)
    NULLASSIGN      reduce using rule 54 (expression -> MINUS expression .)
    QMARK           reduce using rule 54 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 54 (expression -> MINUS expression .)
    COMMA           reduce using rule 54 (expression -> MINUS expression .)
    RBRACKET        reduce using rule 54 (expression -> MINUS expression .)
    RPAREN          reduce using rule 54 (expression -> MINUS expression .)
    COLON           reduce using rule 54 (expression -> MINUS expression .)
    RBRACE          reduce using rule 54 (expression -> MINUS expression .)
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89

  ! PLUSPLUS        [ reduce using rule 54 (expression -> MINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 54 (expression -> MINUS expression .) ]
  ! DOT             [ reduce using rule 54 (expression -> MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 54 (expression -> MINUS expression .) ]
  ! LPAREN          [ reduce using rule 54 (expression -> MINUS expression .) ]
  ! NOT             [ reduce using rule 54 (expression -> MINUS expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! IS              [ shift and go to state 88 ]
  ! PLUS            [ shift and go to state 95 ]
  ! MINUS           [ shift and go to state 96 ]
  ! TIMES           [ shift and go to state 97 ]
  ! DIVIDE          [ shift and go to state 98 ]
  ! INTDIV          [ shift and go to state 99 ]
  ! MODULE          [ shift and go to state 100 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 109

    (128) expression -> LBRACKET expression_list . RBRACKET

    RBRACKET        shift and go to state 155


state 110

    (141) expression_list -> expression . COMMA expression_list
    (142) expression_list -> expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    COMMA           shift and go to state 156
    RBRACKET        reduce using rule 142 (expression_list -> expression .)
    RPAREN          reduce using rule 142 (expression_list -> expression .)
    RBRACE          reduce using rule 142 (expression_list -> expression .)
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 111

    (143) expression_list -> empty .

    RBRACKET        reduce using rule 143 (expression_list -> empty .)
    RPAREN          reduce using rule 143 (expression_list -> empty .)
    RBRACE          reduce using rule 143 (expression_list -> empty .)


state 112

    (77) factor -> LPAREN expression . RPAREN
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 157
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 113

    (129) expression -> LBRACE set_or_map_contents . RBRACE

    RBRACE          shift and go to state 158


state 114

    (130) set_or_map_contents -> expression . set_or_map_tail
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression
    (132) set_or_map_tail -> . COLON expression map_tail
    (133) set_or_map_tail -> . set_tail
    (139) set_tail -> . COMMA expression_list
    (140) set_tail -> . empty
    (146) empty -> .

    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106
    COLON           shift and go to state 160
    COMMA           shift and go to state 162
    RBRACE          reduce using rule 146 (empty -> .)

    set_or_map_tail                shift and go to state 159
    set_tail                       shift and go to state 161
    empty                          shift and go to state 163

state 115

    (131) set_or_map_contents -> empty .

    RBRACE          reduce using rule 131 (set_or_map_contents -> empty .)


state 116

    (71) factor -> primitive_type DOT . ID LPAREN arguments RPAREN

    ID              shift and go to state 164


state 117

    (10) const_declaration -> CONST declaration_type ID EQUALS expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 10 (const_declaration -> CONST declaration_type ID EQUALS expression .)
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 118

    (21) constructor_declaration -> ID LPAREN constructor_params . RPAREN SEMICOLON

    RPAREN          shift and go to state 165


state 119

    (22) constructor_params -> constructor_param_list .
    (24) constructor_param_list -> constructor_param_list . COMMA constructor_param

    RPAREN          reduce using rule 22 (constructor_params -> constructor_param_list .)
    COMMA           shift and go to state 166


state 120

    (23) constructor_params -> empty .

    RPAREN          reduce using rule 23 (constructor_params -> empty .)


state 121

    (25) constructor_param_list -> constructor_param .

    COMMA           reduce using rule 25 (constructor_param_list -> constructor_param .)
    RPAREN          reduce using rule 25 (constructor_param_list -> constructor_param .)


state 122

    (26) constructor_param -> THIS . DOT ID

    DOT             shift and go to state 167


state 123

    (20) class_property -> declaration_type ID SEMICOLON .

    ID              reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    INT             reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    DOUBLE          reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    STRING          reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    BOOL            reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    VOID            reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    VAR             reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    DYNAMIC         reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)
    RBRACE          reduce using rule 20 (class_property -> declaration_type ID SEMICOLON .)


state 124

    (17) function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE . body RBRACE
    (118) body -> . instructions
    (78) instructions -> . instruction instructions
    (79) instructions -> . empty
    (80) instruction -> . variable_declaration SEMICOLON
    (81) instruction -> . expression SEMICOLON
    (82) instruction -> . print_statement
    (83) instruction -> . if_else
    (84) instruction -> . while_loop
    (85) instruction -> . for_loop
    (86) instruction -> . return_statement
    (87) instruction -> . block_statement
    (88) instruction -> . throw_statement
    (89) instruction -> . try_statement
    (90) instruction -> . const_declaration SEMICOLON
    (91) instruction -> . break_statement
    (92) instruction -> . continue_statement
    (146) empty -> .
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (112) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (119) if_else -> . IF LPAREN expression RPAREN instruction
    (120) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (121) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (122) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (116) return_statement -> . RETURN expression SEMICOLON
    (117) return_statement -> . RETURN SEMICOLON
    (101) block_statement -> . LBRACE instructions RBRACE
    (102) throw_statement -> . THROW expression SEMICOLON
    (93) try_statement -> . TRY block_statement catch_clauses
    (94) try_statement -> . TRY block_statement catch_clauses finally_clause
    (95) try_statement -> . TRY block_statement finally_clause
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (144) break_statement -> . BREAK SEMICOLON
    (145) continue_statement -> . CONTINUE SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (70) term -> . factor
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN

    RBRACE          reduce using rule 146 (empty -> .)
    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 169
    PRINT           shift and go to state 188
    IF              shift and go to state 189
    WHILE           shift and go to state 190
    FOR             shift and go to state 191
    RETURN          shift and go to state 192
    THROW           shift and go to state 193
    TRY             shift and go to state 194
    CONST           shift and go to state 14
    BREAK           shift and go to state 195
    CONTINUE        shift and go to state 196
    ID              shift and go to state 187
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60

    declaration_type               shift and go to state 168
    body                           shift and go to state 170
    instructions                   shift and go to state 171
    instruction                    shift and go to state 172
    empty                          shift and go to state 173
    variable_declaration           shift and go to state 174
    expression                     shift and go to state 175
    print_statement                shift and go to state 176
    if_else                        shift and go to state 177
    while_loop                     shift and go to state 178
    for_loop                       shift and go to state 179
    return_statement               shift and go to state 180
    block_statement                shift and go to state 181
    throw_statement                shift and go to state 182
    try_statement                  shift and go to state 183
    const_declaration              shift and go to state 184
    break_statement                shift and go to state 185
    continue_statement             shift and go to state 186
    term                           shift and go to state 61
    primitive_type                 shift and go to state 197
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17
    factor                         shift and go to state 63

state 125

    (113) parameters -> parameters COMMA declaration_type . ID

    ID              shift and go to state 198


state 126

    (105) expression -> expression EQUALS expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 105 (expression -> expression EQUALS expression .)
    QMARK           reduce using rule 105 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 105 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 105 (expression -> expression EQUALS expression .)
    RBRACKET        reduce using rule 105 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 105 (expression -> expression EQUALS expression .)
    COLON           reduce using rule 105 (expression -> expression EQUALS expression .)
    RBRACE          reduce using rule 105 (expression -> expression EQUALS expression .)
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105

  ! AND             [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! OR              [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! EQEQ            [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! NEQ             [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! MINSIGN         [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! MAXSIGN         [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! MINSIGNEQ       [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! IS              [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! PLUSPLUS        [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! MINUSMINUS      [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! DOT             [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! LBRACKET        [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! LPAREN          [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! NOT             [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! INTDIV          [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! MODULE          [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! PLUSEQ          [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! MINUSEQ         [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! TIMESEQ         [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! DIVEQ           [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! NULLASSIGN      [ reduce using rule 105 (expression -> expression EQUALS expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! QMARK           [ shift and go to state 106 ]


state 127

    (40) expression -> expression NULLCOALESCING expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

  ! shift/reduce conflict for NULLCOALESCING resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for MINSIGN resolved as shift
  ! shift/reduce conflict for MAXSIGN resolved as shift
  ! shift/reduce conflict for MINSIGNEQ resolved as shift
  ! shift/reduce conflict for MAXSIGNEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INTDIV resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for PLUSEQ resolved as shift
  ! shift/reduce conflict for MINUSEQ resolved as shift
  ! shift/reduce conflict for TIMESEQ resolved as shift
  ! shift/reduce conflict for DIVEQ resolved as shift
  ! shift/reduce conflict for NULLASSIGN resolved as shift
  ! shift/reduce conflict for QMARK resolved as shift
    SEMICOLON       reduce using rule 40 (expression -> expression NULLCOALESCING expression .)
    COMMA           reduce using rule 40 (expression -> expression NULLCOALESCING expression .)
    RBRACKET        reduce using rule 40 (expression -> expression NULLCOALESCING expression .)
    RPAREN          reduce using rule 40 (expression -> expression NULLCOALESCING expression .)
    COLON           reduce using rule 40 (expression -> expression NULLCOALESCING expression .)
    RBRACE          reduce using rule 40 (expression -> expression NULLCOALESCING expression .)
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106

  ! NULLCOALESCING  [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! AND             [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! OR              [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! EQEQ            [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! NEQ             [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! MINSIGN         [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! MAXSIGN         [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! MINSIGNEQ       [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! IS              [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! PLUSPLUS        [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! MINUSMINUS      [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! DOT             [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! LBRACKET        [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! LPAREN          [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! NOT             [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! INTDIV          [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! MODULE          [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! EQUALS          [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! PLUSEQ          [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! MINUSEQ         [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! TIMESEQ         [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! DIVEQ           [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! NULLASSIGN      [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]
  ! QMARK           [ reduce using rule 40 (expression -> expression NULLCOALESCING expression .) ]


state 128

    (43) expression -> expression AND expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 43 (expression -> expression AND expression .)
    AND             reduce using rule 43 (expression -> expression AND expression .)
    OR              reduce using rule 43 (expression -> expression AND expression .)
    EQUALS          reduce using rule 43 (expression -> expression AND expression .)
    PLUSEQ          reduce using rule 43 (expression -> expression AND expression .)
    MINUSEQ         reduce using rule 43 (expression -> expression AND expression .)
    TIMESEQ         reduce using rule 43 (expression -> expression AND expression .)
    DIVEQ           reduce using rule 43 (expression -> expression AND expression .)
    NULLASSIGN      reduce using rule 43 (expression -> expression AND expression .)
    QMARK           reduce using rule 43 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression AND expression .)
    COMMA           reduce using rule 43 (expression -> expression AND expression .)
    RBRACKET        reduce using rule 43 (expression -> expression AND expression .)
    RPAREN          reduce using rule 43 (expression -> expression AND expression .)
    COLON           reduce using rule 43 (expression -> expression AND expression .)
    RBRACE          reduce using rule 43 (expression -> expression AND expression .)
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! EQEQ            [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! NEQ             [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MINSIGN         [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MAXSIGN         [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MINSIGNEQ       [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! IS              [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! PLUSPLUS        [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MINUSMINUS      [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! LBRACKET        [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! LPAREN          [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! NOT             [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! INTDIV          [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! MODULE          [ reduce using rule 43 (expression -> expression AND expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 129

    (44) expression -> expression OR expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 44 (expression -> expression OR expression .)
    OR              reduce using rule 44 (expression -> expression OR expression .)
    EQUALS          reduce using rule 44 (expression -> expression OR expression .)
    PLUSEQ          reduce using rule 44 (expression -> expression OR expression .)
    MINUSEQ         reduce using rule 44 (expression -> expression OR expression .)
    TIMESEQ         reduce using rule 44 (expression -> expression OR expression .)
    DIVEQ           reduce using rule 44 (expression -> expression OR expression .)
    NULLASSIGN      reduce using rule 44 (expression -> expression OR expression .)
    QMARK           reduce using rule 44 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression OR expression .)
    COMMA           reduce using rule 44 (expression -> expression OR expression .)
    RBRACKET        reduce using rule 44 (expression -> expression OR expression .)
    RPAREN          reduce using rule 44 (expression -> expression OR expression .)
    COLON           reduce using rule 44 (expression -> expression OR expression .)
    RBRACE          reduce using rule 44 (expression -> expression OR expression .)
    AND             shift and go to state 80
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! AND             [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! EQEQ            [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! NEQ             [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MINSIGN         [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MAXSIGN         [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MINSIGNEQ       [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! IS              [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! PLUSPLUS        [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MINUSMINUS      [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! LBRACKET        [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! LPAREN          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! NOT             [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! INTDIV          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! MODULE          [ reduce using rule 44 (expression -> expression OR expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! OR              [ shift and go to state 81 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 130

    (45) expression -> expression EQEQ expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 45 (expression -> expression EQEQ expression .)
    AND             reduce using rule 45 (expression -> expression EQEQ expression .)
    OR              reduce using rule 45 (expression -> expression EQEQ expression .)
    EQEQ            reduce using rule 45 (expression -> expression EQEQ expression .)
    NEQ             reduce using rule 45 (expression -> expression EQEQ expression .)
    EQUALS          reduce using rule 45 (expression -> expression EQEQ expression .)
    PLUSEQ          reduce using rule 45 (expression -> expression EQEQ expression .)
    MINUSEQ         reduce using rule 45 (expression -> expression EQEQ expression .)
    TIMESEQ         reduce using rule 45 (expression -> expression EQEQ expression .)
    DIVEQ           reduce using rule 45 (expression -> expression EQEQ expression .)
    NULLASSIGN      reduce using rule 45 (expression -> expression EQEQ expression .)
    QMARK           reduce using rule 45 (expression -> expression EQEQ expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression EQEQ expression .)
    COMMA           reduce using rule 45 (expression -> expression EQEQ expression .)
    RBRACKET        reduce using rule 45 (expression -> expression EQEQ expression .)
    RPAREN          reduce using rule 45 (expression -> expression EQEQ expression .)
    COLON           reduce using rule 45 (expression -> expression EQEQ expression .)
    RBRACE          reduce using rule 45 (expression -> expression EQEQ expression .)
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! MINSIGN         [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! IS              [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! DOT             [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! LBRACKET        [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! LPAREN          [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! NOT             [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! PLUS            [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! MINUS           [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! TIMES           [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! DIVIDE          [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! INTDIV          [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! MODULE          [ reduce using rule 45 (expression -> expression EQEQ expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 131

    (46) expression -> expression NEQ expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 46 (expression -> expression NEQ expression .)
    AND             reduce using rule 46 (expression -> expression NEQ expression .)
    OR              reduce using rule 46 (expression -> expression NEQ expression .)
    EQEQ            reduce using rule 46 (expression -> expression NEQ expression .)
    NEQ             reduce using rule 46 (expression -> expression NEQ expression .)
    EQUALS          reduce using rule 46 (expression -> expression NEQ expression .)
    PLUSEQ          reduce using rule 46 (expression -> expression NEQ expression .)
    MINUSEQ         reduce using rule 46 (expression -> expression NEQ expression .)
    TIMESEQ         reduce using rule 46 (expression -> expression NEQ expression .)
    DIVEQ           reduce using rule 46 (expression -> expression NEQ expression .)
    NULLASSIGN      reduce using rule 46 (expression -> expression NEQ expression .)
    QMARK           reduce using rule 46 (expression -> expression NEQ expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression NEQ expression .)
    COMMA           reduce using rule 46 (expression -> expression NEQ expression .)
    RBRACKET        reduce using rule 46 (expression -> expression NEQ expression .)
    RPAREN          reduce using rule 46 (expression -> expression NEQ expression .)
    COLON           reduce using rule 46 (expression -> expression NEQ expression .)
    RBRACE          reduce using rule 46 (expression -> expression NEQ expression .)
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! MINSIGN         [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! IS              [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! DOT             [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! LBRACKET        [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! LPAREN          [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! NOT             [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! PLUS            [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! MINUS           [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! TIMES           [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! DIVIDE          [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! INTDIV          [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! MODULE          [ reduce using rule 46 (expression -> expression NEQ expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 132

    (47) expression -> expression MINSIGN expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 47 (expression -> expression MINSIGN expression .)
    AND             reduce using rule 47 (expression -> expression MINSIGN expression .)
    OR              reduce using rule 47 (expression -> expression MINSIGN expression .)
    EQEQ            reduce using rule 47 (expression -> expression MINSIGN expression .)
    NEQ             reduce using rule 47 (expression -> expression MINSIGN expression .)
    MINSIGN         reduce using rule 47 (expression -> expression MINSIGN expression .)
    MAXSIGN         reduce using rule 47 (expression -> expression MINSIGN expression .)
    MINSIGNEQ       reduce using rule 47 (expression -> expression MINSIGN expression .)
    MAXSIGNEQ       reduce using rule 47 (expression -> expression MINSIGN expression .)
    EQUALS          reduce using rule 47 (expression -> expression MINSIGN expression .)
    PLUSEQ          reduce using rule 47 (expression -> expression MINSIGN expression .)
    MINUSEQ         reduce using rule 47 (expression -> expression MINSIGN expression .)
    TIMESEQ         reduce using rule 47 (expression -> expression MINSIGN expression .)
    DIVEQ           reduce using rule 47 (expression -> expression MINSIGN expression .)
    NULLASSIGN      reduce using rule 47 (expression -> expression MINSIGN expression .)
    QMARK           reduce using rule 47 (expression -> expression MINSIGN expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression MINSIGN expression .)
    COMMA           reduce using rule 47 (expression -> expression MINSIGN expression .)
    RBRACKET        reduce using rule 47 (expression -> expression MINSIGN expression .)
    RPAREN          reduce using rule 47 (expression -> expression MINSIGN expression .)
    COLON           reduce using rule 47 (expression -> expression MINSIGN expression .)
    RBRACE          reduce using rule 47 (expression -> expression MINSIGN expression .)
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! IS              [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! DOT             [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! LPAREN          [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! NOT             [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! PLUS            [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! MINUS           [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! TIMES           [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! INTDIV          [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! MODULE          [ reduce using rule 47 (expression -> expression MINSIGN expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 133

    (48) expression -> expression MAXSIGN expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 48 (expression -> expression MAXSIGN expression .)
    AND             reduce using rule 48 (expression -> expression MAXSIGN expression .)
    OR              reduce using rule 48 (expression -> expression MAXSIGN expression .)
    EQEQ            reduce using rule 48 (expression -> expression MAXSIGN expression .)
    NEQ             reduce using rule 48 (expression -> expression MAXSIGN expression .)
    MINSIGN         reduce using rule 48 (expression -> expression MAXSIGN expression .)
    MAXSIGN         reduce using rule 48 (expression -> expression MAXSIGN expression .)
    MINSIGNEQ       reduce using rule 48 (expression -> expression MAXSIGN expression .)
    MAXSIGNEQ       reduce using rule 48 (expression -> expression MAXSIGN expression .)
    EQUALS          reduce using rule 48 (expression -> expression MAXSIGN expression .)
    PLUSEQ          reduce using rule 48 (expression -> expression MAXSIGN expression .)
    MINUSEQ         reduce using rule 48 (expression -> expression MAXSIGN expression .)
    TIMESEQ         reduce using rule 48 (expression -> expression MAXSIGN expression .)
    DIVEQ           reduce using rule 48 (expression -> expression MAXSIGN expression .)
    NULLASSIGN      reduce using rule 48 (expression -> expression MAXSIGN expression .)
    QMARK           reduce using rule 48 (expression -> expression MAXSIGN expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression MAXSIGN expression .)
    COMMA           reduce using rule 48 (expression -> expression MAXSIGN expression .)
    RBRACKET        reduce using rule 48 (expression -> expression MAXSIGN expression .)
    RPAREN          reduce using rule 48 (expression -> expression MAXSIGN expression .)
    COLON           reduce using rule 48 (expression -> expression MAXSIGN expression .)
    RBRACE          reduce using rule 48 (expression -> expression MAXSIGN expression .)
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! IS              [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! DOT             [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! LPAREN          [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! NOT             [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! PLUS            [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! MINUS           [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! TIMES           [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! INTDIV          [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! MODULE          [ reduce using rule 48 (expression -> expression MAXSIGN expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 134

    (49) expression -> expression MINSIGNEQ expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    AND             reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    OR              reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    EQEQ            reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    NEQ             reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    MINSIGN         reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    MAXSIGN         reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    MINSIGNEQ       reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    MAXSIGNEQ       reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    EQUALS          reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    PLUSEQ          reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    MINUSEQ         reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    TIMESEQ         reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    DIVEQ           reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    NULLASSIGN      reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    QMARK           reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    COMMA           reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    RBRACKET        reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    RPAREN          reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    COLON           reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    RBRACE          reduce using rule 49 (expression -> expression MINSIGNEQ expression .)
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! IS              [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! DOT             [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! LBRACKET        [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! LPAREN          [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! NOT             [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! PLUS            [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! MINUS           [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! TIMES           [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! DIVIDE          [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! INTDIV          [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! MODULE          [ reduce using rule 49 (expression -> expression MINSIGNEQ expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 135

    (50) expression -> expression MAXSIGNEQ expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    AND             reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    OR              reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    EQEQ            reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    NEQ             reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    MINSIGN         reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    MAXSIGN         reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    MINSIGNEQ       reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    MAXSIGNEQ       reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    EQUALS          reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    PLUSEQ          reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    MINUSEQ         reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    TIMESEQ         reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    DIVEQ           reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    NULLASSIGN      reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    QMARK           reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    SEMICOLON       reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    COMMA           reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    RBRACKET        reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    RPAREN          reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    COLON           reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    RBRACE          reduce using rule 50 (expression -> expression MAXSIGNEQ expression .)
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! IS              [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! DOT             [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! LBRACKET        [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! LPAREN          [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! NOT             [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! PLUS            [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! MINUS           [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! TIMES           [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! DIVIDE          [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! INTDIV          [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! MODULE          [ reduce using rule 50 (expression -> expression MAXSIGNEQ expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 136

    (51) expression -> expression IS declaration_type .

    NULLCOALESCING  reduce using rule 51 (expression -> expression IS declaration_type .)
    AND             reduce using rule 51 (expression -> expression IS declaration_type .)
    OR              reduce using rule 51 (expression -> expression IS declaration_type .)
    EQEQ            reduce using rule 51 (expression -> expression IS declaration_type .)
    NEQ             reduce using rule 51 (expression -> expression IS declaration_type .)
    MINSIGN         reduce using rule 51 (expression -> expression IS declaration_type .)
    MAXSIGN         reduce using rule 51 (expression -> expression IS declaration_type .)
    MINSIGNEQ       reduce using rule 51 (expression -> expression IS declaration_type .)
    MAXSIGNEQ       reduce using rule 51 (expression -> expression IS declaration_type .)
    IS              reduce using rule 51 (expression -> expression IS declaration_type .)
    PLUSPLUS        reduce using rule 51 (expression -> expression IS declaration_type .)
    MINUSMINUS      reduce using rule 51 (expression -> expression IS declaration_type .)
    DOT             reduce using rule 51 (expression -> expression IS declaration_type .)
    LBRACKET        reduce using rule 51 (expression -> expression IS declaration_type .)
    LPAREN          reduce using rule 51 (expression -> expression IS declaration_type .)
    NOT             reduce using rule 51 (expression -> expression IS declaration_type .)
    PLUS            reduce using rule 51 (expression -> expression IS declaration_type .)
    MINUS           reduce using rule 51 (expression -> expression IS declaration_type .)
    TIMES           reduce using rule 51 (expression -> expression IS declaration_type .)
    DIVIDE          reduce using rule 51 (expression -> expression IS declaration_type .)
    INTDIV          reduce using rule 51 (expression -> expression IS declaration_type .)
    MODULE          reduce using rule 51 (expression -> expression IS declaration_type .)
    EQUALS          reduce using rule 51 (expression -> expression IS declaration_type .)
    PLUSEQ          reduce using rule 51 (expression -> expression IS declaration_type .)
    MINUSEQ         reduce using rule 51 (expression -> expression IS declaration_type .)
    TIMESEQ         reduce using rule 51 (expression -> expression IS declaration_type .)
    DIVEQ           reduce using rule 51 (expression -> expression IS declaration_type .)
    NULLASSIGN      reduce using rule 51 (expression -> expression IS declaration_type .)
    QMARK           reduce using rule 51 (expression -> expression IS declaration_type .)
    SEMICOLON       reduce using rule 51 (expression -> expression IS declaration_type .)
    COMMA           reduce using rule 51 (expression -> expression IS declaration_type .)
    RBRACKET        reduce using rule 51 (expression -> expression IS declaration_type .)
    RPAREN          reduce using rule 51 (expression -> expression IS declaration_type .)
    COLON           reduce using rule 51 (expression -> expression IS declaration_type .)
    RBRACE          reduce using rule 51 (expression -> expression IS declaration_type .)


state 137

    (52) expression -> expression IS NOT . declaration_type
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    ID              shift and go to state 11
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    declaration_type               shift and go to state 199
    primitive_type                 shift and go to state 15
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 138

    (57) expression -> expression DOT ID .

    NULLCOALESCING  reduce using rule 57 (expression -> expression DOT ID .)
    AND             reduce using rule 57 (expression -> expression DOT ID .)
    OR              reduce using rule 57 (expression -> expression DOT ID .)
    EQEQ            reduce using rule 57 (expression -> expression DOT ID .)
    NEQ             reduce using rule 57 (expression -> expression DOT ID .)
    MINSIGN         reduce using rule 57 (expression -> expression DOT ID .)
    MAXSIGN         reduce using rule 57 (expression -> expression DOT ID .)
    MINSIGNEQ       reduce using rule 57 (expression -> expression DOT ID .)
    MAXSIGNEQ       reduce using rule 57 (expression -> expression DOT ID .)
    IS              reduce using rule 57 (expression -> expression DOT ID .)
    PLUSPLUS        reduce using rule 57 (expression -> expression DOT ID .)
    MINUSMINUS      reduce using rule 57 (expression -> expression DOT ID .)
    DOT             reduce using rule 57 (expression -> expression DOT ID .)
    LBRACKET        reduce using rule 57 (expression -> expression DOT ID .)
    LPAREN          reduce using rule 57 (expression -> expression DOT ID .)
    NOT             reduce using rule 57 (expression -> expression DOT ID .)
    PLUS            reduce using rule 57 (expression -> expression DOT ID .)
    MINUS           reduce using rule 57 (expression -> expression DOT ID .)
    TIMES           reduce using rule 57 (expression -> expression DOT ID .)
    DIVIDE          reduce using rule 57 (expression -> expression DOT ID .)
    INTDIV          reduce using rule 57 (expression -> expression DOT ID .)
    MODULE          reduce using rule 57 (expression -> expression DOT ID .)
    EQUALS          reduce using rule 57 (expression -> expression DOT ID .)
    PLUSEQ          reduce using rule 57 (expression -> expression DOT ID .)
    MINUSEQ         reduce using rule 57 (expression -> expression DOT ID .)
    TIMESEQ         reduce using rule 57 (expression -> expression DOT ID .)
    DIVEQ           reduce using rule 57 (expression -> expression DOT ID .)
    NULLASSIGN      reduce using rule 57 (expression -> expression DOT ID .)
    QMARK           reduce using rule 57 (expression -> expression DOT ID .)
    SEMICOLON       reduce using rule 57 (expression -> expression DOT ID .)
    COMMA           reduce using rule 57 (expression -> expression DOT ID .)
    RBRACKET        reduce using rule 57 (expression -> expression DOT ID .)
    RPAREN          reduce using rule 57 (expression -> expression DOT ID .)
    COLON           reduce using rule 57 (expression -> expression DOT ID .)
    RBRACE          reduce using rule 57 (expression -> expression DOT ID .)


state 139

    (58) expression -> expression LBRACKET expression . RBRACKET
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    RBRACKET        shift and go to state 200
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 140

    (59) expression -> expression LPAREN arguments . RPAREN

    RPAREN          shift and go to state 201


state 141

    (60) arguments -> expression_list .

    RPAREN          reduce using rule 60 (arguments -> expression_list .)


state 142

    (61) arguments -> empty .
    (143) expression_list -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 61 (arguments -> empty .)
    RPAREN          reduce using rule 61 (arguments -> empty .)

  ! RPAREN          [ reduce using rule 143 (expression_list -> empty .) ]


state 143

    (63) expression -> expression PLUS expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 63 (expression -> expression PLUS expression .)
    AND             reduce using rule 63 (expression -> expression PLUS expression .)
    OR              reduce using rule 63 (expression -> expression PLUS expression .)
    EQEQ            reduce using rule 63 (expression -> expression PLUS expression .)
    NEQ             reduce using rule 63 (expression -> expression PLUS expression .)
    MINSIGN         reduce using rule 63 (expression -> expression PLUS expression .)
    MAXSIGN         reduce using rule 63 (expression -> expression PLUS expression .)
    MINSIGNEQ       reduce using rule 63 (expression -> expression PLUS expression .)
    MAXSIGNEQ       reduce using rule 63 (expression -> expression PLUS expression .)
    IS              reduce using rule 63 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 63 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 63 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 63 (expression -> expression PLUS expression .)
    PLUSEQ          reduce using rule 63 (expression -> expression PLUS expression .)
    MINUSEQ         reduce using rule 63 (expression -> expression PLUS expression .)
    TIMESEQ         reduce using rule 63 (expression -> expression PLUS expression .)
    DIVEQ           reduce using rule 63 (expression -> expression PLUS expression .)
    NULLASSIGN      reduce using rule 63 (expression -> expression PLUS expression .)
    QMARK           reduce using rule 63 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 63 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 63 (expression -> expression PLUS expression .)
    RBRACKET        reduce using rule 63 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 63 (expression -> expression PLUS expression .)
    COLON           reduce using rule 63 (expression -> expression PLUS expression .)
    RBRACE          reduce using rule 63 (expression -> expression PLUS expression .)
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! PLUSPLUS        [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! LBRACKET        [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! LPAREN          [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! NOT             [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! INTDIV          [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! MODULE          [ reduce using rule 63 (expression -> expression PLUS expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! IS              [ shift and go to state 88 ]
  ! PLUS            [ shift and go to state 95 ]
  ! MINUS           [ shift and go to state 96 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 144

    (64) expression -> expression MINUS expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 64 (expression -> expression MINUS expression .)
    AND             reduce using rule 64 (expression -> expression MINUS expression .)
    OR              reduce using rule 64 (expression -> expression MINUS expression .)
    EQEQ            reduce using rule 64 (expression -> expression MINUS expression .)
    NEQ             reduce using rule 64 (expression -> expression MINUS expression .)
    MINSIGN         reduce using rule 64 (expression -> expression MINUS expression .)
    MAXSIGN         reduce using rule 64 (expression -> expression MINUS expression .)
    MINSIGNEQ       reduce using rule 64 (expression -> expression MINUS expression .)
    MAXSIGNEQ       reduce using rule 64 (expression -> expression MINUS expression .)
    IS              reduce using rule 64 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 64 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 64 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 64 (expression -> expression MINUS expression .)
    PLUSEQ          reduce using rule 64 (expression -> expression MINUS expression .)
    MINUSEQ         reduce using rule 64 (expression -> expression MINUS expression .)
    TIMESEQ         reduce using rule 64 (expression -> expression MINUS expression .)
    DIVEQ           reduce using rule 64 (expression -> expression MINUS expression .)
    NULLASSIGN      reduce using rule 64 (expression -> expression MINUS expression .)
    QMARK           reduce using rule 64 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 64 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 64 (expression -> expression MINUS expression .)
    RBRACKET        reduce using rule 64 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 64 (expression -> expression MINUS expression .)
    COLON           reduce using rule 64 (expression -> expression MINUS expression .)
    RBRACE          reduce using rule 64 (expression -> expression MINUS expression .)
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100

  ! PLUSPLUS        [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! MINUSMINUS      [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! LBRACKET        [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! LPAREN          [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! NOT             [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! INTDIV          [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! MODULE          [ reduce using rule 64 (expression -> expression MINUS expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! IS              [ shift and go to state 88 ]
  ! PLUS            [ shift and go to state 95 ]
  ! MINUS           [ shift and go to state 96 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 145

    (65) expression -> expression TIMES expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 65 (expression -> expression TIMES expression .)
    AND             reduce using rule 65 (expression -> expression TIMES expression .)
    OR              reduce using rule 65 (expression -> expression TIMES expression .)
    EQEQ            reduce using rule 65 (expression -> expression TIMES expression .)
    NEQ             reduce using rule 65 (expression -> expression TIMES expression .)
    MINSIGN         reduce using rule 65 (expression -> expression TIMES expression .)
    MAXSIGN         reduce using rule 65 (expression -> expression TIMES expression .)
    MINSIGNEQ       reduce using rule 65 (expression -> expression TIMES expression .)
    MAXSIGNEQ       reduce using rule 65 (expression -> expression TIMES expression .)
    IS              reduce using rule 65 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 65 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 65 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 65 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 65 (expression -> expression TIMES expression .)
    INTDIV          reduce using rule 65 (expression -> expression TIMES expression .)
    MODULE          reduce using rule 65 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 65 (expression -> expression TIMES expression .)
    PLUSEQ          reduce using rule 65 (expression -> expression TIMES expression .)
    MINUSEQ         reduce using rule 65 (expression -> expression TIMES expression .)
    TIMESEQ         reduce using rule 65 (expression -> expression TIMES expression .)
    DIVEQ           reduce using rule 65 (expression -> expression TIMES expression .)
    NULLASSIGN      reduce using rule 65 (expression -> expression TIMES expression .)
    QMARK           reduce using rule 65 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 65 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 65 (expression -> expression TIMES expression .)
    RBRACKET        reduce using rule 65 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 65 (expression -> expression TIMES expression .)
    COLON           reduce using rule 65 (expression -> expression TIMES expression .)
    RBRACE          reduce using rule 65 (expression -> expression TIMES expression .)
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89

  ! PLUSPLUS        [ reduce using rule 65 (expression -> expression TIMES expression .) ]
  ! MINUSMINUS      [ reduce using rule 65 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 65 (expression -> expression TIMES expression .) ]
  ! LBRACKET        [ reduce using rule 65 (expression -> expression TIMES expression .) ]
  ! LPAREN          [ reduce using rule 65 (expression -> expression TIMES expression .) ]
  ! NOT             [ reduce using rule 65 (expression -> expression TIMES expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! IS              [ shift and go to state 88 ]
  ! PLUS            [ shift and go to state 95 ]
  ! MINUS           [ shift and go to state 96 ]
  ! TIMES           [ shift and go to state 97 ]
  ! DIVIDE          [ shift and go to state 98 ]
  ! INTDIV          [ shift and go to state 99 ]
  ! MODULE          [ shift and go to state 100 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 146

    (66) expression -> expression DIVIDE expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 66 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 66 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 66 (expression -> expression DIVIDE expression .)
    EQEQ            reduce using rule 66 (expression -> expression DIVIDE expression .)
    NEQ             reduce using rule 66 (expression -> expression DIVIDE expression .)
    MINSIGN         reduce using rule 66 (expression -> expression DIVIDE expression .)
    MAXSIGN         reduce using rule 66 (expression -> expression DIVIDE expression .)
    MINSIGNEQ       reduce using rule 66 (expression -> expression DIVIDE expression .)
    MAXSIGNEQ       reduce using rule 66 (expression -> expression DIVIDE expression .)
    IS              reduce using rule 66 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 66 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 66 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 66 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 66 (expression -> expression DIVIDE expression .)
    INTDIV          reduce using rule 66 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 66 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 66 (expression -> expression DIVIDE expression .)
    PLUSEQ          reduce using rule 66 (expression -> expression DIVIDE expression .)
    MINUSEQ         reduce using rule 66 (expression -> expression DIVIDE expression .)
    TIMESEQ         reduce using rule 66 (expression -> expression DIVIDE expression .)
    DIVEQ           reduce using rule 66 (expression -> expression DIVIDE expression .)
    NULLASSIGN      reduce using rule 66 (expression -> expression DIVIDE expression .)
    QMARK           reduce using rule 66 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 66 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 66 (expression -> expression DIVIDE expression .)
    RBRACKET        reduce using rule 66 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 66 (expression -> expression DIVIDE expression .)
    COLON           reduce using rule 66 (expression -> expression DIVIDE expression .)
    RBRACE          reduce using rule 66 (expression -> expression DIVIDE expression .)
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89

  ! PLUSPLUS        [ reduce using rule 66 (expression -> expression DIVIDE expression .) ]
  ! MINUSMINUS      [ reduce using rule 66 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 66 (expression -> expression DIVIDE expression .) ]
  ! LBRACKET        [ reduce using rule 66 (expression -> expression DIVIDE expression .) ]
  ! LPAREN          [ reduce using rule 66 (expression -> expression DIVIDE expression .) ]
  ! NOT             [ reduce using rule 66 (expression -> expression DIVIDE expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! IS              [ shift and go to state 88 ]
  ! PLUS            [ shift and go to state 95 ]
  ! MINUS           [ shift and go to state 96 ]
  ! TIMES           [ shift and go to state 97 ]
  ! DIVIDE          [ shift and go to state 98 ]
  ! INTDIV          [ shift and go to state 99 ]
  ! MODULE          [ shift and go to state 100 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 147

    (67) expression -> expression INTDIV expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 67 (expression -> expression INTDIV expression .)
    AND             reduce using rule 67 (expression -> expression INTDIV expression .)
    OR              reduce using rule 67 (expression -> expression INTDIV expression .)
    EQEQ            reduce using rule 67 (expression -> expression INTDIV expression .)
    NEQ             reduce using rule 67 (expression -> expression INTDIV expression .)
    MINSIGN         reduce using rule 67 (expression -> expression INTDIV expression .)
    MAXSIGN         reduce using rule 67 (expression -> expression INTDIV expression .)
    MINSIGNEQ       reduce using rule 67 (expression -> expression INTDIV expression .)
    MAXSIGNEQ       reduce using rule 67 (expression -> expression INTDIV expression .)
    IS              reduce using rule 67 (expression -> expression INTDIV expression .)
    PLUS            reduce using rule 67 (expression -> expression INTDIV expression .)
    MINUS           reduce using rule 67 (expression -> expression INTDIV expression .)
    TIMES           reduce using rule 67 (expression -> expression INTDIV expression .)
    DIVIDE          reduce using rule 67 (expression -> expression INTDIV expression .)
    INTDIV          reduce using rule 67 (expression -> expression INTDIV expression .)
    MODULE          reduce using rule 67 (expression -> expression INTDIV expression .)
    EQUALS          reduce using rule 67 (expression -> expression INTDIV expression .)
    PLUSEQ          reduce using rule 67 (expression -> expression INTDIV expression .)
    MINUSEQ         reduce using rule 67 (expression -> expression INTDIV expression .)
    TIMESEQ         reduce using rule 67 (expression -> expression INTDIV expression .)
    DIVEQ           reduce using rule 67 (expression -> expression INTDIV expression .)
    NULLASSIGN      reduce using rule 67 (expression -> expression INTDIV expression .)
    QMARK           reduce using rule 67 (expression -> expression INTDIV expression .)
    SEMICOLON       reduce using rule 67 (expression -> expression INTDIV expression .)
    COMMA           reduce using rule 67 (expression -> expression INTDIV expression .)
    RBRACKET        reduce using rule 67 (expression -> expression INTDIV expression .)
    RPAREN          reduce using rule 67 (expression -> expression INTDIV expression .)
    COLON           reduce using rule 67 (expression -> expression INTDIV expression .)
    RBRACE          reduce using rule 67 (expression -> expression INTDIV expression .)
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89

  ! PLUSPLUS        [ reduce using rule 67 (expression -> expression INTDIV expression .) ]
  ! MINUSMINUS      [ reduce using rule 67 (expression -> expression INTDIV expression .) ]
  ! DOT             [ reduce using rule 67 (expression -> expression INTDIV expression .) ]
  ! LBRACKET        [ reduce using rule 67 (expression -> expression INTDIV expression .) ]
  ! LPAREN          [ reduce using rule 67 (expression -> expression INTDIV expression .) ]
  ! NOT             [ reduce using rule 67 (expression -> expression INTDIV expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! IS              [ shift and go to state 88 ]
  ! PLUS            [ shift and go to state 95 ]
  ! MINUS           [ shift and go to state 96 ]
  ! TIMES           [ shift and go to state 97 ]
  ! DIVIDE          [ shift and go to state 98 ]
  ! INTDIV          [ shift and go to state 99 ]
  ! MODULE          [ shift and go to state 100 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 148

    (68) expression -> expression MODULE expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 68 (expression -> expression MODULE expression .)
    AND             reduce using rule 68 (expression -> expression MODULE expression .)
    OR              reduce using rule 68 (expression -> expression MODULE expression .)
    EQEQ            reduce using rule 68 (expression -> expression MODULE expression .)
    NEQ             reduce using rule 68 (expression -> expression MODULE expression .)
    MINSIGN         reduce using rule 68 (expression -> expression MODULE expression .)
    MAXSIGN         reduce using rule 68 (expression -> expression MODULE expression .)
    MINSIGNEQ       reduce using rule 68 (expression -> expression MODULE expression .)
    MAXSIGNEQ       reduce using rule 68 (expression -> expression MODULE expression .)
    IS              reduce using rule 68 (expression -> expression MODULE expression .)
    PLUS            reduce using rule 68 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 68 (expression -> expression MODULE expression .)
    TIMES           reduce using rule 68 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 68 (expression -> expression MODULE expression .)
    INTDIV          reduce using rule 68 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 68 (expression -> expression MODULE expression .)
    EQUALS          reduce using rule 68 (expression -> expression MODULE expression .)
    PLUSEQ          reduce using rule 68 (expression -> expression MODULE expression .)
    MINUSEQ         reduce using rule 68 (expression -> expression MODULE expression .)
    TIMESEQ         reduce using rule 68 (expression -> expression MODULE expression .)
    DIVEQ           reduce using rule 68 (expression -> expression MODULE expression .)
    NULLASSIGN      reduce using rule 68 (expression -> expression MODULE expression .)
    QMARK           reduce using rule 68 (expression -> expression MODULE expression .)
    SEMICOLON       reduce using rule 68 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 68 (expression -> expression MODULE expression .)
    RBRACKET        reduce using rule 68 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 68 (expression -> expression MODULE expression .)
    COLON           reduce using rule 68 (expression -> expression MODULE expression .)
    RBRACE          reduce using rule 68 (expression -> expression MODULE expression .)
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89

  ! PLUSPLUS        [ reduce using rule 68 (expression -> expression MODULE expression .) ]
  ! MINUSMINUS      [ reduce using rule 68 (expression -> expression MODULE expression .) ]
  ! DOT             [ reduce using rule 68 (expression -> expression MODULE expression .) ]
  ! LBRACKET        [ reduce using rule 68 (expression -> expression MODULE expression .) ]
  ! LPAREN          [ reduce using rule 68 (expression -> expression MODULE expression .) ]
  ! NOT             [ reduce using rule 68 (expression -> expression MODULE expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! AND             [ shift and go to state 80 ]
  ! OR              [ shift and go to state 81 ]
  ! EQEQ            [ shift and go to state 82 ]
  ! NEQ             [ shift and go to state 83 ]
  ! MINSIGN         [ shift and go to state 84 ]
  ! MAXSIGN         [ shift and go to state 85 ]
  ! MINSIGNEQ       [ shift and go to state 86 ]
  ! MAXSIGNEQ       [ shift and go to state 87 ]
  ! IS              [ shift and go to state 88 ]
  ! PLUS            [ shift and go to state 95 ]
  ! MINUS           [ shift and go to state 96 ]
  ! TIMES           [ shift and go to state 97 ]
  ! DIVIDE          [ shift and go to state 98 ]
  ! INTDIV          [ shift and go to state 99 ]
  ! MODULE          [ shift and go to state 100 ]
  ! EQUALS          [ shift and go to state 78 ]
  ! PLUSEQ          [ shift and go to state 101 ]
  ! MINUSEQ         [ shift and go to state 102 ]
  ! TIMESEQ         [ shift and go to state 103 ]
  ! DIVEQ           [ shift and go to state 104 ]
  ! NULLASSIGN      [ shift and go to state 105 ]
  ! QMARK           [ shift and go to state 106 ]


state 149

    (106) expression -> expression PLUSEQ expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 106 (expression -> expression PLUSEQ expression .)
    QMARK           reduce using rule 106 (expression -> expression PLUSEQ expression .)
    SEMICOLON       reduce using rule 106 (expression -> expression PLUSEQ expression .)
    COMMA           reduce using rule 106 (expression -> expression PLUSEQ expression .)
    RBRACKET        reduce using rule 106 (expression -> expression PLUSEQ expression .)
    RPAREN          reduce using rule 106 (expression -> expression PLUSEQ expression .)
    COLON           reduce using rule 106 (expression -> expression PLUSEQ expression .)
    RBRACE          reduce using rule 106 (expression -> expression PLUSEQ expression .)
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105

  ! AND             [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! OR              [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! EQEQ            [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! NEQ             [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! MINSIGN         [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! IS              [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! DOT             [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! LBRACKET        [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! LPAREN          [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! NOT             [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! PLUS            [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! MINUS           [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! TIMES           [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! INTDIV          [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! MODULE          [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! EQUALS          [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! PLUSEQ          [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! MINUSEQ         [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! TIMESEQ         [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! DIVEQ           [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! NULLASSIGN      [ reduce using rule 106 (expression -> expression PLUSEQ expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! QMARK           [ shift and go to state 106 ]


state 150

    (107) expression -> expression MINUSEQ expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 107 (expression -> expression MINUSEQ expression .)
    QMARK           reduce using rule 107 (expression -> expression MINUSEQ expression .)
    SEMICOLON       reduce using rule 107 (expression -> expression MINUSEQ expression .)
    COMMA           reduce using rule 107 (expression -> expression MINUSEQ expression .)
    RBRACKET        reduce using rule 107 (expression -> expression MINUSEQ expression .)
    RPAREN          reduce using rule 107 (expression -> expression MINUSEQ expression .)
    COLON           reduce using rule 107 (expression -> expression MINUSEQ expression .)
    RBRACE          reduce using rule 107 (expression -> expression MINUSEQ expression .)
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105

  ! AND             [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! OR              [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! EQEQ            [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! NEQ             [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! MINSIGN         [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! IS              [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! DOT             [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! LBRACKET        [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! LPAREN          [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! NOT             [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! PLUS            [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! MINUS           [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! TIMES           [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! DIVIDE          [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! INTDIV          [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! MODULE          [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! EQUALS          [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! PLUSEQ          [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! MINUSEQ         [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! TIMESEQ         [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! DIVEQ           [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! NULLASSIGN      [ reduce using rule 107 (expression -> expression MINUSEQ expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! QMARK           [ shift and go to state 106 ]


state 151

    (108) expression -> expression TIMESEQ expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 108 (expression -> expression TIMESEQ expression .)
    QMARK           reduce using rule 108 (expression -> expression TIMESEQ expression .)
    SEMICOLON       reduce using rule 108 (expression -> expression TIMESEQ expression .)
    COMMA           reduce using rule 108 (expression -> expression TIMESEQ expression .)
    RBRACKET        reduce using rule 108 (expression -> expression TIMESEQ expression .)
    RPAREN          reduce using rule 108 (expression -> expression TIMESEQ expression .)
    COLON           reduce using rule 108 (expression -> expression TIMESEQ expression .)
    RBRACE          reduce using rule 108 (expression -> expression TIMESEQ expression .)
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105

  ! AND             [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! OR              [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! EQEQ            [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! NEQ             [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! MINSIGN         [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! IS              [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! DOT             [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! LBRACKET        [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! LPAREN          [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! NOT             [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! PLUS            [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! MINUS           [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! TIMES           [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! DIVIDE          [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! INTDIV          [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! MODULE          [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! EQUALS          [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! PLUSEQ          [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! MINUSEQ         [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! TIMESEQ         [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! DIVEQ           [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! NULLASSIGN      [ reduce using rule 108 (expression -> expression TIMESEQ expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! QMARK           [ shift and go to state 106 ]


state 152

    (109) expression -> expression DIVEQ expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 109 (expression -> expression DIVEQ expression .)
    QMARK           reduce using rule 109 (expression -> expression DIVEQ expression .)
    SEMICOLON       reduce using rule 109 (expression -> expression DIVEQ expression .)
    COMMA           reduce using rule 109 (expression -> expression DIVEQ expression .)
    RBRACKET        reduce using rule 109 (expression -> expression DIVEQ expression .)
    RPAREN          reduce using rule 109 (expression -> expression DIVEQ expression .)
    COLON           reduce using rule 109 (expression -> expression DIVEQ expression .)
    RBRACE          reduce using rule 109 (expression -> expression DIVEQ expression .)
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105

  ! AND             [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! OR              [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! EQEQ            [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! NEQ             [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! MINSIGN         [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! MAXSIGN         [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! MINSIGNEQ       [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! IS              [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! PLUSPLUS        [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! MINUSMINUS      [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! DOT             [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! LBRACKET        [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! LPAREN          [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! NOT             [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! PLUS            [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! MINUS           [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! TIMES           [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! DIVIDE          [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! INTDIV          [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! MODULE          [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! EQUALS          [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! PLUSEQ          [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! MINUSEQ         [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! TIMESEQ         [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! DIVEQ           [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! NULLASSIGN      [ reduce using rule 109 (expression -> expression DIVEQ expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! QMARK           [ shift and go to state 106 ]


state 153

    (110) expression -> expression NULLASSIGN expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    NULLCOALESCING  reduce using rule 110 (expression -> expression NULLASSIGN expression .)
    QMARK           reduce using rule 110 (expression -> expression NULLASSIGN expression .)
    SEMICOLON       reduce using rule 110 (expression -> expression NULLASSIGN expression .)
    COMMA           reduce using rule 110 (expression -> expression NULLASSIGN expression .)
    RBRACKET        reduce using rule 110 (expression -> expression NULLASSIGN expression .)
    RPAREN          reduce using rule 110 (expression -> expression NULLASSIGN expression .)
    COLON           reduce using rule 110 (expression -> expression NULLASSIGN expression .)
    RBRACE          reduce using rule 110 (expression -> expression NULLASSIGN expression .)
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105

  ! AND             [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! OR              [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! EQEQ            [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! NEQ             [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! MINSIGN         [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! MAXSIGN         [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! MINSIGNEQ       [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! IS              [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! PLUSPLUS        [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! MINUSMINUS      [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! DOT             [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! LBRACKET        [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! LPAREN          [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! NOT             [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! PLUS            [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! MINUS           [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! TIMES           [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! DIVIDE          [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! INTDIV          [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! MODULE          [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! EQUALS          [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! PLUSEQ          [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! MINUSEQ         [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! TIMESEQ         [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! DIVEQ           [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! NULLASSIGN      [ reduce using rule 110 (expression -> expression NULLASSIGN expression .) ]
  ! NULLCOALESCING  [ shift and go to state 79 ]
  ! QMARK           [ shift and go to state 106 ]


state 154

    (111) expression -> expression QMARK expression . COLON expression
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    COLON           shift and go to state 202
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 155

    (128) expression -> LBRACKET expression_list RBRACKET .

    NULLCOALESCING  reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    AND             reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    OR              reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    EQEQ            reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    NEQ             reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    MINSIGN         reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    MAXSIGN         reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    MINSIGNEQ       reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    MAXSIGNEQ       reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    IS              reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    PLUSPLUS        reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    MINUSMINUS      reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    DOT             reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    LBRACKET        reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    LPAREN          reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    NOT             reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    PLUS            reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    MINUS           reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    TIMES           reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    DIVIDE          reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    INTDIV          reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    MODULE          reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    EQUALS          reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    PLUSEQ          reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    MINUSEQ         reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    TIMESEQ         reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    DIVEQ           reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    NULLASSIGN      reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    QMARK           reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    SEMICOLON       reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    COMMA           reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACKET        reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    RPAREN          reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    COLON           reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)
    RBRACE          reduce using rule 128 (expression -> LBRACKET expression_list RBRACKET .)


state 156

    (141) expression_list -> expression COMMA . expression_list
    (141) expression_list -> . expression COMMA expression_list
    (142) expression_list -> . expression
    (143) expression_list -> . empty
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (146) empty -> .
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    RBRACKET        reduce using rule 146 (empty -> .)
    RPAREN          reduce using rule 146 (empty -> .)
    RBRACE          reduce using rule 146 (empty -> .)
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 110
    expression_list                shift and go to state 203
    empty                          shift and go to state 111
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 157

    (77) factor -> LPAREN expression RPAREN .

    NULLCOALESCING  reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    AND             reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    OR              reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    EQEQ            reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    NEQ             reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MINSIGN         reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MAXSIGN         reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MINSIGNEQ       reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MAXSIGNEQ       reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    IS              reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    PLUSPLUS        reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MINUSMINUS      reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    DOT             reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    LBRACKET        reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    LPAREN          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    NOT             reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    INTDIV          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    PLUSEQ          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    MINUSEQ         reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    TIMESEQ         reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    DIVEQ           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    NULLASSIGN      reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    QMARK           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    RBRACKET        reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    COLON           reduce using rule 77 (factor -> LPAREN expression RPAREN .)
    RBRACE          reduce using rule 77 (factor -> LPAREN expression RPAREN .)


state 158

    (129) expression -> LBRACE set_or_map_contents RBRACE .

    NULLCOALESCING  reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    AND             reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    OR              reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    EQEQ            reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    NEQ             reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINSIGN         reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    MAXSIGN         reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINSIGNEQ       reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    MAXSIGNEQ       reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    IS              reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    PLUSPLUS        reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINUSMINUS      reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    DOT             reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    LBRACKET        reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    LPAREN          reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    NOT             reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    PLUS            reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINUS           reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    TIMES           reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    DIVIDE          reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    INTDIV          reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    MODULE          reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    EQUALS          reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    PLUSEQ          reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    MINUSEQ         reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    TIMESEQ         reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    DIVEQ           reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    NULLASSIGN      reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    QMARK           reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    SEMICOLON       reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    COMMA           reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    RBRACKET        reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    RPAREN          reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    COLON           reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)
    RBRACE          reduce using rule 129 (expression -> LBRACE set_or_map_contents RBRACE .)


state 159

    (130) set_or_map_contents -> expression set_or_map_tail .

    RBRACE          reduce using rule 130 (set_or_map_contents -> expression set_or_map_tail .)


state 160

    (132) set_or_map_tail -> COLON . expression map_tail
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 204
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 161

    (133) set_or_map_tail -> set_tail .

    RBRACE          reduce using rule 133 (set_or_map_tail -> set_tail .)


state 162

    (139) set_tail -> COMMA . expression_list
    (141) expression_list -> . expression COMMA expression_list
    (142) expression_list -> . expression
    (143) expression_list -> . empty
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (146) empty -> .
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    RBRACE          reduce using rule 146 (empty -> .)
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression_list                shift and go to state 205
    expression                     shift and go to state 110
    empty                          shift and go to state 111
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 163

    (140) set_tail -> empty .

    RBRACE          reduce using rule 140 (set_tail -> empty .)


state 164

    (71) factor -> primitive_type DOT ID . LPAREN arguments RPAREN

    LPAREN          shift and go to state 206


state 165

    (21) constructor_declaration -> ID LPAREN constructor_params RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 207


state 166

    (24) constructor_param_list -> constructor_param_list COMMA . constructor_param
    (26) constructor_param -> . THIS DOT ID

    THIS            shift and go to state 122

    constructor_param              shift and go to state 208

state 167

    (26) constructor_param -> THIS DOT . ID

    ID              shift and go to state 209


state 168

    (103) variable_declaration -> declaration_type . ID
    (104) variable_declaration -> declaration_type . ID EQUALS expression

    ID              shift and go to state 210


state 169

    (129) expression -> LBRACE . set_or_map_contents RBRACE
    (101) block_statement -> LBRACE . instructions RBRACE
    (130) set_or_map_contents -> . expression set_or_map_tail
    (131) set_or_map_contents -> . empty
    (78) instructions -> . instruction instructions
    (79) instructions -> . empty
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (146) empty -> .
    (80) instruction -> . variable_declaration SEMICOLON
    (81) instruction -> . expression SEMICOLON
    (82) instruction -> . print_statement
    (83) instruction -> . if_else
    (84) instruction -> . while_loop
    (85) instruction -> . for_loop
    (86) instruction -> . return_statement
    (87) instruction -> . block_statement
    (88) instruction -> . throw_statement
    (89) instruction -> . try_statement
    (90) instruction -> . const_declaration SEMICOLON
    (91) instruction -> . break_statement
    (92) instruction -> . continue_statement
    (70) term -> . factor
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (112) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (119) if_else -> . IF LPAREN expression RPAREN instruction
    (120) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (121) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (122) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (116) return_statement -> . RETURN expression SEMICOLON
    (117) return_statement -> . RETURN SEMICOLON
    (101) block_statement -> . LBRACE instructions RBRACE
    (102) throw_statement -> . THROW expression SEMICOLON
    (93) try_statement -> . TRY block_statement catch_clauses
    (94) try_statement -> . TRY block_statement catch_clauses finally_clause
    (95) try_statement -> . TRY block_statement finally_clause
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (144) break_statement -> . BREAK SEMICOLON
    (145) continue_statement -> . CONTINUE SEMICOLON
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 169
    RBRACE          reduce using rule 146 (empty -> .)
    PRINT           shift and go to state 188
    IF              shift and go to state 189
    WHILE           shift and go to state 190
    FOR             shift and go to state 191
    RETURN          shift and go to state 192
    THROW           shift and go to state 193
    TRY             shift and go to state 194
    CONST           shift and go to state 14
    BREAK           shift and go to state 195
    CONTINUE        shift and go to state 196
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 214
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    set_or_map_contents            shift and go to state 113
    instructions                   shift and go to state 211
    expression                     shift and go to state 212
    empty                          shift and go to state 213
    instruction                    shift and go to state 172
    declaration_type               shift and go to state 168
    term                           shift and go to state 61
    variable_declaration           shift and go to state 174
    print_statement                shift and go to state 176
    if_else                        shift and go to state 177
    while_loop                     shift and go to state 178
    for_loop                       shift and go to state 179
    return_statement               shift and go to state 180
    block_statement                shift and go to state 181
    throw_statement                shift and go to state 182
    try_statement                  shift and go to state 183
    const_declaration              shift and go to state 184
    break_statement                shift and go to state 185
    continue_statement             shift and go to state 186
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 215
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17

state 170

    (17) function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body . RBRACE

    RBRACE          shift and go to state 216


state 171

    (118) body -> instructions .

    RBRACE          reduce using rule 118 (body -> instructions .)


state 172

    (78) instructions -> instruction . instructions
    (78) instructions -> . instruction instructions
    (79) instructions -> . empty
    (80) instruction -> . variable_declaration SEMICOLON
    (81) instruction -> . expression SEMICOLON
    (82) instruction -> . print_statement
    (83) instruction -> . if_else
    (84) instruction -> . while_loop
    (85) instruction -> . for_loop
    (86) instruction -> . return_statement
    (87) instruction -> . block_statement
    (88) instruction -> . throw_statement
    (89) instruction -> . try_statement
    (90) instruction -> . const_declaration SEMICOLON
    (91) instruction -> . break_statement
    (92) instruction -> . continue_statement
    (146) empty -> .
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (112) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (119) if_else -> . IF LPAREN expression RPAREN instruction
    (120) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (121) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (122) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (116) return_statement -> . RETURN expression SEMICOLON
    (117) return_statement -> . RETURN SEMICOLON
    (101) block_statement -> . LBRACE instructions RBRACE
    (102) throw_statement -> . THROW expression SEMICOLON
    (93) try_statement -> . TRY block_statement catch_clauses
    (94) try_statement -> . TRY block_statement catch_clauses finally_clause
    (95) try_statement -> . TRY block_statement finally_clause
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (144) break_statement -> . BREAK SEMICOLON
    (145) continue_statement -> . CONTINUE SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (70) term -> . factor
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN

    RBRACE          reduce using rule 146 (empty -> .)
    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 169
    PRINT           shift and go to state 188
    IF              shift and go to state 189
    WHILE           shift and go to state 190
    FOR             shift and go to state 191
    RETURN          shift and go to state 192
    THROW           shift and go to state 193
    TRY             shift and go to state 194
    CONST           shift and go to state 14
    BREAK           shift and go to state 195
    CONTINUE        shift and go to state 196
    ID              shift and go to state 187
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60

    instruction                    shift and go to state 172
    instructions                   shift and go to state 217
    empty                          shift and go to state 173
    variable_declaration           shift and go to state 174
    expression                     shift and go to state 175
    print_statement                shift and go to state 176
    if_else                        shift and go to state 177
    while_loop                     shift and go to state 178
    for_loop                       shift and go to state 179
    return_statement               shift and go to state 180
    block_statement                shift and go to state 181
    throw_statement                shift and go to state 182
    try_statement                  shift and go to state 183
    const_declaration              shift and go to state 184
    break_statement                shift and go to state 185
    continue_statement             shift and go to state 186
    declaration_type               shift and go to state 168
    term                           shift and go to state 61
    primitive_type                 shift and go to state 197
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17
    factor                         shift and go to state 63

state 173

    (79) instructions -> empty .

    RBRACE          reduce using rule 79 (instructions -> empty .)


state 174

    (80) instruction -> variable_declaration . SEMICOLON

    SEMICOLON       shift and go to state 218


state 175

    (81) instruction -> expression . SEMICOLON
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    SEMICOLON       shift and go to state 219
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 176

    (82) instruction -> print_statement .

    NOT             reduce using rule 82 (instruction -> print_statement .)
    MINUS           reduce using rule 82 (instruction -> print_statement .)
    LBRACKET        reduce using rule 82 (instruction -> print_statement .)
    LBRACE          reduce using rule 82 (instruction -> print_statement .)
    PRINT           reduce using rule 82 (instruction -> print_statement .)
    IF              reduce using rule 82 (instruction -> print_statement .)
    WHILE           reduce using rule 82 (instruction -> print_statement .)
    FOR             reduce using rule 82 (instruction -> print_statement .)
    RETURN          reduce using rule 82 (instruction -> print_statement .)
    THROW           reduce using rule 82 (instruction -> print_statement .)
    TRY             reduce using rule 82 (instruction -> print_statement .)
    CONST           reduce using rule 82 (instruction -> print_statement .)
    BREAK           reduce using rule 82 (instruction -> print_statement .)
    CONTINUE        reduce using rule 82 (instruction -> print_statement .)
    ID              reduce using rule 82 (instruction -> print_statement .)
    INT             reduce using rule 82 (instruction -> print_statement .)
    DOUBLE          reduce using rule 82 (instruction -> print_statement .)
    STRING          reduce using rule 82 (instruction -> print_statement .)
    BOOL            reduce using rule 82 (instruction -> print_statement .)
    VOID            reduce using rule 82 (instruction -> print_statement .)
    VAR             reduce using rule 82 (instruction -> print_statement .)
    DYNAMIC         reduce using rule 82 (instruction -> print_statement .)
    NUMBER          reduce using rule 82 (instruction -> print_statement .)
    STRING_LITERAL  reduce using rule 82 (instruction -> print_statement .)
    TRUE            reduce using rule 82 (instruction -> print_statement .)
    FALSE           reduce using rule 82 (instruction -> print_statement .)
    LPAREN          reduce using rule 82 (instruction -> print_statement .)
    RBRACE          reduce using rule 82 (instruction -> print_statement .)
    ELSE            reduce using rule 82 (instruction -> print_statement .)


state 177

    (83) instruction -> if_else .

    NOT             reduce using rule 83 (instruction -> if_else .)
    MINUS           reduce using rule 83 (instruction -> if_else .)
    LBRACKET        reduce using rule 83 (instruction -> if_else .)
    LBRACE          reduce using rule 83 (instruction -> if_else .)
    PRINT           reduce using rule 83 (instruction -> if_else .)
    IF              reduce using rule 83 (instruction -> if_else .)
    WHILE           reduce using rule 83 (instruction -> if_else .)
    FOR             reduce using rule 83 (instruction -> if_else .)
    RETURN          reduce using rule 83 (instruction -> if_else .)
    THROW           reduce using rule 83 (instruction -> if_else .)
    TRY             reduce using rule 83 (instruction -> if_else .)
    CONST           reduce using rule 83 (instruction -> if_else .)
    BREAK           reduce using rule 83 (instruction -> if_else .)
    CONTINUE        reduce using rule 83 (instruction -> if_else .)
    ID              reduce using rule 83 (instruction -> if_else .)
    INT             reduce using rule 83 (instruction -> if_else .)
    DOUBLE          reduce using rule 83 (instruction -> if_else .)
    STRING          reduce using rule 83 (instruction -> if_else .)
    BOOL            reduce using rule 83 (instruction -> if_else .)
    VOID            reduce using rule 83 (instruction -> if_else .)
    VAR             reduce using rule 83 (instruction -> if_else .)
    DYNAMIC         reduce using rule 83 (instruction -> if_else .)
    NUMBER          reduce using rule 83 (instruction -> if_else .)
    STRING_LITERAL  reduce using rule 83 (instruction -> if_else .)
    TRUE            reduce using rule 83 (instruction -> if_else .)
    FALSE           reduce using rule 83 (instruction -> if_else .)
    LPAREN          reduce using rule 83 (instruction -> if_else .)
    RBRACE          reduce using rule 83 (instruction -> if_else .)
    ELSE            reduce using rule 83 (instruction -> if_else .)


state 178

    (84) instruction -> while_loop .

    NOT             reduce using rule 84 (instruction -> while_loop .)
    MINUS           reduce using rule 84 (instruction -> while_loop .)
    LBRACKET        reduce using rule 84 (instruction -> while_loop .)
    LBRACE          reduce using rule 84 (instruction -> while_loop .)
    PRINT           reduce using rule 84 (instruction -> while_loop .)
    IF              reduce using rule 84 (instruction -> while_loop .)
    WHILE           reduce using rule 84 (instruction -> while_loop .)
    FOR             reduce using rule 84 (instruction -> while_loop .)
    RETURN          reduce using rule 84 (instruction -> while_loop .)
    THROW           reduce using rule 84 (instruction -> while_loop .)
    TRY             reduce using rule 84 (instruction -> while_loop .)
    CONST           reduce using rule 84 (instruction -> while_loop .)
    BREAK           reduce using rule 84 (instruction -> while_loop .)
    CONTINUE        reduce using rule 84 (instruction -> while_loop .)
    ID              reduce using rule 84 (instruction -> while_loop .)
    INT             reduce using rule 84 (instruction -> while_loop .)
    DOUBLE          reduce using rule 84 (instruction -> while_loop .)
    STRING          reduce using rule 84 (instruction -> while_loop .)
    BOOL            reduce using rule 84 (instruction -> while_loop .)
    VOID            reduce using rule 84 (instruction -> while_loop .)
    VAR             reduce using rule 84 (instruction -> while_loop .)
    DYNAMIC         reduce using rule 84 (instruction -> while_loop .)
    NUMBER          reduce using rule 84 (instruction -> while_loop .)
    STRING_LITERAL  reduce using rule 84 (instruction -> while_loop .)
    TRUE            reduce using rule 84 (instruction -> while_loop .)
    FALSE           reduce using rule 84 (instruction -> while_loop .)
    LPAREN          reduce using rule 84 (instruction -> while_loop .)
    RBRACE          reduce using rule 84 (instruction -> while_loop .)
    ELSE            reduce using rule 84 (instruction -> while_loop .)


state 179

    (85) instruction -> for_loop .

    NOT             reduce using rule 85 (instruction -> for_loop .)
    MINUS           reduce using rule 85 (instruction -> for_loop .)
    LBRACKET        reduce using rule 85 (instruction -> for_loop .)
    LBRACE          reduce using rule 85 (instruction -> for_loop .)
    PRINT           reduce using rule 85 (instruction -> for_loop .)
    IF              reduce using rule 85 (instruction -> for_loop .)
    WHILE           reduce using rule 85 (instruction -> for_loop .)
    FOR             reduce using rule 85 (instruction -> for_loop .)
    RETURN          reduce using rule 85 (instruction -> for_loop .)
    THROW           reduce using rule 85 (instruction -> for_loop .)
    TRY             reduce using rule 85 (instruction -> for_loop .)
    CONST           reduce using rule 85 (instruction -> for_loop .)
    BREAK           reduce using rule 85 (instruction -> for_loop .)
    CONTINUE        reduce using rule 85 (instruction -> for_loop .)
    ID              reduce using rule 85 (instruction -> for_loop .)
    INT             reduce using rule 85 (instruction -> for_loop .)
    DOUBLE          reduce using rule 85 (instruction -> for_loop .)
    STRING          reduce using rule 85 (instruction -> for_loop .)
    BOOL            reduce using rule 85 (instruction -> for_loop .)
    VOID            reduce using rule 85 (instruction -> for_loop .)
    VAR             reduce using rule 85 (instruction -> for_loop .)
    DYNAMIC         reduce using rule 85 (instruction -> for_loop .)
    NUMBER          reduce using rule 85 (instruction -> for_loop .)
    STRING_LITERAL  reduce using rule 85 (instruction -> for_loop .)
    TRUE            reduce using rule 85 (instruction -> for_loop .)
    FALSE           reduce using rule 85 (instruction -> for_loop .)
    LPAREN          reduce using rule 85 (instruction -> for_loop .)
    RBRACE          reduce using rule 85 (instruction -> for_loop .)
    ELSE            reduce using rule 85 (instruction -> for_loop .)


state 180

    (86) instruction -> return_statement .

    NOT             reduce using rule 86 (instruction -> return_statement .)
    MINUS           reduce using rule 86 (instruction -> return_statement .)
    LBRACKET        reduce using rule 86 (instruction -> return_statement .)
    LBRACE          reduce using rule 86 (instruction -> return_statement .)
    PRINT           reduce using rule 86 (instruction -> return_statement .)
    IF              reduce using rule 86 (instruction -> return_statement .)
    WHILE           reduce using rule 86 (instruction -> return_statement .)
    FOR             reduce using rule 86 (instruction -> return_statement .)
    RETURN          reduce using rule 86 (instruction -> return_statement .)
    THROW           reduce using rule 86 (instruction -> return_statement .)
    TRY             reduce using rule 86 (instruction -> return_statement .)
    CONST           reduce using rule 86 (instruction -> return_statement .)
    BREAK           reduce using rule 86 (instruction -> return_statement .)
    CONTINUE        reduce using rule 86 (instruction -> return_statement .)
    ID              reduce using rule 86 (instruction -> return_statement .)
    INT             reduce using rule 86 (instruction -> return_statement .)
    DOUBLE          reduce using rule 86 (instruction -> return_statement .)
    STRING          reduce using rule 86 (instruction -> return_statement .)
    BOOL            reduce using rule 86 (instruction -> return_statement .)
    VOID            reduce using rule 86 (instruction -> return_statement .)
    VAR             reduce using rule 86 (instruction -> return_statement .)
    DYNAMIC         reduce using rule 86 (instruction -> return_statement .)
    NUMBER          reduce using rule 86 (instruction -> return_statement .)
    STRING_LITERAL  reduce using rule 86 (instruction -> return_statement .)
    TRUE            reduce using rule 86 (instruction -> return_statement .)
    FALSE           reduce using rule 86 (instruction -> return_statement .)
    LPAREN          reduce using rule 86 (instruction -> return_statement .)
    RBRACE          reduce using rule 86 (instruction -> return_statement .)
    ELSE            reduce using rule 86 (instruction -> return_statement .)


state 181

    (87) instruction -> block_statement .

    NOT             reduce using rule 87 (instruction -> block_statement .)
    MINUS           reduce using rule 87 (instruction -> block_statement .)
    LBRACKET        reduce using rule 87 (instruction -> block_statement .)
    LBRACE          reduce using rule 87 (instruction -> block_statement .)
    PRINT           reduce using rule 87 (instruction -> block_statement .)
    IF              reduce using rule 87 (instruction -> block_statement .)
    WHILE           reduce using rule 87 (instruction -> block_statement .)
    FOR             reduce using rule 87 (instruction -> block_statement .)
    RETURN          reduce using rule 87 (instruction -> block_statement .)
    THROW           reduce using rule 87 (instruction -> block_statement .)
    TRY             reduce using rule 87 (instruction -> block_statement .)
    CONST           reduce using rule 87 (instruction -> block_statement .)
    BREAK           reduce using rule 87 (instruction -> block_statement .)
    CONTINUE        reduce using rule 87 (instruction -> block_statement .)
    ID              reduce using rule 87 (instruction -> block_statement .)
    INT             reduce using rule 87 (instruction -> block_statement .)
    DOUBLE          reduce using rule 87 (instruction -> block_statement .)
    STRING          reduce using rule 87 (instruction -> block_statement .)
    BOOL            reduce using rule 87 (instruction -> block_statement .)
    VOID            reduce using rule 87 (instruction -> block_statement .)
    VAR             reduce using rule 87 (instruction -> block_statement .)
    DYNAMIC         reduce using rule 87 (instruction -> block_statement .)
    NUMBER          reduce using rule 87 (instruction -> block_statement .)
    STRING_LITERAL  reduce using rule 87 (instruction -> block_statement .)
    TRUE            reduce using rule 87 (instruction -> block_statement .)
    FALSE           reduce using rule 87 (instruction -> block_statement .)
    LPAREN          reduce using rule 87 (instruction -> block_statement .)
    RBRACE          reduce using rule 87 (instruction -> block_statement .)
    ELSE            reduce using rule 87 (instruction -> block_statement .)


state 182

    (88) instruction -> throw_statement .

    NOT             reduce using rule 88 (instruction -> throw_statement .)
    MINUS           reduce using rule 88 (instruction -> throw_statement .)
    LBRACKET        reduce using rule 88 (instruction -> throw_statement .)
    LBRACE          reduce using rule 88 (instruction -> throw_statement .)
    PRINT           reduce using rule 88 (instruction -> throw_statement .)
    IF              reduce using rule 88 (instruction -> throw_statement .)
    WHILE           reduce using rule 88 (instruction -> throw_statement .)
    FOR             reduce using rule 88 (instruction -> throw_statement .)
    RETURN          reduce using rule 88 (instruction -> throw_statement .)
    THROW           reduce using rule 88 (instruction -> throw_statement .)
    TRY             reduce using rule 88 (instruction -> throw_statement .)
    CONST           reduce using rule 88 (instruction -> throw_statement .)
    BREAK           reduce using rule 88 (instruction -> throw_statement .)
    CONTINUE        reduce using rule 88 (instruction -> throw_statement .)
    ID              reduce using rule 88 (instruction -> throw_statement .)
    INT             reduce using rule 88 (instruction -> throw_statement .)
    DOUBLE          reduce using rule 88 (instruction -> throw_statement .)
    STRING          reduce using rule 88 (instruction -> throw_statement .)
    BOOL            reduce using rule 88 (instruction -> throw_statement .)
    VOID            reduce using rule 88 (instruction -> throw_statement .)
    VAR             reduce using rule 88 (instruction -> throw_statement .)
    DYNAMIC         reduce using rule 88 (instruction -> throw_statement .)
    NUMBER          reduce using rule 88 (instruction -> throw_statement .)
    STRING_LITERAL  reduce using rule 88 (instruction -> throw_statement .)
    TRUE            reduce using rule 88 (instruction -> throw_statement .)
    FALSE           reduce using rule 88 (instruction -> throw_statement .)
    LPAREN          reduce using rule 88 (instruction -> throw_statement .)
    RBRACE          reduce using rule 88 (instruction -> throw_statement .)
    ELSE            reduce using rule 88 (instruction -> throw_statement .)


state 183

    (89) instruction -> try_statement .

    NOT             reduce using rule 89 (instruction -> try_statement .)
    MINUS           reduce using rule 89 (instruction -> try_statement .)
    LBRACKET        reduce using rule 89 (instruction -> try_statement .)
    LBRACE          reduce using rule 89 (instruction -> try_statement .)
    PRINT           reduce using rule 89 (instruction -> try_statement .)
    IF              reduce using rule 89 (instruction -> try_statement .)
    WHILE           reduce using rule 89 (instruction -> try_statement .)
    FOR             reduce using rule 89 (instruction -> try_statement .)
    RETURN          reduce using rule 89 (instruction -> try_statement .)
    THROW           reduce using rule 89 (instruction -> try_statement .)
    TRY             reduce using rule 89 (instruction -> try_statement .)
    CONST           reduce using rule 89 (instruction -> try_statement .)
    BREAK           reduce using rule 89 (instruction -> try_statement .)
    CONTINUE        reduce using rule 89 (instruction -> try_statement .)
    ID              reduce using rule 89 (instruction -> try_statement .)
    INT             reduce using rule 89 (instruction -> try_statement .)
    DOUBLE          reduce using rule 89 (instruction -> try_statement .)
    STRING          reduce using rule 89 (instruction -> try_statement .)
    BOOL            reduce using rule 89 (instruction -> try_statement .)
    VOID            reduce using rule 89 (instruction -> try_statement .)
    VAR             reduce using rule 89 (instruction -> try_statement .)
    DYNAMIC         reduce using rule 89 (instruction -> try_statement .)
    NUMBER          reduce using rule 89 (instruction -> try_statement .)
    STRING_LITERAL  reduce using rule 89 (instruction -> try_statement .)
    TRUE            reduce using rule 89 (instruction -> try_statement .)
    FALSE           reduce using rule 89 (instruction -> try_statement .)
    LPAREN          reduce using rule 89 (instruction -> try_statement .)
    RBRACE          reduce using rule 89 (instruction -> try_statement .)
    ELSE            reduce using rule 89 (instruction -> try_statement .)


state 184

    (90) instruction -> const_declaration . SEMICOLON

    SEMICOLON       shift and go to state 220


state 185

    (91) instruction -> break_statement .

    NOT             reduce using rule 91 (instruction -> break_statement .)
    MINUS           reduce using rule 91 (instruction -> break_statement .)
    LBRACKET        reduce using rule 91 (instruction -> break_statement .)
    LBRACE          reduce using rule 91 (instruction -> break_statement .)
    PRINT           reduce using rule 91 (instruction -> break_statement .)
    IF              reduce using rule 91 (instruction -> break_statement .)
    WHILE           reduce using rule 91 (instruction -> break_statement .)
    FOR             reduce using rule 91 (instruction -> break_statement .)
    RETURN          reduce using rule 91 (instruction -> break_statement .)
    THROW           reduce using rule 91 (instruction -> break_statement .)
    TRY             reduce using rule 91 (instruction -> break_statement .)
    CONST           reduce using rule 91 (instruction -> break_statement .)
    BREAK           reduce using rule 91 (instruction -> break_statement .)
    CONTINUE        reduce using rule 91 (instruction -> break_statement .)
    ID              reduce using rule 91 (instruction -> break_statement .)
    INT             reduce using rule 91 (instruction -> break_statement .)
    DOUBLE          reduce using rule 91 (instruction -> break_statement .)
    STRING          reduce using rule 91 (instruction -> break_statement .)
    BOOL            reduce using rule 91 (instruction -> break_statement .)
    VOID            reduce using rule 91 (instruction -> break_statement .)
    VAR             reduce using rule 91 (instruction -> break_statement .)
    DYNAMIC         reduce using rule 91 (instruction -> break_statement .)
    NUMBER          reduce using rule 91 (instruction -> break_statement .)
    STRING_LITERAL  reduce using rule 91 (instruction -> break_statement .)
    TRUE            reduce using rule 91 (instruction -> break_statement .)
    FALSE           reduce using rule 91 (instruction -> break_statement .)
    LPAREN          reduce using rule 91 (instruction -> break_statement .)
    RBRACE          reduce using rule 91 (instruction -> break_statement .)
    ELSE            reduce using rule 91 (instruction -> break_statement .)


state 186

    (92) instruction -> continue_statement .

    NOT             reduce using rule 92 (instruction -> continue_statement .)
    MINUS           reduce using rule 92 (instruction -> continue_statement .)
    LBRACKET        reduce using rule 92 (instruction -> continue_statement .)
    LBRACE          reduce using rule 92 (instruction -> continue_statement .)
    PRINT           reduce using rule 92 (instruction -> continue_statement .)
    IF              reduce using rule 92 (instruction -> continue_statement .)
    WHILE           reduce using rule 92 (instruction -> continue_statement .)
    FOR             reduce using rule 92 (instruction -> continue_statement .)
    RETURN          reduce using rule 92 (instruction -> continue_statement .)
    THROW           reduce using rule 92 (instruction -> continue_statement .)
    TRY             reduce using rule 92 (instruction -> continue_statement .)
    CONST           reduce using rule 92 (instruction -> continue_statement .)
    BREAK           reduce using rule 92 (instruction -> continue_statement .)
    CONTINUE        reduce using rule 92 (instruction -> continue_statement .)
    ID              reduce using rule 92 (instruction -> continue_statement .)
    INT             reduce using rule 92 (instruction -> continue_statement .)
    DOUBLE          reduce using rule 92 (instruction -> continue_statement .)
    STRING          reduce using rule 92 (instruction -> continue_statement .)
    BOOL            reduce using rule 92 (instruction -> continue_statement .)
    VOID            reduce using rule 92 (instruction -> continue_statement .)
    VAR             reduce using rule 92 (instruction -> continue_statement .)
    DYNAMIC         reduce using rule 92 (instruction -> continue_statement .)
    NUMBER          reduce using rule 92 (instruction -> continue_statement .)
    STRING_LITERAL  reduce using rule 92 (instruction -> continue_statement .)
    TRUE            reduce using rule 92 (instruction -> continue_statement .)
    FALSE           reduce using rule 92 (instruction -> continue_statement .)
    LPAREN          reduce using rule 92 (instruction -> continue_statement .)
    RBRACE          reduce using rule 92 (instruction -> continue_statement .)
    ELSE            reduce using rule 92 (instruction -> continue_statement .)


state 187

    (30) declaration_type -> ID .
    (38) generic_type -> ID . MINSIGN type_list MAXSIGN
    (74) factor -> ID .

  ! shift/reduce conflict for MINSIGN resolved as shift
    ID              reduce using rule 30 (declaration_type -> ID .)
    MINSIGN         shift and go to state 28
    SEMICOLON       reduce using rule 74 (factor -> ID .)
    NULLCOALESCING  reduce using rule 74 (factor -> ID .)
    AND             reduce using rule 74 (factor -> ID .)
    OR              reduce using rule 74 (factor -> ID .)
    EQEQ            reduce using rule 74 (factor -> ID .)
    NEQ             reduce using rule 74 (factor -> ID .)
    MAXSIGN         reduce using rule 74 (factor -> ID .)
    MINSIGNEQ       reduce using rule 74 (factor -> ID .)
    MAXSIGNEQ       reduce using rule 74 (factor -> ID .)
    IS              reduce using rule 74 (factor -> ID .)
    PLUSPLUS        reduce using rule 74 (factor -> ID .)
    MINUSMINUS      reduce using rule 74 (factor -> ID .)
    DOT             reduce using rule 74 (factor -> ID .)
    LBRACKET        reduce using rule 74 (factor -> ID .)
    LPAREN          reduce using rule 74 (factor -> ID .)
    NOT             reduce using rule 74 (factor -> ID .)
    PLUS            reduce using rule 74 (factor -> ID .)
    MINUS           reduce using rule 74 (factor -> ID .)
    TIMES           reduce using rule 74 (factor -> ID .)
    DIVIDE          reduce using rule 74 (factor -> ID .)
    INTDIV          reduce using rule 74 (factor -> ID .)
    MODULE          reduce using rule 74 (factor -> ID .)
    EQUALS          reduce using rule 74 (factor -> ID .)
    PLUSEQ          reduce using rule 74 (factor -> ID .)
    MINUSEQ         reduce using rule 74 (factor -> ID .)
    TIMESEQ         reduce using rule 74 (factor -> ID .)
    DIVEQ           reduce using rule 74 (factor -> ID .)
    NULLASSIGN      reduce using rule 74 (factor -> ID .)
    QMARK           reduce using rule 74 (factor -> ID .)

  ! MINSIGN         [ reduce using rule 74 (factor -> ID .) ]


state 188

    (112) print_statement -> PRINT . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 221


state 189

    (119) if_else -> IF . LPAREN expression RPAREN instruction
    (120) if_else -> IF . LPAREN expression RPAREN instruction ELSE instruction

    LPAREN          shift and go to state 222


state 190

    (121) while_loop -> WHILE . LPAREN expression RPAREN instruction

    LPAREN          shift and go to state 223


state 191

    (122) for_loop -> FOR . LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction

    LPAREN          shift and go to state 224


state 192

    (116) return_statement -> RETURN . expression SEMICOLON
    (117) return_statement -> RETURN . SEMICOLON
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    SEMICOLON       shift and go to state 226
    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 225
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 193

    (102) throw_statement -> THROW . expression SEMICOLON
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 227
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 194

    (93) try_statement -> TRY . block_statement catch_clauses
    (94) try_statement -> TRY . block_statement catch_clauses finally_clause
    (95) try_statement -> TRY . block_statement finally_clause
    (101) block_statement -> . LBRACE instructions RBRACE

    LBRACE          shift and go to state 229

    block_statement                shift and go to state 228

state 195

    (144) break_statement -> BREAK . SEMICOLON

    SEMICOLON       shift and go to state 230


state 196

    (145) continue_statement -> CONTINUE . SEMICOLON

    SEMICOLON       shift and go to state 231


state 197

    (27) declaration_type -> primitive_type .
    (39) type_nullable -> primitive_type . QMARK
    (71) factor -> primitive_type . DOT ID LPAREN arguments RPAREN

    ID              reduce using rule 27 (declaration_type -> primitive_type .)
    QMARK           shift and go to state 34
    DOT             shift and go to state 116


state 198

    (113) parameters -> parameters COMMA declaration_type ID .

    RPAREN          reduce using rule 113 (parameters -> parameters COMMA declaration_type ID .)
    COMMA           reduce using rule 113 (parameters -> parameters COMMA declaration_type ID .)


state 199

    (52) expression -> expression IS NOT declaration_type .

    NULLCOALESCING  reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    AND             reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    OR              reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    EQEQ            reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    NEQ             reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    MINSIGN         reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    MAXSIGN         reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    MINSIGNEQ       reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    MAXSIGNEQ       reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    IS              reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    PLUSPLUS        reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    MINUSMINUS      reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    DOT             reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    LBRACKET        reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    LPAREN          reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    NOT             reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    PLUS            reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    MINUS           reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    TIMES           reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    DIVIDE          reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    INTDIV          reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    MODULE          reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    EQUALS          reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    PLUSEQ          reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    MINUSEQ         reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    TIMESEQ         reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    DIVEQ           reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    NULLASSIGN      reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    QMARK           reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    SEMICOLON       reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    COMMA           reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    RBRACKET        reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    RPAREN          reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    COLON           reduce using rule 52 (expression -> expression IS NOT declaration_type .)
    RBRACE          reduce using rule 52 (expression -> expression IS NOT declaration_type .)


state 200

    (58) expression -> expression LBRACKET expression RBRACKET .

    NULLCOALESCING  reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    AND             reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    OR              reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    EQEQ            reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    NEQ             reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    MINSIGN         reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    MAXSIGN         reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    MINSIGNEQ       reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    MAXSIGNEQ       reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    IS              reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    PLUSPLUS        reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    MINUSMINUS      reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    DOT             reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    LBRACKET        reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    LPAREN          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    NOT             reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    PLUS            reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    MINUS           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    TIMES           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    DIVIDE          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    INTDIV          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    MODULE          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    EQUALS          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    PLUSEQ          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    MINUSEQ         reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    TIMESEQ         reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    DIVEQ           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    NULLASSIGN      reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    QMARK           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    SEMICOLON       reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    COMMA           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACKET        reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    RPAREN          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    COLON           reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)
    RBRACE          reduce using rule 58 (expression -> expression LBRACKET expression RBRACKET .)


state 201

    (59) expression -> expression LPAREN arguments RPAREN .

    NULLCOALESCING  reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    AND             reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    OR              reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    EQEQ            reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    NEQ             reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    MINSIGN         reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    MAXSIGN         reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    MINSIGNEQ       reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    MAXSIGNEQ       reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    IS              reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    PLUSPLUS        reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    MINUSMINUS      reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    DOT             reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    LBRACKET        reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    NOT             reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    PLUS            reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    MINUS           reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    TIMES           reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    INTDIV          reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    MODULE          reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    PLUSEQ          reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    MINUSEQ         reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    TIMESEQ         reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    DIVEQ           reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    NULLASSIGN      reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    QMARK           reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    SEMICOLON       reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    COMMA           reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    RBRACKET        reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    COLON           reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 59 (expression -> expression LPAREN arguments RPAREN .)


state 202

    (111) expression -> expression QMARK expression COLON . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 232
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 203

    (141) expression_list -> expression COMMA expression_list .

    RBRACKET        reduce using rule 141 (expression_list -> expression COMMA expression_list .)
    RPAREN          reduce using rule 141 (expression_list -> expression COMMA expression_list .)
    RBRACE          reduce using rule 141 (expression_list -> expression COMMA expression_list .)


state 204

    (132) set_or_map_tail -> COLON expression . map_tail
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression
    (134) map_tail -> . COMMA map_entries
    (135) map_tail -> . empty
    (146) empty -> .

    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106
    COMMA           shift and go to state 234
    RBRACE          reduce using rule 146 (empty -> .)

    map_tail                       shift and go to state 233
    empty                          shift and go to state 235

state 205

    (139) set_tail -> COMMA expression_list .

    RBRACE          reduce using rule 139 (set_tail -> COMMA expression_list .)


state 206

    (71) factor -> primitive_type DOT ID LPAREN . arguments RPAREN
    (60) arguments -> . expression_list
    (61) arguments -> . empty
    (141) expression_list -> . expression COMMA expression_list
    (142) expression_list -> . expression
    (143) expression_list -> . empty
    (146) empty -> .
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    RPAREN          reduce using rule 146 (empty -> .)
    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    primitive_type                 shift and go to state 64
    arguments                      shift and go to state 236
    expression_list                shift and go to state 141
    empty                          shift and go to state 142
    expression                     shift and go to state 110
    term                           shift and go to state 61
    factor                         shift and go to state 63

state 207

    (21) constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .

    ID              reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    INT             reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    STRING          reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    BOOL            reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    VOID            reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    VAR             reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)
    RBRACE          reduce using rule 21 (constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON .)


state 208

    (24) constructor_param_list -> constructor_param_list COMMA constructor_param .

    COMMA           reduce using rule 24 (constructor_param_list -> constructor_param_list COMMA constructor_param .)
    RPAREN          reduce using rule 24 (constructor_param_list -> constructor_param_list COMMA constructor_param .)


state 209

    (26) constructor_param -> THIS DOT ID .

    COMMA           reduce using rule 26 (constructor_param -> THIS DOT ID .)
    RPAREN          reduce using rule 26 (constructor_param -> THIS DOT ID .)


state 210

    (103) variable_declaration -> declaration_type ID .
    (104) variable_declaration -> declaration_type ID . EQUALS expression

    SEMICOLON       reduce using rule 103 (variable_declaration -> declaration_type ID .)
    EQUALS          shift and go to state 39


state 211

    (101) block_statement -> LBRACE instructions . RBRACE

    RBRACE          shift and go to state 237


state 212

    (130) set_or_map_contents -> expression . set_or_map_tail
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression
    (81) instruction -> expression . SEMICOLON
    (132) set_or_map_tail -> . COLON expression map_tail
    (133) set_or_map_tail -> . set_tail
    (139) set_tail -> . COMMA expression_list
    (140) set_tail -> . empty
    (146) empty -> .

    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106
    SEMICOLON       shift and go to state 219
    COLON           shift and go to state 160
    COMMA           shift and go to state 162
    RBRACE          reduce using rule 146 (empty -> .)

    set_or_map_tail                shift and go to state 159
    set_tail                       shift and go to state 161
    empty                          shift and go to state 163

state 213

    (131) set_or_map_contents -> empty .
    (79) instructions -> empty .

  ! reduce/reduce conflict for RBRACE resolved using rule 79 (instructions -> empty .)
    RBRACE          reduce using rule 79 (instructions -> empty .)

  ! RBRACE          [ reduce using rule 131 (set_or_map_contents -> empty .) ]


state 214

    (74) factor -> ID .
    (30) declaration_type -> ID .
    (38) generic_type -> ID . MINSIGN type_list MAXSIGN

  ! shift/reduce conflict for MINSIGN resolved as shift
    NULLCOALESCING  reduce using rule 74 (factor -> ID .)
    AND             reduce using rule 74 (factor -> ID .)
    OR              reduce using rule 74 (factor -> ID .)
    EQEQ            reduce using rule 74 (factor -> ID .)
    NEQ             reduce using rule 74 (factor -> ID .)
    MAXSIGN         reduce using rule 74 (factor -> ID .)
    MINSIGNEQ       reduce using rule 74 (factor -> ID .)
    MAXSIGNEQ       reduce using rule 74 (factor -> ID .)
    IS              reduce using rule 74 (factor -> ID .)
    PLUSPLUS        reduce using rule 74 (factor -> ID .)
    MINUSMINUS      reduce using rule 74 (factor -> ID .)
    DOT             reduce using rule 74 (factor -> ID .)
    LBRACKET        reduce using rule 74 (factor -> ID .)
    LPAREN          reduce using rule 74 (factor -> ID .)
    NOT             reduce using rule 74 (factor -> ID .)
    PLUS            reduce using rule 74 (factor -> ID .)
    MINUS           reduce using rule 74 (factor -> ID .)
    TIMES           reduce using rule 74 (factor -> ID .)
    DIVIDE          reduce using rule 74 (factor -> ID .)
    INTDIV          reduce using rule 74 (factor -> ID .)
    MODULE          reduce using rule 74 (factor -> ID .)
    EQUALS          reduce using rule 74 (factor -> ID .)
    PLUSEQ          reduce using rule 74 (factor -> ID .)
    MINUSEQ         reduce using rule 74 (factor -> ID .)
    TIMESEQ         reduce using rule 74 (factor -> ID .)
    DIVEQ           reduce using rule 74 (factor -> ID .)
    NULLASSIGN      reduce using rule 74 (factor -> ID .)
    QMARK           reduce using rule 74 (factor -> ID .)
    SEMICOLON       reduce using rule 74 (factor -> ID .)
    COLON           reduce using rule 74 (factor -> ID .)
    COMMA           reduce using rule 74 (factor -> ID .)
    RBRACE          reduce using rule 74 (factor -> ID .)
    ID              reduce using rule 30 (declaration_type -> ID .)
    MINSIGN         shift and go to state 28

  ! MINSIGN         [ reduce using rule 74 (factor -> ID .) ]


state 215

    (71) factor -> primitive_type . DOT ID LPAREN arguments RPAREN
    (27) declaration_type -> primitive_type .
    (39) type_nullable -> primitive_type . QMARK

    DOT             shift and go to state 116
    ID              reduce using rule 27 (declaration_type -> primitive_type .)
    QMARK           shift and go to state 34


state 216

    (17) function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .

    CLASS           reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    IMPORT          reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    CONST           reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    ID              reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    INT             reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    DOUBLE          reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    STRING          reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    BOOL            reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    VOID            reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    VAR             reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    DYNAMIC         reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    $end            reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)
    RBRACE          reduce using rule 17 (function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE .)


state 217

    (78) instructions -> instruction instructions .

    RBRACE          reduce using rule 78 (instructions -> instruction instructions .)


state 218

    (80) instruction -> variable_declaration SEMICOLON .

    NOT             reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    MINUS           reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    LBRACKET        reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    LBRACE          reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    PRINT           reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    IF              reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    WHILE           reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    FOR             reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    RETURN          reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    THROW           reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    TRY             reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    CONST           reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    BREAK           reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    CONTINUE        reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    ID              reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    INT             reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    DOUBLE          reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    STRING          reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    BOOL            reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    VOID            reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    VAR             reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    DYNAMIC         reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    NUMBER          reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    STRING_LITERAL  reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    TRUE            reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    FALSE           reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    LPAREN          reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    RBRACE          reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)
    ELSE            reduce using rule 80 (instruction -> variable_declaration SEMICOLON .)


state 219

    (81) instruction -> expression SEMICOLON .

    NOT             reduce using rule 81 (instruction -> expression SEMICOLON .)
    MINUS           reduce using rule 81 (instruction -> expression SEMICOLON .)
    LBRACKET        reduce using rule 81 (instruction -> expression SEMICOLON .)
    LBRACE          reduce using rule 81 (instruction -> expression SEMICOLON .)
    PRINT           reduce using rule 81 (instruction -> expression SEMICOLON .)
    IF              reduce using rule 81 (instruction -> expression SEMICOLON .)
    WHILE           reduce using rule 81 (instruction -> expression SEMICOLON .)
    FOR             reduce using rule 81 (instruction -> expression SEMICOLON .)
    RETURN          reduce using rule 81 (instruction -> expression SEMICOLON .)
    THROW           reduce using rule 81 (instruction -> expression SEMICOLON .)
    TRY             reduce using rule 81 (instruction -> expression SEMICOLON .)
    CONST           reduce using rule 81 (instruction -> expression SEMICOLON .)
    BREAK           reduce using rule 81 (instruction -> expression SEMICOLON .)
    CONTINUE        reduce using rule 81 (instruction -> expression SEMICOLON .)
    ID              reduce using rule 81 (instruction -> expression SEMICOLON .)
    INT             reduce using rule 81 (instruction -> expression SEMICOLON .)
    DOUBLE          reduce using rule 81 (instruction -> expression SEMICOLON .)
    STRING          reduce using rule 81 (instruction -> expression SEMICOLON .)
    BOOL            reduce using rule 81 (instruction -> expression SEMICOLON .)
    VOID            reduce using rule 81 (instruction -> expression SEMICOLON .)
    VAR             reduce using rule 81 (instruction -> expression SEMICOLON .)
    DYNAMIC         reduce using rule 81 (instruction -> expression SEMICOLON .)
    NUMBER          reduce using rule 81 (instruction -> expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 81 (instruction -> expression SEMICOLON .)
    TRUE            reduce using rule 81 (instruction -> expression SEMICOLON .)
    FALSE           reduce using rule 81 (instruction -> expression SEMICOLON .)
    LPAREN          reduce using rule 81 (instruction -> expression SEMICOLON .)
    RBRACE          reduce using rule 81 (instruction -> expression SEMICOLON .)
    ELSE            reduce using rule 81 (instruction -> expression SEMICOLON .)


state 220

    (90) instruction -> const_declaration SEMICOLON .

    NOT             reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    MINUS           reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    LBRACKET        reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    LBRACE          reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    PRINT           reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    IF              reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    WHILE           reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    FOR             reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    RETURN          reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    THROW           reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    TRY             reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    CONST           reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    BREAK           reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    CONTINUE        reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    ID              reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    INT             reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    DOUBLE          reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    STRING          reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    BOOL            reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    VOID            reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    VAR             reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    DYNAMIC         reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    NUMBER          reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    STRING_LITERAL  reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    TRUE            reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    FALSE           reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    LPAREN          reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    RBRACE          reduce using rule 90 (instruction -> const_declaration SEMICOLON .)
    ELSE            reduce using rule 90 (instruction -> const_declaration SEMICOLON .)


state 221

    (112) print_statement -> PRINT LPAREN . expression RPAREN SEMICOLON
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 238
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 222

    (119) if_else -> IF LPAREN . expression RPAREN instruction
    (120) if_else -> IF LPAREN . expression RPAREN instruction ELSE instruction
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 239
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 223

    (121) while_loop -> WHILE LPAREN . expression RPAREN instruction
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 240
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 224

    (122) for_loop -> FOR LPAREN . for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (123) for_initializer -> . variable_declaration
    (124) for_initializer -> . expression
    (125) for_initializer -> . empty
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (146) empty -> .
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (70) term -> . factor
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    SEMICOLON       reduce using rule 146 (empty -> .)
    ID              shift and go to state 187
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60

    for_initializer                shift and go to state 241
    variable_declaration           shift and go to state 242
    expression                     shift and go to state 243
    empty                          shift and go to state 244
    declaration_type               shift and go to state 168
    term                           shift and go to state 61
    primitive_type                 shift and go to state 197
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17
    factor                         shift and go to state 63

state 225

    (116) return_statement -> RETURN expression . SEMICOLON
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    SEMICOLON       shift and go to state 245
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 226

    (117) return_statement -> RETURN SEMICOLON .

    NOT             reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    MINUS           reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    LBRACKET        reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    LBRACE          reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    PRINT           reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    IF              reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    WHILE           reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    FOR             reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    RETURN          reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    THROW           reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    TRY             reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    CONST           reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    BREAK           reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    CONTINUE        reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    ID              reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    INT             reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    DOUBLE          reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    STRING          reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    BOOL            reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    VOID            reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    VAR             reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    DYNAMIC         reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    NUMBER          reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    STRING_LITERAL  reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    TRUE            reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    FALSE           reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    RBRACE          reduce using rule 117 (return_statement -> RETURN SEMICOLON .)
    ELSE            reduce using rule 117 (return_statement -> RETURN SEMICOLON .)


state 227

    (102) throw_statement -> THROW expression . SEMICOLON
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    SEMICOLON       shift and go to state 246
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 228

    (93) try_statement -> TRY block_statement . catch_clauses
    (94) try_statement -> TRY block_statement . catch_clauses finally_clause
    (95) try_statement -> TRY block_statement . finally_clause
    (96) catch_clauses -> . catch_clauses catch_clause
    (97) catch_clauses -> . catch_clause
    (100) finally_clause -> . FINALLY block_statement
    (98) catch_clause -> . CATCH LPAREN ID RPAREN block_statement
    (99) catch_clause -> . CATCH LPAREN ID ID RPAREN block_statement

    FINALLY         shift and go to state 250
    CATCH           shift and go to state 251

    catch_clauses                  shift and go to state 247
    finally_clause                 shift and go to state 248
    catch_clause                   shift and go to state 249

state 229

    (101) block_statement -> LBRACE . instructions RBRACE
    (78) instructions -> . instruction instructions
    (79) instructions -> . empty
    (80) instruction -> . variable_declaration SEMICOLON
    (81) instruction -> . expression SEMICOLON
    (82) instruction -> . print_statement
    (83) instruction -> . if_else
    (84) instruction -> . while_loop
    (85) instruction -> . for_loop
    (86) instruction -> . return_statement
    (87) instruction -> . block_statement
    (88) instruction -> . throw_statement
    (89) instruction -> . try_statement
    (90) instruction -> . const_declaration SEMICOLON
    (91) instruction -> . break_statement
    (92) instruction -> . continue_statement
    (146) empty -> .
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (112) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (119) if_else -> . IF LPAREN expression RPAREN instruction
    (120) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (121) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (122) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (116) return_statement -> . RETURN expression SEMICOLON
    (117) return_statement -> . RETURN SEMICOLON
    (101) block_statement -> . LBRACE instructions RBRACE
    (102) throw_statement -> . THROW expression SEMICOLON
    (93) try_statement -> . TRY block_statement catch_clauses
    (94) try_statement -> . TRY block_statement catch_clauses finally_clause
    (95) try_statement -> . TRY block_statement finally_clause
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (144) break_statement -> . BREAK SEMICOLON
    (145) continue_statement -> . CONTINUE SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (70) term -> . factor
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN

    RBRACE          reduce using rule 146 (empty -> .)
    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 169
    PRINT           shift and go to state 188
    IF              shift and go to state 189
    WHILE           shift and go to state 190
    FOR             shift and go to state 191
    RETURN          shift and go to state 192
    THROW           shift and go to state 193
    TRY             shift and go to state 194
    CONST           shift and go to state 14
    BREAK           shift and go to state 195
    CONTINUE        shift and go to state 196
    ID              shift and go to state 187
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60

    instructions                   shift and go to state 211
    instruction                    shift and go to state 172
    empty                          shift and go to state 173
    variable_declaration           shift and go to state 174
    expression                     shift and go to state 175
    print_statement                shift and go to state 176
    if_else                        shift and go to state 177
    while_loop                     shift and go to state 178
    for_loop                       shift and go to state 179
    return_statement               shift and go to state 180
    block_statement                shift and go to state 181
    throw_statement                shift and go to state 182
    try_statement                  shift and go to state 183
    const_declaration              shift and go to state 184
    break_statement                shift and go to state 185
    continue_statement             shift and go to state 186
    declaration_type               shift and go to state 168
    term                           shift and go to state 61
    primitive_type                 shift and go to state 197
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17
    factor                         shift and go to state 63

state 230

    (144) break_statement -> BREAK SEMICOLON .

    NOT             reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    MINUS           reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    LBRACKET        reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    LBRACE          reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    PRINT           reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    IF              reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    WHILE           reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    FOR             reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    RETURN          reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    THROW           reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    TRY             reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    CONST           reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    BREAK           reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    CONTINUE        reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    ID              reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    INT             reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    DOUBLE          reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    STRING          reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    BOOL            reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    VOID            reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    VAR             reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    DYNAMIC         reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    NUMBER          reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    STRING_LITERAL  reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    TRUE            reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    FALSE           reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    LPAREN          reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    RBRACE          reduce using rule 144 (break_statement -> BREAK SEMICOLON .)
    ELSE            reduce using rule 144 (break_statement -> BREAK SEMICOLON .)


state 231

    (145) continue_statement -> CONTINUE SEMICOLON .

    NOT             reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    MINUS           reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    LBRACKET        reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    LBRACE          reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    PRINT           reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    IF              reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    WHILE           reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    FOR             reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    RETURN          reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    THROW           reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    TRY             reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    CONST           reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    BREAK           reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    CONTINUE        reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    ID              reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    INT             reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    DOUBLE          reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    STRING          reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    BOOL            reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    VOID            reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    VAR             reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    DYNAMIC         reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    NUMBER          reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    STRING_LITERAL  reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    TRUE            reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    FALSE           reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    LPAREN          reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    RBRACE          reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)
    ELSE            reduce using rule 145 (continue_statement -> CONTINUE SEMICOLON .)


state 232

    (111) expression -> expression QMARK expression COLON expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

  ! shift/reduce conflict for NULLCOALESCING resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for EQEQ resolved as shift
  ! shift/reduce conflict for NEQ resolved as shift
  ! shift/reduce conflict for MINSIGN resolved as shift
  ! shift/reduce conflict for MAXSIGN resolved as shift
  ! shift/reduce conflict for MINSIGNEQ resolved as shift
  ! shift/reduce conflict for MAXSIGNEQ resolved as shift
  ! shift/reduce conflict for IS resolved as shift
  ! shift/reduce conflict for PLUSPLUS resolved as shift
  ! shift/reduce conflict for MINUSMINUS resolved as shift
  ! shift/reduce conflict for DOT resolved as shift
  ! shift/reduce conflict for LBRACKET resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for INTDIV resolved as shift
  ! shift/reduce conflict for MODULE resolved as shift
  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for PLUSEQ resolved as shift
  ! shift/reduce conflict for MINUSEQ resolved as shift
  ! shift/reduce conflict for TIMESEQ resolved as shift
  ! shift/reduce conflict for DIVEQ resolved as shift
  ! shift/reduce conflict for NULLASSIGN resolved as shift
  ! shift/reduce conflict for QMARK resolved as shift
    SEMICOLON       reduce using rule 111 (expression -> expression QMARK expression COLON expression .)
    COMMA           reduce using rule 111 (expression -> expression QMARK expression COLON expression .)
    RBRACKET        reduce using rule 111 (expression -> expression QMARK expression COLON expression .)
    RPAREN          reduce using rule 111 (expression -> expression QMARK expression COLON expression .)
    COLON           reduce using rule 111 (expression -> expression QMARK expression COLON expression .)
    RBRACE          reduce using rule 111 (expression -> expression QMARK expression COLON expression .)
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106

  ! NULLCOALESCING  [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! AND             [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! OR              [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! EQEQ            [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! NEQ             [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! MINSIGN         [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! MAXSIGN         [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! MINSIGNEQ       [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! MAXSIGNEQ       [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! IS              [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! PLUSPLUS        [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! MINUSMINUS      [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! DOT             [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! LBRACKET        [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! LPAREN          [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! NOT             [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! PLUS            [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! MINUS           [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! TIMES           [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! DIVIDE          [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! INTDIV          [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! MODULE          [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! EQUALS          [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! PLUSEQ          [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! MINUSEQ         [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! TIMESEQ         [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! DIVEQ           [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! NULLASSIGN      [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]
  ! QMARK           [ reduce using rule 111 (expression -> expression QMARK expression COLON expression .) ]


state 233

    (132) set_or_map_tail -> COLON expression map_tail .

    RBRACE          reduce using rule 132 (set_or_map_tail -> COLON expression map_tail .)


state 234

    (134) map_tail -> COMMA . map_entries
    (136) map_entries -> . map_entries COMMA map_entry
    (137) map_entries -> . map_entry
    (138) map_entry -> . expression COLON expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    map_entries                    shift and go to state 252
    map_entry                      shift and go to state 253
    expression                     shift and go to state 254
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 235

    (135) map_tail -> empty .

    RBRACE          reduce using rule 135 (map_tail -> empty .)


state 236

    (71) factor -> primitive_type DOT ID LPAREN arguments . RPAREN

    RPAREN          shift and go to state 255


state 237

    (101) block_statement -> LBRACE instructions RBRACE .

    NOT             reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    MINUS           reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    LBRACKET        reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    LBRACE          reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    PRINT           reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    IF              reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    WHILE           reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    FOR             reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    RETURN          reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    THROW           reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    TRY             reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    CONST           reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    BREAK           reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    CONTINUE        reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    ID              reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    INT             reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    DOUBLE          reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    STRING          reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    BOOL            reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    VOID            reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    VAR             reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    DYNAMIC         reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    NUMBER          reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    STRING_LITERAL  reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    TRUE            reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    FALSE           reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    LPAREN          reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    RBRACE          reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    FINALLY         reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    CATCH           reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)
    ELSE            reduce using rule 101 (block_statement -> LBRACE instructions RBRACE .)


state 238

    (112) print_statement -> PRINT LPAREN expression . RPAREN SEMICOLON
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 256
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 239

    (119) if_else -> IF LPAREN expression . RPAREN instruction
    (120) if_else -> IF LPAREN expression . RPAREN instruction ELSE instruction
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 257
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 240

    (121) while_loop -> WHILE LPAREN expression . RPAREN instruction
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    RPAREN          shift and go to state 258
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 241

    (122) for_loop -> FOR LPAREN for_initializer . SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction

    SEMICOLON       shift and go to state 259


state 242

    (123) for_initializer -> variable_declaration .

    SEMICOLON       reduce using rule 123 (for_initializer -> variable_declaration .)


state 243

    (124) for_initializer -> expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 124 (for_initializer -> expression .)
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 244

    (125) for_initializer -> empty .

    SEMICOLON       reduce using rule 125 (for_initializer -> empty .)


state 245

    (116) return_statement -> RETURN expression SEMICOLON .

    NOT             reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    MINUS           reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    LBRACKET        reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    LBRACE          reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    IF              reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    FOR             reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    THROW           reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    TRY             reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    CONST           reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    BREAK           reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    CONTINUE        reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    ID              reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    INT             reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    DOUBLE          reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    STRING          reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    BOOL            reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    VOID            reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    VAR             reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    DYNAMIC         reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    NUMBER          reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    TRUE            reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    FALSE           reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    RBRACE          reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)
    ELSE            reduce using rule 116 (return_statement -> RETURN expression SEMICOLON .)


state 246

    (102) throw_statement -> THROW expression SEMICOLON .

    NOT             reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    MINUS           reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    LBRACKET        reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    LBRACE          reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    PRINT           reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    IF              reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    WHILE           reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    FOR             reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    RETURN          reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    THROW           reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    TRY             reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    CONST           reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    BREAK           reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    CONTINUE        reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    ID              reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    INT             reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    DOUBLE          reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    STRING          reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    BOOL            reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    VOID            reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    VAR             reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    DYNAMIC         reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    NUMBER          reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    STRING_LITERAL  reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    TRUE            reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    FALSE           reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    LPAREN          reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    RBRACE          reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)
    ELSE            reduce using rule 102 (throw_statement -> THROW expression SEMICOLON .)


state 247

    (93) try_statement -> TRY block_statement catch_clauses .
    (94) try_statement -> TRY block_statement catch_clauses . finally_clause
    (96) catch_clauses -> catch_clauses . catch_clause
    (100) finally_clause -> . FINALLY block_statement
    (98) catch_clause -> . CATCH LPAREN ID RPAREN block_statement
    (99) catch_clause -> . CATCH LPAREN ID ID RPAREN block_statement

    NOT             reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    MINUS           reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    LBRACKET        reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    LBRACE          reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    PRINT           reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    IF              reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    WHILE           reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    FOR             reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    RETURN          reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    THROW           reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    TRY             reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    CONST           reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    BREAK           reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    CONTINUE        reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    ID              reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    INT             reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    DOUBLE          reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    STRING          reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    BOOL            reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    VOID            reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    VAR             reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    DYNAMIC         reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    NUMBER          reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    STRING_LITERAL  reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    TRUE            reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    FALSE           reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    LPAREN          reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    RBRACE          reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    ELSE            reduce using rule 93 (try_statement -> TRY block_statement catch_clauses .)
    FINALLY         shift and go to state 250
    CATCH           shift and go to state 251

    finally_clause                 shift and go to state 260
    catch_clause                   shift and go to state 261

state 248

    (95) try_statement -> TRY block_statement finally_clause .

    NOT             reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    MINUS           reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    LBRACKET        reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    LBRACE          reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    PRINT           reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    IF              reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    WHILE           reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    FOR             reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    RETURN          reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    THROW           reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    TRY             reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    CONST           reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    BREAK           reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    CONTINUE        reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    ID              reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    INT             reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    DOUBLE          reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    STRING          reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    BOOL            reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    VOID            reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    VAR             reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    DYNAMIC         reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    NUMBER          reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    STRING_LITERAL  reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    TRUE            reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    FALSE           reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    LPAREN          reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    RBRACE          reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)
    ELSE            reduce using rule 95 (try_statement -> TRY block_statement finally_clause .)


state 249

    (97) catch_clauses -> catch_clause .

    FINALLY         reduce using rule 97 (catch_clauses -> catch_clause .)
    CATCH           reduce using rule 97 (catch_clauses -> catch_clause .)
    NOT             reduce using rule 97 (catch_clauses -> catch_clause .)
    MINUS           reduce using rule 97 (catch_clauses -> catch_clause .)
    LBRACKET        reduce using rule 97 (catch_clauses -> catch_clause .)
    LBRACE          reduce using rule 97 (catch_clauses -> catch_clause .)
    PRINT           reduce using rule 97 (catch_clauses -> catch_clause .)
    IF              reduce using rule 97 (catch_clauses -> catch_clause .)
    WHILE           reduce using rule 97 (catch_clauses -> catch_clause .)
    FOR             reduce using rule 97 (catch_clauses -> catch_clause .)
    RETURN          reduce using rule 97 (catch_clauses -> catch_clause .)
    THROW           reduce using rule 97 (catch_clauses -> catch_clause .)
    TRY             reduce using rule 97 (catch_clauses -> catch_clause .)
    CONST           reduce using rule 97 (catch_clauses -> catch_clause .)
    BREAK           reduce using rule 97 (catch_clauses -> catch_clause .)
    CONTINUE        reduce using rule 97 (catch_clauses -> catch_clause .)
    ID              reduce using rule 97 (catch_clauses -> catch_clause .)
    INT             reduce using rule 97 (catch_clauses -> catch_clause .)
    DOUBLE          reduce using rule 97 (catch_clauses -> catch_clause .)
    STRING          reduce using rule 97 (catch_clauses -> catch_clause .)
    BOOL            reduce using rule 97 (catch_clauses -> catch_clause .)
    VOID            reduce using rule 97 (catch_clauses -> catch_clause .)
    VAR             reduce using rule 97 (catch_clauses -> catch_clause .)
    DYNAMIC         reduce using rule 97 (catch_clauses -> catch_clause .)
    NUMBER          reduce using rule 97 (catch_clauses -> catch_clause .)
    STRING_LITERAL  reduce using rule 97 (catch_clauses -> catch_clause .)
    TRUE            reduce using rule 97 (catch_clauses -> catch_clause .)
    FALSE           reduce using rule 97 (catch_clauses -> catch_clause .)
    LPAREN          reduce using rule 97 (catch_clauses -> catch_clause .)
    RBRACE          reduce using rule 97 (catch_clauses -> catch_clause .)
    ELSE            reduce using rule 97 (catch_clauses -> catch_clause .)


state 250

    (100) finally_clause -> FINALLY . block_statement
    (101) block_statement -> . LBRACE instructions RBRACE

    LBRACE          shift and go to state 229

    block_statement                shift and go to state 262

state 251

    (98) catch_clause -> CATCH . LPAREN ID RPAREN block_statement
    (99) catch_clause -> CATCH . LPAREN ID ID RPAREN block_statement

    LPAREN          shift and go to state 263


state 252

    (134) map_tail -> COMMA map_entries .
    (136) map_entries -> map_entries . COMMA map_entry

    RBRACE          reduce using rule 134 (map_tail -> COMMA map_entries .)
    COMMA           shift and go to state 264


state 253

    (137) map_entries -> map_entry .

    COMMA           reduce using rule 137 (map_entries -> map_entry .)
    RBRACE          reduce using rule 137 (map_entries -> map_entry .)


state 254

    (138) map_entry -> expression . COLON expression
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    COLON           shift and go to state 265
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 255

    (71) factor -> primitive_type DOT ID LPAREN arguments RPAREN .

    NULLCOALESCING  reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    AND             reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    OR              reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    EQEQ            reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    NEQ             reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINSIGN         reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MAXSIGN         reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINSIGNEQ       reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MAXSIGNEQ       reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    IS              reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    PLUSPLUS        reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINUSMINUS      reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    DOT             reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    LBRACKET        reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    LPAREN          reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    NOT             reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    PLUS            reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINUS           reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    TIMES           reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    DIVIDE          reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    INTDIV          reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MODULE          reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    EQUALS          reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    PLUSEQ          reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    MINUSEQ         reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    TIMESEQ         reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    DIVEQ           reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    NULLASSIGN      reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    QMARK           reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    SEMICOLON       reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    COMMA           reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    RBRACKET        reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    RPAREN          reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    COLON           reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)
    RBRACE          reduce using rule 71 (factor -> primitive_type DOT ID LPAREN arguments RPAREN .)


state 256

    (112) print_statement -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 266


state 257

    (119) if_else -> IF LPAREN expression RPAREN . instruction
    (120) if_else -> IF LPAREN expression RPAREN . instruction ELSE instruction
    (80) instruction -> . variable_declaration SEMICOLON
    (81) instruction -> . expression SEMICOLON
    (82) instruction -> . print_statement
    (83) instruction -> . if_else
    (84) instruction -> . while_loop
    (85) instruction -> . for_loop
    (86) instruction -> . return_statement
    (87) instruction -> . block_statement
    (88) instruction -> . throw_statement
    (89) instruction -> . try_statement
    (90) instruction -> . const_declaration SEMICOLON
    (91) instruction -> . break_statement
    (92) instruction -> . continue_statement
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (112) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (119) if_else -> . IF LPAREN expression RPAREN instruction
    (120) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (121) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (122) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (116) return_statement -> . RETURN expression SEMICOLON
    (117) return_statement -> . RETURN SEMICOLON
    (101) block_statement -> . LBRACE instructions RBRACE
    (102) throw_statement -> . THROW expression SEMICOLON
    (93) try_statement -> . TRY block_statement catch_clauses
    (94) try_statement -> . TRY block_statement catch_clauses finally_clause
    (95) try_statement -> . TRY block_statement finally_clause
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (144) break_statement -> . BREAK SEMICOLON
    (145) continue_statement -> . CONTINUE SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (70) term -> . factor
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 169
    PRINT           shift and go to state 188
    IF              shift and go to state 189
    WHILE           shift and go to state 190
    FOR             shift and go to state 191
    RETURN          shift and go to state 192
    THROW           shift and go to state 193
    TRY             shift and go to state 194
    CONST           shift and go to state 14
    BREAK           shift and go to state 195
    CONTINUE        shift and go to state 196
    ID              shift and go to state 187
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60

    expression                     shift and go to state 175
    instruction                    shift and go to state 267
    variable_declaration           shift and go to state 174
    print_statement                shift and go to state 176
    if_else                        shift and go to state 177
    while_loop                     shift and go to state 178
    for_loop                       shift and go to state 179
    return_statement               shift and go to state 180
    block_statement                shift and go to state 181
    throw_statement                shift and go to state 182
    try_statement                  shift and go to state 183
    const_declaration              shift and go to state 184
    break_statement                shift and go to state 185
    continue_statement             shift and go to state 186
    declaration_type               shift and go to state 168
    term                           shift and go to state 61
    primitive_type                 shift and go to state 197
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17
    factor                         shift and go to state 63

state 258

    (121) while_loop -> WHILE LPAREN expression RPAREN . instruction
    (80) instruction -> . variable_declaration SEMICOLON
    (81) instruction -> . expression SEMICOLON
    (82) instruction -> . print_statement
    (83) instruction -> . if_else
    (84) instruction -> . while_loop
    (85) instruction -> . for_loop
    (86) instruction -> . return_statement
    (87) instruction -> . block_statement
    (88) instruction -> . throw_statement
    (89) instruction -> . try_statement
    (90) instruction -> . const_declaration SEMICOLON
    (91) instruction -> . break_statement
    (92) instruction -> . continue_statement
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (112) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (119) if_else -> . IF LPAREN expression RPAREN instruction
    (120) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (121) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (122) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (116) return_statement -> . RETURN expression SEMICOLON
    (117) return_statement -> . RETURN SEMICOLON
    (101) block_statement -> . LBRACE instructions RBRACE
    (102) throw_statement -> . THROW expression SEMICOLON
    (93) try_statement -> . TRY block_statement catch_clauses
    (94) try_statement -> . TRY block_statement catch_clauses finally_clause
    (95) try_statement -> . TRY block_statement finally_clause
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (144) break_statement -> . BREAK SEMICOLON
    (145) continue_statement -> . CONTINUE SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (70) term -> . factor
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 169
    PRINT           shift and go to state 188
    IF              shift and go to state 189
    WHILE           shift and go to state 190
    FOR             shift and go to state 191
    RETURN          shift and go to state 192
    THROW           shift and go to state 193
    TRY             shift and go to state 194
    CONST           shift and go to state 14
    BREAK           shift and go to state 195
    CONTINUE        shift and go to state 196
    ID              shift and go to state 187
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60

    expression                     shift and go to state 175
    instruction                    shift and go to state 268
    variable_declaration           shift and go to state 174
    print_statement                shift and go to state 176
    if_else                        shift and go to state 177
    while_loop                     shift and go to state 178
    for_loop                       shift and go to state 179
    return_statement               shift and go to state 180
    block_statement                shift and go to state 181
    throw_statement                shift and go to state 182
    try_statement                  shift and go to state 183
    const_declaration              shift and go to state 184
    break_statement                shift and go to state 185
    continue_statement             shift and go to state 186
    declaration_type               shift and go to state 168
    term                           shift and go to state 61
    primitive_type                 shift and go to state 197
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17
    factor                         shift and go to state 63

state 259

    (122) for_loop -> FOR LPAREN for_initializer SEMICOLON . expression_opt SEMICOLON expression_opt RPAREN instruction
    (126) expression_opt -> . expression
    (127) expression_opt -> . empty
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (146) empty -> .
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    SEMICOLON       reduce using rule 146 (empty -> .)
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression_opt                 shift and go to state 269
    expression                     shift and go to state 270
    empty                          shift and go to state 271
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 260

    (94) try_statement -> TRY block_statement catch_clauses finally_clause .

    NOT             reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    MINUS           reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    LBRACKET        reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    LBRACE          reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    PRINT           reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    IF              reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    WHILE           reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    FOR             reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    RETURN          reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    THROW           reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    TRY             reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    CONST           reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    BREAK           reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    CONTINUE        reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    ID              reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    INT             reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    DOUBLE          reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    STRING          reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    BOOL            reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    VOID            reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    VAR             reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    DYNAMIC         reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    NUMBER          reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    STRING_LITERAL  reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    TRUE            reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    FALSE           reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    LPAREN          reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    RBRACE          reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)
    ELSE            reduce using rule 94 (try_statement -> TRY block_statement catch_clauses finally_clause .)


state 261

    (96) catch_clauses -> catch_clauses catch_clause .

    FINALLY         reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    CATCH           reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    NOT             reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    MINUS           reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    LBRACKET        reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    LBRACE          reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    PRINT           reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    IF              reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    WHILE           reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    FOR             reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    RETURN          reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    THROW           reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    TRY             reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    CONST           reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    BREAK           reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    CONTINUE        reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    ID              reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    INT             reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    DOUBLE          reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    STRING          reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    BOOL            reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    VOID            reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    VAR             reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    DYNAMIC         reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    NUMBER          reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    STRING_LITERAL  reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    TRUE            reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    FALSE           reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    LPAREN          reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    RBRACE          reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)
    ELSE            reduce using rule 96 (catch_clauses -> catch_clauses catch_clause .)


state 262

    (100) finally_clause -> FINALLY block_statement .

    NOT             reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    MINUS           reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    LBRACKET        reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    LBRACE          reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    PRINT           reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    IF              reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    WHILE           reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    FOR             reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    RETURN          reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    THROW           reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    TRY             reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    CONST           reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    BREAK           reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    CONTINUE        reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    ID              reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    INT             reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    DOUBLE          reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    STRING          reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    BOOL            reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    VOID            reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    VAR             reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    DYNAMIC         reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    NUMBER          reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    STRING_LITERAL  reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    TRUE            reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    FALSE           reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    LPAREN          reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    RBRACE          reduce using rule 100 (finally_clause -> FINALLY block_statement .)
    ELSE            reduce using rule 100 (finally_clause -> FINALLY block_statement .)


state 263

    (98) catch_clause -> CATCH LPAREN . ID RPAREN block_statement
    (99) catch_clause -> CATCH LPAREN . ID ID RPAREN block_statement

    ID              shift and go to state 272


state 264

    (136) map_entries -> map_entries COMMA . map_entry
    (138) map_entry -> . expression COLON expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    map_entry                      shift and go to state 273
    expression                     shift and go to state 254
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 265

    (138) map_entry -> expression COLON . expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression                     shift and go to state 274
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 266

    (112) print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .

    NOT             reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    MINUS           reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LBRACKET        reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RETURN          reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    THROW           reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    TRY             reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    CONST           reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    BREAK           reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    CONTINUE        reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DOUBLE          reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING          reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    BOOL            reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VOID            reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    VAR             reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    DYNAMIC         reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    NUMBER          reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    STRING_LITERAL  reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    TRUE            reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    FALSE           reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    LPAREN          reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)
    ELSE            reduce using rule 112 (print_statement -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 267

    (119) if_else -> IF LPAREN expression RPAREN instruction .
    (120) if_else -> IF LPAREN expression RPAREN instruction . ELSE instruction

  ! shift/reduce conflict for ELSE resolved as shift
    NOT             reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    MINUS           reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    LBRACKET        reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    LBRACE          reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    PRINT           reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    IF              reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    WHILE           reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    FOR             reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    RETURN          reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    THROW           reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    TRY             reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    CONST           reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    BREAK           reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    CONTINUE        reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    ID              reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    INT             reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    DOUBLE          reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    STRING          reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    BOOL            reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    VOID            reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    VAR             reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    DYNAMIC         reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    NUMBER          reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    STRING_LITERAL  reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    TRUE            reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    FALSE           reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    LPAREN          reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    RBRACE          reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .)
    ELSE            shift and go to state 275

  ! ELSE            [ reduce using rule 119 (if_else -> IF LPAREN expression RPAREN instruction .) ]


state 268

    (121) while_loop -> WHILE LPAREN expression RPAREN instruction .

    NOT             reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    MINUS           reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    LBRACKET        reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    LBRACE          reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    PRINT           reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    IF              reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    WHILE           reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    FOR             reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    RETURN          reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    THROW           reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    TRY             reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    CONST           reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    BREAK           reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    CONTINUE        reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    ID              reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    INT             reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    DOUBLE          reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    STRING          reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    BOOL            reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    VOID            reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    VAR             reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    DYNAMIC         reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    NUMBER          reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    STRING_LITERAL  reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    TRUE            reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    FALSE           reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    LPAREN          reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    RBRACE          reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)
    ELSE            reduce using rule 121 (while_loop -> WHILE LPAREN expression RPAREN instruction .)


state 269

    (122) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt . SEMICOLON expression_opt RPAREN instruction

    SEMICOLON       shift and go to state 276


state 270

    (126) expression_opt -> expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    SEMICOLON       reduce using rule 126 (expression_opt -> expression .)
    RPAREN          reduce using rule 126 (expression_opt -> expression .)
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 271

    (127) expression_opt -> empty .

    SEMICOLON       reduce using rule 127 (expression_opt -> empty .)
    RPAREN          reduce using rule 127 (expression_opt -> empty .)


state 272

    (98) catch_clause -> CATCH LPAREN ID . RPAREN block_statement
    (99) catch_clause -> CATCH LPAREN ID . ID RPAREN block_statement

    RPAREN          shift and go to state 278
    ID              shift and go to state 277


state 273

    (136) map_entries -> map_entries COMMA map_entry .

    COMMA           reduce using rule 136 (map_entries -> map_entries COMMA map_entry .)
    RBRACE          reduce using rule 136 (map_entries -> map_entries COMMA map_entry .)


state 274

    (138) map_entry -> expression COLON expression .
    (40) expression -> expression . NULLCOALESCING expression
    (43) expression -> expression . AND expression
    (44) expression -> expression . OR expression
    (45) expression -> expression . EQEQ expression
    (46) expression -> expression . NEQ expression
    (47) expression -> expression . MINSIGN expression
    (48) expression -> expression . MAXSIGN expression
    (49) expression -> expression . MINSIGNEQ expression
    (50) expression -> expression . MAXSIGNEQ expression
    (51) expression -> expression . IS declaration_type
    (52) expression -> expression . IS NOT declaration_type
    (55) expression -> expression . PLUSPLUS
    (56) expression -> expression . MINUSMINUS
    (57) expression -> expression . DOT ID
    (58) expression -> expression . LBRACKET expression RBRACKET
    (59) expression -> expression . LPAREN arguments RPAREN
    (62) expression -> expression . NOT
    (63) expression -> expression . PLUS expression
    (64) expression -> expression . MINUS expression
    (65) expression -> expression . TIMES expression
    (66) expression -> expression . DIVIDE expression
    (67) expression -> expression . INTDIV expression
    (68) expression -> expression . MODULE expression
    (105) expression -> expression . EQUALS expression
    (106) expression -> expression . PLUSEQ expression
    (107) expression -> expression . MINUSEQ expression
    (108) expression -> expression . TIMESEQ expression
    (109) expression -> expression . DIVEQ expression
    (110) expression -> expression . NULLASSIGN expression
    (111) expression -> expression . QMARK expression COLON expression

    COMMA           reduce using rule 138 (map_entry -> expression COLON expression .)
    RBRACE          reduce using rule 138 (map_entry -> expression COLON expression .)
    NULLCOALESCING  shift and go to state 79
    AND             shift and go to state 80
    OR              shift and go to state 81
    EQEQ            shift and go to state 82
    NEQ             shift and go to state 83
    MINSIGN         shift and go to state 84
    MAXSIGN         shift and go to state 85
    MINSIGNEQ       shift and go to state 86
    MAXSIGNEQ       shift and go to state 87
    IS              shift and go to state 88
    PLUSPLUS        shift and go to state 90
    MINUSMINUS      shift and go to state 91
    DOT             shift and go to state 92
    LBRACKET        shift and go to state 93
    LPAREN          shift and go to state 94
    NOT             shift and go to state 89
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    TIMES           shift and go to state 97
    DIVIDE          shift and go to state 98
    INTDIV          shift and go to state 99
    MODULE          shift and go to state 100
    EQUALS          shift and go to state 78
    PLUSEQ          shift and go to state 101
    MINUSEQ         shift and go to state 102
    TIMESEQ         shift and go to state 103
    DIVEQ           shift and go to state 104
    NULLASSIGN      shift and go to state 105
    QMARK           shift and go to state 106


state 275

    (120) if_else -> IF LPAREN expression RPAREN instruction ELSE . instruction
    (80) instruction -> . variable_declaration SEMICOLON
    (81) instruction -> . expression SEMICOLON
    (82) instruction -> . print_statement
    (83) instruction -> . if_else
    (84) instruction -> . while_loop
    (85) instruction -> . for_loop
    (86) instruction -> . return_statement
    (87) instruction -> . block_statement
    (88) instruction -> . throw_statement
    (89) instruction -> . try_statement
    (90) instruction -> . const_declaration SEMICOLON
    (91) instruction -> . break_statement
    (92) instruction -> . continue_statement
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (112) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (119) if_else -> . IF LPAREN expression RPAREN instruction
    (120) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (121) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (122) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (116) return_statement -> . RETURN expression SEMICOLON
    (117) return_statement -> . RETURN SEMICOLON
    (101) block_statement -> . LBRACE instructions RBRACE
    (102) throw_statement -> . THROW expression SEMICOLON
    (93) try_statement -> . TRY block_statement catch_clauses
    (94) try_statement -> . TRY block_statement catch_clauses finally_clause
    (95) try_statement -> . TRY block_statement finally_clause
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (144) break_statement -> . BREAK SEMICOLON
    (145) continue_statement -> . CONTINUE SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (70) term -> . factor
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 169
    PRINT           shift and go to state 188
    IF              shift and go to state 189
    WHILE           shift and go to state 190
    FOR             shift and go to state 191
    RETURN          shift and go to state 192
    THROW           shift and go to state 193
    TRY             shift and go to state 194
    CONST           shift and go to state 14
    BREAK           shift and go to state 195
    CONTINUE        shift and go to state 196
    ID              shift and go to state 187
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60

    expression                     shift and go to state 175
    instruction                    shift and go to state 279
    variable_declaration           shift and go to state 174
    print_statement                shift and go to state 176
    if_else                        shift and go to state 177
    while_loop                     shift and go to state 178
    for_loop                       shift and go to state 179
    return_statement               shift and go to state 180
    block_statement                shift and go to state 181
    throw_statement                shift and go to state 182
    try_statement                  shift and go to state 183
    const_declaration              shift and go to state 184
    break_statement                shift and go to state 185
    continue_statement             shift and go to state 186
    declaration_type               shift and go to state 168
    term                           shift and go to state 61
    primitive_type                 shift and go to state 197
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17
    factor                         shift and go to state 63

state 276

    (122) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON . expression_opt RPAREN instruction
    (126) expression_opt -> . expression
    (127) expression_opt -> . empty
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (146) empty -> .
    (70) term -> . factor
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 62
    RPAREN          reduce using rule 146 (empty -> .)
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    ID              shift and go to state 55
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24

    expression_opt                 shift and go to state 280
    expression                     shift and go to state 270
    empty                          shift and go to state 271
    term                           shift and go to state 61
    factor                         shift and go to state 63
    primitive_type                 shift and go to state 64

state 277

    (99) catch_clause -> CATCH LPAREN ID ID . RPAREN block_statement

    RPAREN          shift and go to state 281


state 278

    (98) catch_clause -> CATCH LPAREN ID RPAREN . block_statement
    (101) block_statement -> . LBRACE instructions RBRACE

    LBRACE          shift and go to state 229

    block_statement                shift and go to state 282

state 279

    (120) if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .

    NOT             reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    MINUS           reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    LBRACKET        reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    LBRACE          reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    PRINT           reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    IF              reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    WHILE           reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    FOR             reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    RETURN          reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    THROW           reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    TRY             reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    CONST           reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    BREAK           reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    CONTINUE        reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    ID              reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    INT             reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    DOUBLE          reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    STRING          reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    BOOL            reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    VOID            reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    VAR             reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    DYNAMIC         reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    NUMBER          reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    STRING_LITERAL  reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    TRUE            reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    FALSE           reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    LPAREN          reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    RBRACE          reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)
    ELSE            reduce using rule 120 (if_else -> IF LPAREN expression RPAREN instruction ELSE instruction .)


state 280

    (122) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt . RPAREN instruction

    RPAREN          shift and go to state 283


state 281

    (99) catch_clause -> CATCH LPAREN ID ID RPAREN . block_statement
    (101) block_statement -> . LBRACE instructions RBRACE

    LBRACE          shift and go to state 229

    block_statement                shift and go to state 284

state 282

    (98) catch_clause -> CATCH LPAREN ID RPAREN block_statement .

    FINALLY         reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    CATCH           reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    NOT             reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    MINUS           reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    LBRACKET        reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    LBRACE          reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    PRINT           reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    IF              reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    WHILE           reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    FOR             reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    RETURN          reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    THROW           reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    TRY             reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    CONST           reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    BREAK           reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    CONTINUE        reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    ID              reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    INT             reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    DOUBLE          reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    STRING          reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    BOOL            reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    VOID            reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    VAR             reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    DYNAMIC         reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    NUMBER          reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    STRING_LITERAL  reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    TRUE            reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    FALSE           reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    LPAREN          reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    RBRACE          reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)
    ELSE            reduce using rule 98 (catch_clause -> CATCH LPAREN ID RPAREN block_statement .)


state 283

    (122) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN . instruction
    (80) instruction -> . variable_declaration SEMICOLON
    (81) instruction -> . expression SEMICOLON
    (82) instruction -> . print_statement
    (83) instruction -> . if_else
    (84) instruction -> . while_loop
    (85) instruction -> . for_loop
    (86) instruction -> . return_statement
    (87) instruction -> . block_statement
    (88) instruction -> . throw_statement
    (89) instruction -> . try_statement
    (90) instruction -> . const_declaration SEMICOLON
    (91) instruction -> . break_statement
    (92) instruction -> . continue_statement
    (103) variable_declaration -> . declaration_type ID
    (104) variable_declaration -> . declaration_type ID EQUALS expression
    (40) expression -> . expression NULLCOALESCING expression
    (43) expression -> . expression AND expression
    (44) expression -> . expression OR expression
    (45) expression -> . expression EQEQ expression
    (46) expression -> . expression NEQ expression
    (47) expression -> . expression MINSIGN expression
    (48) expression -> . expression MAXSIGN expression
    (49) expression -> . expression MINSIGNEQ expression
    (50) expression -> . expression MAXSIGNEQ expression
    (51) expression -> . expression IS declaration_type
    (52) expression -> . expression IS NOT declaration_type
    (53) expression -> . NOT expression
    (54) expression -> . MINUS expression
    (55) expression -> . expression PLUSPLUS
    (56) expression -> . expression MINUSMINUS
    (57) expression -> . expression DOT ID
    (58) expression -> . expression LBRACKET expression RBRACKET
    (59) expression -> . expression LPAREN arguments RPAREN
    (62) expression -> . expression NOT
    (63) expression -> . expression PLUS expression
    (64) expression -> . expression MINUS expression
    (65) expression -> . expression TIMES expression
    (66) expression -> . expression DIVIDE expression
    (67) expression -> . expression INTDIV expression
    (68) expression -> . expression MODULE expression
    (69) expression -> . term
    (105) expression -> . expression EQUALS expression
    (106) expression -> . expression PLUSEQ expression
    (107) expression -> . expression MINUSEQ expression
    (108) expression -> . expression TIMESEQ expression
    (109) expression -> . expression DIVEQ expression
    (110) expression -> . expression NULLASSIGN expression
    (111) expression -> . expression QMARK expression COLON expression
    (128) expression -> . LBRACKET expression_list RBRACKET
    (129) expression -> . LBRACE set_or_map_contents RBRACE
    (112) print_statement -> . PRINT LPAREN expression RPAREN SEMICOLON
    (119) if_else -> . IF LPAREN expression RPAREN instruction
    (120) if_else -> . IF LPAREN expression RPAREN instruction ELSE instruction
    (121) while_loop -> . WHILE LPAREN expression RPAREN instruction
    (122) for_loop -> . FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction
    (116) return_statement -> . RETURN expression SEMICOLON
    (117) return_statement -> . RETURN SEMICOLON
    (101) block_statement -> . LBRACE instructions RBRACE
    (102) throw_statement -> . THROW expression SEMICOLON
    (93) try_statement -> . TRY block_statement catch_clauses
    (94) try_statement -> . TRY block_statement catch_clauses finally_clause
    (95) try_statement -> . TRY block_statement finally_clause
    (10) const_declaration -> . CONST declaration_type ID EQUALS expression
    (144) break_statement -> . BREAK SEMICOLON
    (145) continue_statement -> . CONTINUE SEMICOLON
    (27) declaration_type -> . primitive_type
    (28) declaration_type -> . generic_type
    (29) declaration_type -> . type_nullable
    (30) declaration_type -> . ID
    (70) term -> . factor
    (31) primitive_type -> . INT
    (32) primitive_type -> . DOUBLE
    (33) primitive_type -> . STRING
    (34) primitive_type -> . BOOL
    (35) primitive_type -> . VOID
    (36) primitive_type -> . VAR
    (37) primitive_type -> . DYNAMIC
    (38) generic_type -> . ID MINSIGN type_list MAXSIGN
    (39) type_nullable -> . primitive_type QMARK
    (71) factor -> . primitive_type DOT ID LPAREN arguments RPAREN
    (72) factor -> . NUMBER
    (73) factor -> . STRING_LITERAL
    (74) factor -> . ID
    (75) factor -> . TRUE
    (76) factor -> . FALSE
    (77) factor -> . LPAREN expression RPAREN

    NOT             shift and go to state 57
    MINUS           shift and go to state 58
    LBRACKET        shift and go to state 59
    LBRACE          shift and go to state 169
    PRINT           shift and go to state 188
    IF              shift and go to state 189
    WHILE           shift and go to state 190
    FOR             shift and go to state 191
    RETURN          shift and go to state 192
    THROW           shift and go to state 193
    TRY             shift and go to state 194
    CONST           shift and go to state 14
    BREAK           shift and go to state 195
    CONTINUE        shift and go to state 196
    ID              shift and go to state 187
    INT             shift and go to state 18
    DOUBLE          shift and go to state 19
    STRING          shift and go to state 20
    BOOL            shift and go to state 21
    VOID            shift and go to state 22
    VAR             shift and go to state 23
    DYNAMIC         shift and go to state 24
    NUMBER          shift and go to state 65
    STRING_LITERAL  shift and go to state 66
    TRUE            shift and go to state 67
    FALSE           shift and go to state 68
    LPAREN          shift and go to state 60

    instruction                    shift and go to state 285
    variable_declaration           shift and go to state 174
    expression                     shift and go to state 175
    print_statement                shift and go to state 176
    if_else                        shift and go to state 177
    while_loop                     shift and go to state 178
    for_loop                       shift and go to state 179
    return_statement               shift and go to state 180
    block_statement                shift and go to state 181
    throw_statement                shift and go to state 182
    try_statement                  shift and go to state 183
    const_declaration              shift and go to state 184
    break_statement                shift and go to state 185
    continue_statement             shift and go to state 186
    declaration_type               shift and go to state 168
    term                           shift and go to state 61
    primitive_type                 shift and go to state 197
    generic_type                   shift and go to state 16
    type_nullable                  shift and go to state 17
    factor                         shift and go to state 63

state 284

    (99) catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .

    FINALLY         reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    CATCH           reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    NOT             reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    MINUS           reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    LBRACKET        reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    LBRACE          reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    PRINT           reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    IF              reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    WHILE           reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    FOR             reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    RETURN          reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    THROW           reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    TRY             reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    CONST           reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    BREAK           reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    CONTINUE        reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    ID              reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    INT             reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    DOUBLE          reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    STRING          reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    BOOL            reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    VOID            reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    VAR             reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    DYNAMIC         reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    NUMBER          reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    STRING_LITERAL  reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    TRUE            reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    FALSE           reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    LPAREN          reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    RBRACE          reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)
    ELSE            reduce using rule 99 (catch_clause -> CATCH LPAREN ID ID RPAREN block_statement .)


state 285

    (122) for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .

    NOT             reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    MINUS           reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    LBRACKET        reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    LBRACE          reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    PRINT           reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    IF              reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    WHILE           reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    FOR             reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    RETURN          reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    THROW           reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    TRY             reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    CONST           reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    BREAK           reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    CONTINUE        reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    ID              reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    INT             reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    DOUBLE          reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    STRING          reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    BOOL            reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    VOID            reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    VAR             reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    DYNAMIC         reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    NUMBER          reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    STRING_LITERAL  reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    TRUE            reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    FALSE           reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    LPAREN          reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    RBRACE          reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)
    ELSE            reduce using rule 122 (for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MINSIGN in state 11 resolved as shift
WARNING: shift/reduce conflict for QMARK in state 15 resolved as shift
WARNING: shift/reduce conflict for NULLCOALESCING in state 127 resolved as shift
WARNING: shift/reduce conflict for AND in state 127 resolved as shift
WARNING: shift/reduce conflict for OR in state 127 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for MINSIGN in state 127 resolved as shift
WARNING: shift/reduce conflict for MAXSIGN in state 127 resolved as shift
WARNING: shift/reduce conflict for MINSIGNEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for MAXSIGNEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for IS in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for DOT in state 127 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 127 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 127 resolved as shift
WARNING: shift/reduce conflict for NOT in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 127 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 127 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 127 resolved as shift
WARNING: shift/reduce conflict for INTDIV in state 127 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 127 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 127 resolved as shift
WARNING: shift/reduce conflict for PLUSEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for MINUSEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for TIMESEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for DIVEQ in state 127 resolved as shift
WARNING: shift/reduce conflict for NULLASSIGN in state 127 resolved as shift
WARNING: shift/reduce conflict for QMARK in state 127 resolved as shift
WARNING: shift/reduce conflict for MINSIGN in state 187 resolved as shift
WARNING: shift/reduce conflict for MINSIGN in state 214 resolved as shift
WARNING: shift/reduce conflict for NULLCOALESCING in state 232 resolved as shift
WARNING: shift/reduce conflict for AND in state 232 resolved as shift
WARNING: shift/reduce conflict for OR in state 232 resolved as shift
WARNING: shift/reduce conflict for EQEQ in state 232 resolved as shift
WARNING: shift/reduce conflict for NEQ in state 232 resolved as shift
WARNING: shift/reduce conflict for MINSIGN in state 232 resolved as shift
WARNING: shift/reduce conflict for MAXSIGN in state 232 resolved as shift
WARNING: shift/reduce conflict for MINSIGNEQ in state 232 resolved as shift
WARNING: shift/reduce conflict for MAXSIGNEQ in state 232 resolved as shift
WARNING: shift/reduce conflict for IS in state 232 resolved as shift
WARNING: shift/reduce conflict for PLUSPLUS in state 232 resolved as shift
WARNING: shift/reduce conflict for MINUSMINUS in state 232 resolved as shift
WARNING: shift/reduce conflict for DOT in state 232 resolved as shift
WARNING: shift/reduce conflict for LBRACKET in state 232 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 232 resolved as shift
WARNING: shift/reduce conflict for NOT in state 232 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 232 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 232 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 232 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 232 resolved as shift
WARNING: shift/reduce conflict for INTDIV in state 232 resolved as shift
WARNING: shift/reduce conflict for MODULE in state 232 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 232 resolved as shift
WARNING: shift/reduce conflict for PLUSEQ in state 232 resolved as shift
WARNING: shift/reduce conflict for MINUSEQ in state 232 resolved as shift
WARNING: shift/reduce conflict for TIMESEQ in state 232 resolved as shift
WARNING: shift/reduce conflict for DIVEQ in state 232 resolved as shift
WARNING: shift/reduce conflict for NULLASSIGN in state 232 resolved as shift
WARNING: shift/reduce conflict for QMARK in state 232 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 267 resolved as shift
WARNING: reduce/reduce conflict in state 142 resolved using rule (arguments -> empty)
WARNING: rejected rule (expression_list -> empty) in state 142
WARNING: reduce/reduce conflict in state 213 resolved using rule (instructions -> empty)
WARNING: rejected rule (set_or_map_contents -> empty) in state 213
