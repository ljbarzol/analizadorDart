
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightEQUALSPLUSEQMINUSEQTIMESEQDIVEQNULLASSIGNleftORleftANDnonassocEQEQNEQnonassocMINSIGNMAXSIGNMINSIGNEQMAXSIGNEQISleftPLUSMINUSleftTIMESDIVIDEINTDIVMODULErightELSErightU_NOTUMINUSleftPLUSPLUSMINUSMINUSleftDOTLBRACKETLPARENleftNOTAND BOOL BREAK CASE CATCH CLASS COLON COMMA COMMENT CONST CONTINUE DIVEQ DIVIDE DOT DOUBLE DYNAMIC ELSE EQEQ EQUALS EXTENDS FALSE FINAL FINALLY FOR ID IF IMPLEMENTS IMPORT INT INTDIV IS LBRACE LBRACKET LPAREN MAIN MAXSIGN MAXSIGNEQ MINSIGN MINSIGNEQ MINUS MINUSEQ MINUSMINUS MODULE NEQ NOT NULLASSIGN NULLCOALESCING NUMBER OR PLUS PLUSEQ PLUSPLUS PRINT QMARK QMARK_DOT RBRACE RBRACKET RETURN RPAREN SEMICOLON SQUOTE STRING STRING_LITERAL SWITCH THEN THIS THROW TIMES TIMESEQ TRUE TRY VAR VOID WHILEprogram : declaration_listdeclaration_list : declaration_list declaration\n                        | emptydeclaration : class\n                   | function_declaration\n                   | variable_declaration SEMICOLON\n                   | import_statement\n                   | const_declaration SEMICOLONimport_statement : IMPORT STRING_LITERAL SEMICOLONconst_declaration : CONST declaration_type ID EQUALS expressionclass : CLASS ID LBRACE class_body RBRACEclass_body : class_member class_body\n                  | emptyclass_member : class_property\n                    | function_declaration\n                    | constructor_declarationfunction_declaration : declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACEfunction_name : ID\n                     | MAINclass_property : declaration_type ID SEMICOLONconstructor_declaration : ID LPAREN constructor_params RPAREN SEMICOLONconstructor_params : constructor_param_list\n                          | emptyconstructor_param_list : constructor_param_list COMMA constructor_param\n                              | constructor_paramconstructor_param : THIS DOT IDdeclaration_type : primitive_type\n                        | generic_type\n                        | type_nullable\n                        | IDprimitive_type : INT\n                      | DOUBLE\n                      | STRING\n                      | BOOL\n                      | VOID\n                      | VAR\n                      | DYNAMICgeneric_type : ID MINSIGN type_list MAXSIGNtype_nullable : primitive_type QMARKexpression : expression NULLCOALESCING expressiontype_list : type_list COMMA declaration_type\n                 | declaration_typeexpression : expression AND expression\n                  | expression OR expressionexpression : expression EQEQ expression\n                  | expression NEQ expression\n                  | expression MINSIGN expression\n                  | expression MAXSIGN expression\n                  | expression MINSIGNEQ expression\n                  | expression MAXSIGNEQ expressionexpression : expression IS declaration_type\n                  | expression IS NOT declaration_typeexpression : NOT expression %prec U_NOTexpression : MINUS expression %prec UMINUSexpression : expression PLUSPLUS\n                  | expression MINUSMINUSexpression : expression DOT IDexpression : expression LBRACKET expression RBRACKETexpression : expression LPAREN arguments RPARENarguments : expression_list\n                 | emptyexpression : expression NOTexpression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression INTDIV expression\n                  | expression MODULE expressionexpression : termterm : factorfactor : primitive_type DOT ID LPAREN arguments RPARENfactor : NUMBERfactor : STRING_LITERALfactor : ID\n               | TRUE\n               | FALSEfactor : LPAREN expression RPARENinstructions : instruction instructions\n                    | emptyinstruction : variable_declaration SEMICOLON\n                   | expression SEMICOLON\n                   | print_statement\n                   | if_else\n                   | while_loop\n                   | for_loop\n                   | return_statement\n                   | block_statement\n                   | throw_statement\n                   | try_statement\n                   | const_declaration SEMICOLON\n                   | break_statement\n                   | continue_statementtry_statement : TRY block_statement catch_clauses\n                     | TRY block_statement catch_clauses finally_clause\n                     | TRY block_statement finally_clausecatch_clauses : catch_clauses catch_clause\n                     | catch_clausecatch_clause : CATCH LPAREN ID RPAREN block_statement\n                    | CATCH LPAREN ID ID RPAREN block_statementfinally_clause : FINALLY block_statementblock_statement : LBRACE instructions RBRACEthrow_statement : THROW expression SEMICOLONvariable_declaration : declaration_type ID\n                            | declaration_type ID EQUALS expressionexpression : expression EQUALS expression\n                  | expression PLUSEQ expression\n                  | expression MINUSEQ expression\n                  | expression TIMESEQ expression\n                  | expression DIVEQ expression\n                  | expression NULLASSIGN expressionexpression : expression QMARK expression COLON expressionprint_statement : PRINT LPAREN expression RPAREN SEMICOLONparameters : parameters COMMA declaration_type ID\n                  | declaration_type ID\n                  | emptyreturn_statement : RETURN expression SEMICOLON\n                        | RETURN SEMICOLONbody : instructionsif_else : IF LPAREN expression RPAREN instruction\n               | IF LPAREN expression RPAREN instruction ELSE instructionwhile_loop : WHILE LPAREN expression RPAREN instructionfor_loop : FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instructionfor_initializer : variable_declaration\n                       | expression\n                       | emptyexpression_opt : expression\n                      | emptyexpression : LBRACKET expression_list RBRACKETexpression : LBRACE set_or_map_contents RBRACEset_or_map_contents : expression set_or_map_tail\n                           | emptyset_or_map_tail : COLON expression map_tail\n                       | set_tailmap_tail : COMMA map_entries\n                | emptymap_entries : map_entries COMMA map_entry\n                   | map_entrymap_entry : expression COLON expressionset_tail : COMMA expression_list\n                | emptyexpression_list : expression COMMA expression_list\n                        | expression\n                        | emptybreak_statement : BREAK SEMICOLONcontinue_statement : CONTINUE SEMICOLONempty :'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,6,8,25,26,40,71,216,],[-146,10,-3,-2,-4,-5,-7,-6,-8,-9,-11,-17,]),'IMPORT':([0,2,3,4,5,6,8,25,26,40,71,216,],[-146,13,-3,-2,-4,-5,-7,-6,-8,-9,-11,-17,]),'CONST':([0,2,3,4,5,6,8,25,26,40,71,124,169,172,176,177,178,179,180,181,182,183,185,186,216,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[-146,14,-3,-2,-4,-5,-7,-6,-8,-9,-11,14,14,14,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-17,-80,-81,-90,-117,14,-144,-145,-101,-116,-102,-93,-95,-97,14,14,-94,-96,-100,-112,-119,-121,14,-120,-98,14,-99,-122,]),'ID':([0,2,3,4,5,6,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,33,34,35,38,39,40,42,44,46,47,48,49,50,51,52,57,58,59,60,62,69,71,77,78,79,80,81,82,83,84,85,86,87,88,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,116,123,124,125,137,156,160,162,167,168,169,172,176,177,178,179,180,181,182,183,185,186,187,192,193,197,202,206,207,214,215,216,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,263,264,265,266,267,268,272,275,276,279,282,283,284,285,],[-146,11,-3,-2,-4,-5,-7,27,-30,30,11,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-6,-8,11,41,-39,42,11,55,-9,-30,42,-14,-15,-16,73,-38,11,75,55,55,55,55,55,55,-11,11,55,55,55,55,55,55,55,55,55,55,11,138,55,55,55,55,55,55,55,55,55,55,55,55,55,55,164,-20,187,198,11,55,55,55,209,210,214,187,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-30,55,55,-27,55,55,-21,-30,-27,-17,-80,-81,-90,55,55,55,187,-117,187,-144,-145,55,-101,-116,-102,-93,-95,-97,187,187,55,-94,-96,-100,272,55,55,-112,-119,-121,277,187,55,-120,-98,187,-99,-122,]),'INT':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,69,71,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,123,124,137,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,207,216,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[-146,18,-3,-2,-4,-5,-7,18,-6,-8,18,18,18,18,-9,18,-14,-15,-16,18,18,18,18,18,18,18,-11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-20,18,18,18,18,18,18,18,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,18,18,18,18,-21,-17,-80,-81,-90,18,18,18,18,-117,18,-144,-145,18,-101,-116,-102,-93,-95,-97,18,18,18,-94,-96,-100,18,18,-112,-119,-121,18,18,-120,-98,18,-99,-122,]),'DOUBLE':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,69,71,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,123,124,137,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,207,216,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[-146,19,-3,-2,-4,-5,-7,19,-6,-8,19,19,19,19,-9,19,-14,-15,-16,19,19,19,19,19,19,19,-11,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-20,19,19,19,19,19,19,19,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,19,19,19,19,-21,-17,-80,-81,-90,19,19,19,19,-117,19,-144,-145,19,-101,-116,-102,-93,-95,-97,19,19,19,-94,-96,-100,19,19,-112,-119,-121,19,19,-120,-98,19,-99,-122,]),'STRING':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,69,71,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,123,124,137,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,207,216,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[-146,20,-3,-2,-4,-5,-7,20,-6,-8,20,20,20,20,-9,20,-14,-15,-16,20,20,20,20,20,20,20,-11,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-20,20,20,20,20,20,20,20,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,20,20,20,20,-21,-17,-80,-81,-90,20,20,20,20,-117,20,-144,-145,20,-101,-116,-102,-93,-95,-97,20,20,20,-94,-96,-100,20,20,-112,-119,-121,20,20,-120,-98,20,-99,-122,]),'BOOL':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,69,71,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,123,124,137,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,207,216,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[-146,21,-3,-2,-4,-5,-7,21,-6,-8,21,21,21,21,-9,21,-14,-15,-16,21,21,21,21,21,21,21,-11,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-20,21,21,21,21,21,21,21,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,21,21,21,21,-21,-17,-80,-81,-90,21,21,21,21,-117,21,-144,-145,21,-101,-116,-102,-93,-95,-97,21,21,21,-94,-96,-100,21,21,-112,-119,-121,21,21,-120,-98,21,-99,-122,]),'VOID':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,69,71,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,123,124,137,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,207,216,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[-146,22,-3,-2,-4,-5,-7,22,-6,-8,22,22,22,22,-9,22,-14,-15,-16,22,22,22,22,22,22,22,-11,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-20,22,22,22,22,22,22,22,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,22,22,22,22,-21,-17,-80,-81,-90,22,22,22,22,-117,22,-144,-145,22,-101,-116,-102,-93,-95,-97,22,22,22,-94,-96,-100,22,22,-112,-119,-121,22,22,-120,-98,22,-99,-122,]),'VAR':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,69,71,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,123,124,137,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,207,216,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[-146,23,-3,-2,-4,-5,-7,23,-6,-8,23,23,23,23,-9,23,-14,-15,-16,23,23,23,23,23,23,23,-11,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-20,23,23,23,23,23,23,23,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,23,23,23,23,-21,-17,-80,-81,-90,23,23,23,23,-117,23,-144,-145,23,-101,-116,-102,-93,-95,-97,23,23,23,-94,-96,-100,23,23,-112,-119,-121,23,23,-120,-98,23,-99,-122,]),'DYNAMIC':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,69,71,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,123,124,137,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,207,216,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[-146,24,-3,-2,-4,-5,-7,24,-6,-8,24,24,24,24,-9,24,-14,-15,-16,24,24,24,24,24,24,24,-11,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-20,24,24,24,24,24,24,24,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,24,24,24,24,-21,-17,-80,-81,-90,24,24,24,24,-117,24,-144,-145,24,-101,-116,-102,-93,-95,-97,24,24,24,-94,-96,-100,24,24,-112,-119,-121,24,24,-120,-98,24,-99,-122,]),'$end':([0,1,2,3,4,5,6,8,25,26,40,71,216,],[-146,0,-1,-3,-2,-4,-5,-7,-6,-8,-9,-11,-17,]),'SEMICOLON':([7,9,11,15,16,17,18,19,20,21,22,23,24,30,32,34,50,55,56,61,63,65,66,67,68,73,89,90,91,107,108,117,126,127,128,129,130,131,132,133,134,135,136,138,143,144,145,146,147,148,149,150,151,152,153,155,157,158,165,174,175,184,187,192,195,196,199,200,201,210,212,214,224,225,227,232,241,242,243,244,255,256,259,269,270,271,],[25,26,-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-103,40,-39,-38,-74,-104,-69,-70,-72,-73,-75,-76,123,-62,-55,-56,-53,-54,-10,-105,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,-63,-64,-65,-66,-67,-68,-106,-107,-108,-109,-110,-128,-77,-129,207,218,219,220,-74,226,230,231,-52,-58,-59,-103,219,-74,-146,245,246,-111,259,-123,-124,-125,-71,266,-146,276,-126,-127,]),'MAIN':([11,12,15,16,17,18,19,20,21,22,23,24,34,42,49,50,],[-30,31,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-30,31,-38,]),'MAXSIGN':([11,15,16,17,18,19,20,21,22,23,24,34,36,37,50,55,56,61,63,65,66,67,68,74,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,50,-42,-38,-74,85,-69,-70,-72,-73,-75,-76,-41,-62,-55,-56,-53,-54,85,85,85,85,85,85,85,85,85,85,None,None,None,None,-51,-57,85,-63,-64,-65,-66,-67,-68,85,85,85,85,85,85,-128,-77,-129,85,-74,-52,-58,-59,85,85,-74,85,85,85,85,85,85,85,85,-71,85,85,]),'COMMA':([11,15,16,17,18,19,20,21,22,23,24,34,36,37,38,50,53,54,55,61,63,65,66,67,68,74,75,89,90,91,107,108,110,114,119,121,126,127,128,129,130,131,132,133,134,135,136,138,143,144,145,146,147,148,149,150,151,152,153,155,157,158,198,199,200,201,204,208,209,212,214,232,252,253,255,273,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,51,-42,-146,-38,77,-115,-74,-69,-70,-72,-73,-75,-76,-41,-114,-62,-55,-56,-53,-54,156,162,166,-25,-105,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,-63,-64,-65,-66,-67,-68,-106,-107,-108,-109,-110,-128,-77,-129,-113,-52,-58,-59,234,-24,-26,162,-74,-111,264,-137,-71,-136,-138,]),'NULLCOALESCING':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,79,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,79,79,79,79,-105,79,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,79,-63,-64,-65,-66,-67,-68,-106,-107,-108,-109,-110,79,-128,-77,-129,79,-74,-52,-58,-59,79,79,-74,79,79,79,79,79,79,79,79,-71,79,79,]),'AND':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,80,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,80,80,80,80,80,80,-43,80,-45,-46,-47,-48,-49,-50,-51,-57,80,-63,-64,-65,-66,-67,-68,80,80,80,80,80,80,-128,-77,-129,80,-74,-52,-58,-59,80,80,-74,80,80,80,80,80,80,80,80,-71,80,80,]),'OR':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,81,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,81,81,81,81,81,81,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,81,-63,-64,-65,-66,-67,-68,81,81,81,81,81,81,-128,-77,-129,81,-74,-52,-58,-59,81,81,-74,81,81,81,81,81,81,81,81,-71,81,81,]),'EQEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,82,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,82,82,82,82,82,82,82,82,None,None,-47,-48,-49,-50,-51,-57,82,-63,-64,-65,-66,-67,-68,82,82,82,82,82,82,-128,-77,-129,82,-74,-52,-58,-59,82,82,-74,82,82,82,82,82,82,82,82,-71,82,82,]),'NEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,83,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,83,83,83,83,83,83,83,83,None,None,-47,-48,-49,-50,-51,-57,83,-63,-64,-65,-66,-67,-68,83,83,83,83,83,83,-128,-77,-129,83,-74,-52,-58,-59,83,83,-74,83,83,83,83,83,83,83,83,-71,83,83,]),'MINSIGN':([11,15,16,17,18,19,20,21,22,23,24,34,42,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[28,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,28,-38,-74,84,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,84,84,84,84,84,84,84,84,84,84,None,None,None,None,-51,-57,84,-63,-64,-65,-66,-67,-68,84,84,84,84,84,84,-128,-77,-129,84,28,-52,-58,-59,84,84,28,84,84,84,84,84,84,84,84,-71,84,84,]),'MINSIGNEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,86,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,86,86,86,86,86,86,86,86,86,86,None,None,None,None,-51,-57,86,-63,-64,-65,-66,-67,-68,86,86,86,86,86,86,-128,-77,-129,86,-74,-52,-58,-59,86,86,-74,86,86,86,86,86,86,86,86,-71,86,86,]),'MAXSIGNEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,87,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,87,87,87,87,87,87,87,87,87,87,None,None,None,None,-51,-57,87,-63,-64,-65,-66,-67,-68,87,87,87,87,87,87,-128,-77,-129,87,-74,-52,-58,-59,87,87,-74,87,87,87,87,87,87,87,87,-71,87,87,]),'IS':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,88,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-51,-57,88,-63,-64,-65,-66,-67,-68,88,88,88,88,88,88,-128,-77,-129,88,-74,-52,-58,-59,88,88,-74,88,88,88,88,88,88,88,88,-71,88,88,]),'PLUSPLUS':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,90,-69,-70,-72,-73,-75,-76,-62,-55,-56,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-51,-57,90,90,90,90,90,90,90,90,90,90,90,90,90,-128,-77,-129,90,-74,-52,-58,-59,90,90,-74,90,90,90,90,90,90,90,90,-71,90,90,]),'MINUSMINUS':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,91,-69,-70,-72,-73,-75,-76,-62,-55,-56,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-51,-57,91,91,91,91,91,91,91,91,91,91,91,91,91,-128,-77,-129,91,-74,-52,-58,-59,91,91,-74,91,91,91,91,91,91,91,91,-71,91,91,]),'DOT':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,64,65,66,67,68,89,90,91,107,108,110,112,114,117,122,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,197,199,200,201,204,212,214,215,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,92,-69,-70,116,-72,-73,-75,-76,-62,-55,-56,92,92,92,92,92,92,167,92,92,92,92,92,92,92,92,92,92,-51,-57,92,92,92,92,92,92,92,92,92,92,92,92,92,-128,-77,-129,92,-74,116,-52,-58,-59,92,92,-74,116,92,92,92,92,92,92,92,92,-71,92,92,]),'LBRACKET':([11,15,16,17,18,19,20,21,22,23,24,34,39,50,55,56,57,58,59,60,61,62,63,65,66,67,68,69,78,79,80,81,82,83,84,85,86,87,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,112,114,117,124,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,162,169,172,175,176,177,178,179,180,181,182,183,185,186,187,192,193,199,200,201,202,204,206,212,214,218,219,220,221,222,223,224,225,226,227,229,230,231,232,234,237,238,239,240,243,245,246,247,248,249,254,255,257,258,259,260,261,262,264,265,266,267,268,270,274,275,276,279,282,283,284,285,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,59,-38,-74,93,59,59,59,59,-69,59,-70,-72,-73,-75,-76,59,59,59,59,59,59,59,59,59,59,59,-62,-55,-56,59,59,59,59,59,59,59,59,59,59,59,59,59,59,93,93,93,93,93,93,59,93,93,93,93,93,93,93,93,93,93,-51,-57,93,93,93,93,93,93,93,93,93,93,93,93,93,-128,59,-77,-129,59,59,59,59,93,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-74,59,59,-52,-58,-59,59,93,59,93,-74,-80,-81,-90,59,59,59,59,93,-117,93,59,-144,-145,93,59,-101,93,93,93,93,-116,-102,-93,-95,-97,93,-71,59,59,59,-94,-96,-100,59,59,-112,-119,-121,93,93,59,59,-120,-98,59,-99,-122,]),'LPAREN':([11,15,16,17,18,19,20,21,22,23,24,29,30,31,34,39,42,50,55,56,57,58,59,60,61,62,63,65,66,67,68,69,73,78,79,80,81,82,83,84,85,86,87,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,112,114,117,124,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,162,164,169,172,175,176,177,178,179,180,181,182,183,185,186,187,188,189,190,191,192,193,199,200,201,202,204,206,212,214,218,219,220,221,222,223,224,225,226,227,229,230,231,232,234,237,238,239,240,243,245,246,247,248,249,251,254,255,257,258,259,260,261,262,264,265,266,267,268,270,274,275,276,279,282,283,284,285,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,38,-18,-19,-39,60,70,-38,-74,94,60,60,60,60,-69,60,-70,-72,-73,-75,-76,60,-18,60,60,60,60,60,60,60,60,60,60,-62,-55,-56,60,60,60,60,60,60,60,60,60,60,60,60,60,60,94,94,94,94,94,94,60,94,94,94,94,94,94,94,94,94,94,-51,-57,94,94,94,94,94,94,94,94,94,94,94,94,94,-128,60,-77,-129,60,60,206,60,60,94,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-74,221,222,223,224,60,60,-52,-58,-59,60,94,60,94,-74,-80,-81,-90,60,60,60,60,94,-117,94,60,-144,-145,94,60,-101,94,94,94,94,-116,-102,-93,-95,-97,263,94,-71,60,60,60,-94,-96,-100,60,60,-112,-119,-121,94,94,60,60,-120,-98,60,-99,-122,]),'NOT':([11,15,16,17,18,19,20,21,22,23,24,34,39,50,55,56,57,58,59,60,61,62,63,65,66,67,68,69,78,79,80,81,82,83,84,85,86,87,88,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,112,114,117,124,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,162,169,172,175,176,177,178,179,180,181,182,183,185,186,187,192,193,199,200,201,202,204,206,212,214,218,219,220,221,222,223,224,225,226,227,229,230,231,232,234,237,238,239,240,243,245,246,247,248,249,254,255,257,258,259,260,261,262,264,265,266,267,268,270,274,275,276,279,282,283,284,285,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,57,-38,-74,89,57,57,57,57,-69,57,-70,-72,-73,-75,-76,57,57,57,57,57,57,57,57,57,57,57,137,-62,-55,-56,57,57,57,57,57,57,57,57,57,57,57,57,57,57,89,89,89,89,89,89,57,89,89,89,89,89,89,89,89,89,89,-51,-57,89,89,89,89,89,89,89,89,89,89,89,89,89,-128,57,-77,-129,57,57,57,57,89,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-74,57,57,-52,-58,-59,57,89,57,89,-74,-80,-81,-90,57,57,57,57,89,-117,89,57,-144,-145,89,57,-101,89,89,89,89,-116,-102,-93,-95,-97,89,-71,57,57,57,-94,-96,-100,57,57,-112,-119,-121,89,89,57,57,-120,-98,57,-99,-122,]),'PLUS':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,95,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-51,-57,95,-63,-64,-65,-66,-67,-68,95,95,95,95,95,95,-128,-77,-129,95,-74,-52,-58,-59,95,95,-74,95,95,95,95,95,95,95,95,-71,95,95,]),'MINUS':([11,15,16,17,18,19,20,21,22,23,24,34,39,50,55,56,57,58,59,60,61,62,63,65,66,67,68,69,78,79,80,81,82,83,84,85,86,87,89,90,91,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,110,112,114,117,124,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,160,162,169,172,175,176,177,178,179,180,181,182,183,185,186,187,192,193,199,200,201,202,204,206,212,214,218,219,220,221,222,223,224,225,226,227,229,230,231,232,234,237,238,239,240,243,245,246,247,248,249,254,255,257,258,259,260,261,262,264,265,266,267,268,270,274,275,276,279,282,283,284,285,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,58,-38,-74,96,58,58,58,58,-69,58,-70,-72,-73,-75,-76,58,58,58,58,58,58,58,58,58,58,58,-62,-55,-56,58,58,58,58,58,58,58,58,58,58,58,58,58,58,-53,-54,96,96,96,96,58,96,96,96,96,96,96,96,96,96,96,-51,-57,96,-63,-64,-65,-66,-67,-68,96,96,96,96,96,96,-128,58,-77,-129,58,58,58,58,96,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-74,58,58,-52,-58,-59,58,96,58,96,-74,-80,-81,-90,58,58,58,58,96,-117,96,58,-144,-145,96,58,-101,96,96,96,96,-116,-102,-93,-95,-97,96,-71,58,58,58,-94,-96,-100,58,58,-112,-119,-121,96,96,58,58,-120,-98,58,-99,-122,]),'TIMES':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,97,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-51,-57,97,97,97,-65,-66,-67,-68,97,97,97,97,97,97,-128,-77,-129,97,-74,-52,-58,-59,97,97,-74,97,97,97,97,97,97,97,97,-71,97,97,]),'DIVIDE':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,98,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,98,98,98,98,98,98,98,98,98,98,98,98,98,98,-51,-57,98,98,98,-65,-66,-67,-68,98,98,98,98,98,98,-128,-77,-129,98,-74,-52,-58,-59,98,98,-74,98,98,98,98,98,98,98,98,-71,98,98,]),'INTDIV':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,99,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,99,99,99,99,99,99,99,99,99,99,99,99,99,99,-51,-57,99,99,99,-65,-66,-67,-68,99,99,99,99,99,99,-128,-77,-129,99,-74,-52,-58,-59,99,99,-74,99,99,99,99,99,99,99,99,-71,99,99,]),'MODULE':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,100,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,100,100,100,100,100,100,100,100,100,100,100,100,100,100,-51,-57,100,100,100,-65,-66,-67,-68,100,100,100,100,100,100,-128,-77,-129,100,-74,-52,-58,-59,100,100,-74,100,100,100,100,100,100,100,100,-71,100,100,]),'EQUALS':([11,15,16,17,18,19,20,21,22,23,24,30,34,41,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,210,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,39,-39,69,-38,-74,78,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,78,78,78,78,78,78,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,78,-63,-64,-65,-66,-67,-68,78,78,78,78,78,78,-128,-77,-129,78,-74,-52,-58,-59,78,39,78,-74,78,78,78,78,78,78,78,78,-71,78,78,]),'PLUSEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,101,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,101,101,101,101,101,101,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,101,-63,-64,-65,-66,-67,-68,101,101,101,101,101,101,-128,-77,-129,101,-74,-52,-58,-59,101,101,-74,101,101,101,101,101,101,101,101,-71,101,101,]),'MINUSEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,102,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,102,102,102,102,102,102,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,102,-63,-64,-65,-66,-67,-68,102,102,102,102,102,102,-128,-77,-129,102,-74,-52,-58,-59,102,102,-74,102,102,102,102,102,102,102,102,-71,102,102,]),'TIMESEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,103,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,103,103,103,103,103,103,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,103,-63,-64,-65,-66,-67,-68,103,103,103,103,103,103,-128,-77,-129,103,-74,-52,-58,-59,103,103,-74,103,103,103,103,103,103,103,103,-71,103,103,]),'DIVEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,104,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,104,104,104,104,104,104,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,104,-63,-64,-65,-66,-67,-68,104,104,104,104,104,104,-128,-77,-129,104,-74,-52,-58,-59,104,104,-74,104,104,104,104,104,104,104,104,-71,104,104,]),'NULLASSIGN':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,199,200,201,204,212,214,225,227,232,238,239,240,243,254,255,270,274,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,105,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,105,105,105,105,105,105,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,105,-63,-64,-65,-66,-67,-68,105,105,105,105,105,105,-128,-77,-129,105,-74,-52,-58,-59,105,105,-74,105,105,105,105,105,105,105,105,-71,105,105,]),'QMARK':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,67,68,89,90,91,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,175,187,197,199,200,201,204,212,214,215,225,227,232,238,239,240,243,254,255,270,274,],[-30,34,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,106,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,106,106,106,106,-105,106,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,106,-63,-64,-65,-66,-67,-68,-106,-107,-108,-109,-110,106,-128,-77,-129,106,-74,34,-52,-58,-59,106,106,-74,34,106,106,106,106,106,106,106,106,-71,106,106,]),'RBRACKET':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,59,61,63,65,66,67,68,89,90,91,107,108,109,110,111,126,127,128,129,130,131,132,133,134,135,136,138,139,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,199,200,201,203,232,255,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,-146,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,155,-142,-143,-105,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,200,-63,-64,-65,-66,-67,-68,-106,-107,-108,-109,-110,-128,-146,-77,-129,-52,-58,-59,-141,-111,-71,]),'RPAREN':([11,15,16,17,18,19,20,21,22,23,24,34,38,50,53,54,55,61,63,65,66,67,68,70,75,89,90,91,94,107,108,110,111,112,118,119,120,121,126,127,128,129,130,131,132,133,134,135,136,138,140,141,142,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,198,199,200,201,203,206,208,209,232,236,238,239,240,255,270,271,272,276,277,280,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-146,-38,76,-115,-74,-69,-70,-72,-73,-75,-76,-146,-114,-62,-55,-56,-146,-53,-54,-142,-143,157,165,-22,-23,-25,-105,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,201,-60,-61,-63,-64,-65,-66,-67,-68,-106,-107,-108,-109,-110,-128,-146,-77,-129,-113,-52,-58,-59,-141,-146,-24,-26,-111,255,256,257,258,-71,-126,-127,278,-146,281,283,]),'COLON':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,61,63,65,66,67,68,89,90,91,107,108,114,126,127,128,129,130,131,132,133,134,135,136,138,143,144,145,146,147,148,149,150,151,152,153,154,155,157,158,199,200,201,212,214,232,254,255,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-74,-69,-70,-72,-73,-75,-76,-62,-55,-56,-53,-54,160,-105,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,-63,-64,-65,-66,-67,-68,-106,-107,-108,-109,-110,202,-128,-77,-129,-52,-58,-59,160,-74,-111,265,-71,]),'RBRACE':([11,15,16,17,18,19,20,21,22,23,24,34,35,43,44,45,46,47,48,50,55,61,62,63,65,66,67,68,72,89,90,91,107,108,110,111,113,114,115,123,124,126,127,128,129,130,131,132,133,134,135,136,138,143,144,145,146,147,148,149,150,151,152,153,155,156,157,158,159,161,162,163,169,170,171,172,173,176,177,178,179,180,181,182,183,185,186,199,200,201,203,204,205,207,211,212,213,214,216,217,218,219,220,226,229,230,231,232,233,235,237,245,246,247,248,249,252,253,255,260,261,262,266,267,268,273,274,279,282,284,285,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-146,71,-146,-13,-14,-15,-16,-38,-74,-69,-146,-70,-72,-73,-75,-76,-12,-62,-55,-56,-53,-54,-142,-143,158,-146,-131,-20,-146,-105,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,-63,-64,-65,-66,-67,-68,-106,-107,-108,-109,-110,-128,-146,-77,-129,-130,-133,-146,-140,-146,216,-118,-146,-79,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-52,-58,-59,-141,-146,-139,-21,237,-146,-79,-74,-17,-78,-80,-81,-90,-117,-146,-144,-145,-111,-132,-135,-101,-116,-102,-93,-95,-97,-134,-137,-71,-94,-96,-100,-112,-119,-121,-136,-138,-120,-98,-99,-122,]),'STRING_LITERAL':([13,39,57,58,59,60,62,69,78,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,124,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[32,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,66,66,66,66,-80,-81,-90,66,66,66,66,-117,66,-144,-145,66,-101,-116,-102,-93,-95,-97,66,66,66,-94,-96,-100,66,66,-112,-119,-121,66,66,-120,-98,66,-99,-122,]),'LBRACE':([27,39,57,58,59,60,62,69,76,78,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,124,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,194,202,206,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,250,257,258,259,260,261,262,264,265,266,267,268,275,276,278,279,281,282,283,284,285,],[35,62,62,62,62,62,62,62,124,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,169,62,62,62,169,169,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,62,62,229,62,62,-80,-81,-90,62,62,62,62,-117,169,-144,-145,62,-101,-116,-102,-93,-95,-97,229,169,169,62,-94,-96,-100,62,62,-112,-119,-121,169,62,229,-120,229,-98,169,-99,-122,]),'NUMBER':([39,57,58,59,60,62,69,78,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,124,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,65,65,65,65,-80,-81,-90,65,65,65,65,-117,65,-144,-145,65,-101,-116,-102,-93,-95,-97,65,65,65,-94,-96,-100,65,65,-112,-119,-121,65,65,-120,-98,65,-99,-122,]),'TRUE':([39,57,58,59,60,62,69,78,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,124,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,67,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,67,67,67,67,-80,-81,-90,67,67,67,67,-117,67,-144,-145,67,-101,-116,-102,-93,-95,-97,67,67,67,-94,-96,-100,67,67,-112,-119,-121,67,67,-120,-98,67,-99,-122,]),'FALSE':([39,57,58,59,60,62,69,78,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,124,156,160,162,169,172,176,177,178,179,180,181,182,183,185,186,192,193,202,206,218,219,220,221,222,223,224,226,229,230,231,234,237,245,246,247,248,249,257,258,259,260,261,262,264,265,266,267,268,275,276,279,282,283,284,285,],[68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,68,68,68,68,-80,-81,-90,68,68,68,68,-117,68,-144,-145,68,-101,-116,-102,-93,-95,-97,68,68,68,-94,-96,-100,68,68,-112,-119,-121,68,68,-120,-98,68,-99,-122,]),'THIS':([70,166,],[122,122,]),'PRINT':([124,169,172,176,177,178,179,180,181,182,183,185,186,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[188,188,188,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,188,-144,-145,-101,-116,-102,-93,-95,-97,188,188,-94,-96,-100,-112,-119,-121,188,-120,-98,188,-99,-122,]),'IF':([124,169,172,176,177,178,179,180,181,182,183,185,186,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[189,189,189,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,189,-144,-145,-101,-116,-102,-93,-95,-97,189,189,-94,-96,-100,-112,-119,-121,189,-120,-98,189,-99,-122,]),'WHILE':([124,169,172,176,177,178,179,180,181,182,183,185,186,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[190,190,190,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,190,-144,-145,-101,-116,-102,-93,-95,-97,190,190,-94,-96,-100,-112,-119,-121,190,-120,-98,190,-99,-122,]),'FOR':([124,169,172,176,177,178,179,180,181,182,183,185,186,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[191,191,191,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,191,-144,-145,-101,-116,-102,-93,-95,-97,191,191,-94,-96,-100,-112,-119,-121,191,-120,-98,191,-99,-122,]),'RETURN':([124,169,172,176,177,178,179,180,181,182,183,185,186,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[192,192,192,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,192,-144,-145,-101,-116,-102,-93,-95,-97,192,192,-94,-96,-100,-112,-119,-121,192,-120,-98,192,-99,-122,]),'THROW':([124,169,172,176,177,178,179,180,181,182,183,185,186,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[193,193,193,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,193,-144,-145,-101,-116,-102,-93,-95,-97,193,193,-94,-96,-100,-112,-119,-121,193,-120,-98,193,-99,-122,]),'TRY':([124,169,172,176,177,178,179,180,181,182,183,185,186,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[194,194,194,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,194,-144,-145,-101,-116,-102,-93,-95,-97,194,194,-94,-96,-100,-112,-119,-121,194,-120,-98,194,-99,-122,]),'BREAK':([124,169,172,176,177,178,179,180,181,182,183,185,186,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[195,195,195,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,195,-144,-145,-101,-116,-102,-93,-95,-97,195,195,-94,-96,-100,-112,-119,-121,195,-120,-98,195,-99,-122,]),'CONTINUE':([124,169,172,176,177,178,179,180,181,182,183,185,186,218,219,220,226,229,230,231,237,245,246,247,248,249,257,258,260,261,262,266,267,268,275,279,282,283,284,285,],[196,196,196,-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,196,-144,-145,-101,-116,-102,-93,-95,-97,196,196,-94,-96,-100,-112,-119,-121,196,-120,-98,196,-99,-122,]),'ELSE':([176,177,178,179,180,181,182,183,185,186,218,219,220,226,230,231,237,245,246,247,248,249,260,261,262,266,267,268,279,282,284,285,],[-82,-83,-84,-85,-86,-87,-88,-89,-91,-92,-80,-81,-90,-117,-144,-145,-101,-116,-102,-93,-95,-97,-94,-96,-100,-112,275,-121,-120,-98,-99,-122,]),'FINALLY':([228,237,247,249,261,282,284,],[250,-101,250,-97,-96,-98,-99,]),'CATCH':([228,237,247,249,261,282,284,],[251,-101,251,-97,-96,-98,-99,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'empty':([0,35,38,44,59,62,70,94,114,124,156,162,169,172,204,206,212,224,229,259,276,],[3,45,54,45,111,115,120,142,163,173,111,111,213,173,235,142,163,244,173,271,271,]),'declaration':([2,],[4,]),'class':([2,],[5,]),'function_declaration':([2,35,44,],[6,47,47,]),'variable_declaration':([2,124,169,172,224,229,257,258,275,283,],[7,174,174,174,242,174,174,174,174,174,]),'import_statement':([2,],[8,]),'const_declaration':([2,124,169,172,229,257,258,275,283,],[9,184,184,184,184,184,184,184,184,]),'declaration_type':([2,14,28,35,38,44,51,77,88,124,137,169,172,224,229,257,258,275,283,],[12,33,37,49,52,49,74,125,136,168,199,168,168,168,168,168,168,168,168,]),'primitive_type':([2,14,28,35,38,39,44,51,57,58,59,60,62,69,77,78,79,80,81,82,83,84,85,86,87,88,93,94,95,96,97,98,99,100,101,102,103,104,105,106,124,137,156,160,162,169,172,192,193,202,206,221,222,223,224,229,234,257,258,259,264,265,275,276,283,],[15,15,15,15,15,64,15,15,64,64,64,64,64,64,15,64,64,64,64,64,64,64,64,64,64,15,64,64,64,64,64,64,64,64,64,64,64,64,64,64,197,15,64,64,64,215,197,64,64,64,64,64,64,64,197,197,64,197,197,64,64,64,197,64,197,]),'generic_type':([2,14,28,35,38,44,51,77,88,124,137,169,172,224,229,257,258,275,283,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'type_nullable':([2,14,28,35,38,44,51,77,88,124,137,169,172,224,229,257,258,275,283,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'function_name':([12,49,],[29,29,]),'type_list':([28,],[36,]),'class_body':([35,44,],[43,72,]),'class_member':([35,44,],[44,44,]),'class_property':([35,44,],[46,46,]),'constructor_declaration':([35,44,],[48,48,]),'parameters':([38,],[53,]),'expression':([39,57,58,59,60,62,69,78,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,124,156,160,162,169,172,192,193,202,206,221,222,223,224,229,234,257,258,259,264,265,275,276,283,],[56,107,108,110,112,114,117,126,127,128,129,130,131,132,133,134,135,139,110,143,144,145,146,147,148,149,150,151,152,153,154,175,110,204,110,212,175,225,227,232,110,238,239,240,243,175,254,175,175,270,254,274,175,270,175,]),'term':([39,57,58,59,60,62,69,78,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,124,156,160,162,169,172,192,193,202,206,221,222,223,224,229,234,257,258,259,264,265,275,276,283,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'factor':([39,57,58,59,60,62,69,78,79,80,81,82,83,84,85,86,87,93,94,95,96,97,98,99,100,101,102,103,104,105,106,124,156,160,162,169,172,192,193,202,206,221,222,223,224,229,234,257,258,259,264,265,275,276,283,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'expression_list':([59,94,156,162,206,],[109,141,203,205,141,]),'set_or_map_contents':([62,169,],[113,113,]),'constructor_params':([70,],[118,]),'constructor_param_list':([70,],[119,]),'constructor_param':([70,166,],[121,208,]),'arguments':([94,206,],[140,236,]),'set_or_map_tail':([114,212,],[159,159,]),'set_tail':([114,212,],[161,161,]),'body':([124,],[170,]),'instructions':([124,169,172,229,],[171,211,217,211,]),'instruction':([124,169,172,229,257,258,275,283,],[172,172,172,172,267,268,279,285,]),'print_statement':([124,169,172,229,257,258,275,283,],[176,176,176,176,176,176,176,176,]),'if_else':([124,169,172,229,257,258,275,283,],[177,177,177,177,177,177,177,177,]),'while_loop':([124,169,172,229,257,258,275,283,],[178,178,178,178,178,178,178,178,]),'for_loop':([124,169,172,229,257,258,275,283,],[179,179,179,179,179,179,179,179,]),'return_statement':([124,169,172,229,257,258,275,283,],[180,180,180,180,180,180,180,180,]),'block_statement':([124,169,172,194,229,250,257,258,275,278,281,283,],[181,181,181,228,181,262,181,181,181,282,284,181,]),'throw_statement':([124,169,172,229,257,258,275,283,],[182,182,182,182,182,182,182,182,]),'try_statement':([124,169,172,229,257,258,275,283,],[183,183,183,183,183,183,183,183,]),'break_statement':([124,169,172,229,257,258,275,283,],[185,185,185,185,185,185,185,185,]),'continue_statement':([124,169,172,229,257,258,275,283,],[186,186,186,186,186,186,186,186,]),'map_tail':([204,],[233,]),'for_initializer':([224,],[241,]),'catch_clauses':([228,],[247,]),'finally_clause':([228,247,],[248,260,]),'catch_clause':([228,247,],[249,261,]),'map_entries':([234,],[252,]),'map_entry':([234,264,],[253,273,]),'expression_opt':([259,276,],[269,280,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','sintactico.py',14),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','sintactico.py',18),
  ('declaration_list -> empty','declaration_list',1,'p_declaration_list','sintactico.py',19),
  ('declaration -> class','declaration',1,'p_declaration','sintactico.py',26),
  ('declaration -> function_declaration','declaration',1,'p_declaration','sintactico.py',27),
  ('declaration -> variable_declaration SEMICOLON','declaration',2,'p_declaration','sintactico.py',28),
  ('declaration -> import_statement','declaration',1,'p_declaration','sintactico.py',29),
  ('declaration -> const_declaration SEMICOLON','declaration',2,'p_declaration','sintactico.py',30),
  ('import_statement -> IMPORT STRING_LITERAL SEMICOLON','import_statement',3,'p_import_statement','sintactico.py',34),
  ('const_declaration -> CONST declaration_type ID EQUALS expression','const_declaration',5,'p_const_declaration','sintactico.py',39),
  ('class -> CLASS ID LBRACE class_body RBRACE','class',5,'p_class','sintactico.py',62),
  ('class_body -> class_member class_body','class_body',2,'p_class_body','sintactico.py',66),
  ('class_body -> empty','class_body',1,'p_class_body','sintactico.py',67),
  ('class_member -> class_property','class_member',1,'p_class_member','sintactico.py',74),
  ('class_member -> function_declaration','class_member',1,'p_class_member','sintactico.py',75),
  ('class_member -> constructor_declaration','class_member',1,'p_class_member','sintactico.py',76),
  ('function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE','function_declaration',8,'p_function_declaration','sintactico.py',80),
  ('function_name -> ID','function_name',1,'p_function_name','sintactico.py',84),
  ('function_name -> MAIN','function_name',1,'p_function_name','sintactico.py',85),
  ('class_property -> declaration_type ID SEMICOLON','class_property',3,'p_class_property','sintactico.py',89),
  ('constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON','constructor_declaration',5,'p_constructor_declaration','sintactico.py',93),
  ('constructor_params -> constructor_param_list','constructor_params',1,'p_constructor_params','sintactico.py',97),
  ('constructor_params -> empty','constructor_params',1,'p_constructor_params','sintactico.py',98),
  ('constructor_param_list -> constructor_param_list COMMA constructor_param','constructor_param_list',3,'p_constructor_param_list','sintactico.py',102),
  ('constructor_param_list -> constructor_param','constructor_param_list',1,'p_constructor_param_list','sintactico.py',103),
  ('constructor_param -> THIS DOT ID','constructor_param',3,'p_constructor_param','sintactico.py',110),
  ('declaration_type -> primitive_type','declaration_type',1,'p_declaration_type','sintactico.py',114),
  ('declaration_type -> generic_type','declaration_type',1,'p_declaration_type','sintactico.py',115),
  ('declaration_type -> type_nullable','declaration_type',1,'p_declaration_type','sintactico.py',116),
  ('declaration_type -> ID','declaration_type',1,'p_declaration_type','sintactico.py',117),
  ('primitive_type -> INT','primitive_type',1,'p_primitive_type','sintactico.py',121),
  ('primitive_type -> DOUBLE','primitive_type',1,'p_primitive_type','sintactico.py',122),
  ('primitive_type -> STRING','primitive_type',1,'p_primitive_type','sintactico.py',123),
  ('primitive_type -> BOOL','primitive_type',1,'p_primitive_type','sintactico.py',124),
  ('primitive_type -> VOID','primitive_type',1,'p_primitive_type','sintactico.py',125),
  ('primitive_type -> VAR','primitive_type',1,'p_primitive_type','sintactico.py',126),
  ('primitive_type -> DYNAMIC','primitive_type',1,'p_primitive_type','sintactico.py',127),
  ('generic_type -> ID MINSIGN type_list MAXSIGN','generic_type',4,'p_generic_type','sintactico.py',131),
  ('type_nullable -> primitive_type QMARK','type_nullable',2,'p_type_nullable','sintactico.py',135),
  ('expression -> expression NULLCOALESCING expression','expression',3,'p_expression_nullcoalescing','sintactico.py',139),
  ('type_list -> type_list COMMA declaration_type','type_list',3,'p_type_list','sintactico.py',143),
  ('type_list -> declaration_type','type_list',1,'p_type_list','sintactico.py',144),
  ('expression -> expression AND expression','expression',3,'p_expression_logical','sintactico.py',154),
  ('expression -> expression OR expression','expression',3,'p_expression_logical','sintactico.py',155),
  ('expression -> expression EQEQ expression','expression',3,'p_expression_relational','sintactico.py',159),
  ('expression -> expression NEQ expression','expression',3,'p_expression_relational','sintactico.py',160),
  ('expression -> expression MINSIGN expression','expression',3,'p_expression_relational','sintactico.py',161),
  ('expression -> expression MAXSIGN expression','expression',3,'p_expression_relational','sintactico.py',162),
  ('expression -> expression MINSIGNEQ expression','expression',3,'p_expression_relational','sintactico.py',163),
  ('expression -> expression MAXSIGNEQ expression','expression',3,'p_expression_relational','sintactico.py',164),
  ('expression -> expression IS declaration_type','expression',3,'p_expression_type_check','sintactico.py',168),
  ('expression -> expression IS NOT declaration_type','expression',4,'p_expression_type_check','sintactico.py',169),
  ('expression -> NOT expression','expression',2,'p_expression_not','sintactico.py',176),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','sintactico.py',180),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression_postfix','sintactico.py',184),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression_postfix','sintactico.py',185),
  ('expression -> expression DOT ID','expression',3,'p_expression_member_access','sintactico.py',189),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_subscript','sintactico.py',193),
  ('expression -> expression LPAREN arguments RPAREN','expression',4,'p_expression_call','sintactico.py',197),
  ('arguments -> expression_list','arguments',1,'p_arguments','sintactico.py',201),
  ('arguments -> empty','arguments',1,'p_arguments','sintactico.py',202),
  ('expression -> expression NOT','expression',2,'p_expression_null_assert','sintactico.py',206),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binaria','sintactico.py',210),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binaria','sintactico.py',211),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binaria','sintactico.py',212),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binaria','sintactico.py',213),
  ('expression -> expression INTDIV expression','expression',3,'p_expression_binaria','sintactico.py',214),
  ('expression -> expression MODULE expression','expression',3,'p_expression_binaria','sintactico.py',215),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',219),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',223),
  ('factor -> primitive_type DOT ID LPAREN arguments RPAREN','factor',6,'p_factor_static_call','sintactico.py',227),
  ('factor -> NUMBER','factor',1,'p_factor_number','sintactico.py',231),
  ('factor -> STRING_LITERAL','factor',1,'p_factor_string','sintactico.py',235),
  ('factor -> ID','factor',1,'p_factor_id','sintactico.py',239),
  ('factor -> TRUE','factor',1,'p_factor_id','sintactico.py',240),
  ('factor -> FALSE','factor',1,'p_factor_id','sintactico.py',241),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr_group','sintactico.py',248),
  ('instructions -> instruction instructions','instructions',2,'p_instructions','sintactico.py',253),
  ('instructions -> empty','instructions',1,'p_instructions','sintactico.py',254),
  ('instruction -> variable_declaration SEMICOLON','instruction',2,'p_instruction','sintactico.py',261),
  ('instruction -> expression SEMICOLON','instruction',2,'p_instruction','sintactico.py',262),
  ('instruction -> print_statement','instruction',1,'p_instruction','sintactico.py',263),
  ('instruction -> if_else','instruction',1,'p_instruction','sintactico.py',264),
  ('instruction -> while_loop','instruction',1,'p_instruction','sintactico.py',265),
  ('instruction -> for_loop','instruction',1,'p_instruction','sintactico.py',266),
  ('instruction -> return_statement','instruction',1,'p_instruction','sintactico.py',267),
  ('instruction -> block_statement','instruction',1,'p_instruction','sintactico.py',268),
  ('instruction -> throw_statement','instruction',1,'p_instruction','sintactico.py',269),
  ('instruction -> try_statement','instruction',1,'p_instruction','sintactico.py',270),
  ('instruction -> const_declaration SEMICOLON','instruction',2,'p_instruction','sintactico.py',271),
  ('instruction -> break_statement','instruction',1,'p_instruction','sintactico.py',272),
  ('instruction -> continue_statement','instruction',1,'p_instruction','sintactico.py',273),
  ('try_statement -> TRY block_statement catch_clauses','try_statement',3,'p_try_statement','sintactico.py',277),
  ('try_statement -> TRY block_statement catch_clauses finally_clause','try_statement',4,'p_try_statement','sintactico.py',278),
  ('try_statement -> TRY block_statement finally_clause','try_statement',3,'p_try_statement','sintactico.py',279),
  ('catch_clauses -> catch_clauses catch_clause','catch_clauses',2,'p_catch_clauses','sintactico.py',292),
  ('catch_clauses -> catch_clause','catch_clauses',1,'p_catch_clauses','sintactico.py',293),
  ('catch_clause -> CATCH LPAREN ID RPAREN block_statement','catch_clause',5,'p_catch_clause','sintactico.py',300),
  ('catch_clause -> CATCH LPAREN ID ID RPAREN block_statement','catch_clause',6,'p_catch_clause','sintactico.py',301),
  ('finally_clause -> FINALLY block_statement','finally_clause',2,'p_finally_clause','sintactico.py',310),
  ('block_statement -> LBRACE instructions RBRACE','block_statement',3,'p_block_statement','sintactico.py',315),
  ('throw_statement -> THROW expression SEMICOLON','throw_statement',3,'p_throw_statement','sintactico.py',319),
  ('variable_declaration -> declaration_type ID','variable_declaration',2,'p_variable_declaration','sintactico.py',324),
  ('variable_declaration -> declaration_type ID EQUALS expression','variable_declaration',4,'p_variable_declaration','sintactico.py',325),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_assignment','sintactico.py',332),
  ('expression -> expression PLUSEQ expression','expression',3,'p_expression_assignment','sintactico.py',333),
  ('expression -> expression MINUSEQ expression','expression',3,'p_expression_assignment','sintactico.py',334),
  ('expression -> expression TIMESEQ expression','expression',3,'p_expression_assignment','sintactico.py',335),
  ('expression -> expression DIVEQ expression','expression',3,'p_expression_assignment','sintactico.py',336),
  ('expression -> expression NULLASSIGN expression','expression',3,'p_expression_assignment','sintactico.py',337),
  ('expression -> expression QMARK expression COLON expression','expression',5,'p_expression_ternary','sintactico.py',341),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','sintactico.py',347),
  ('parameters -> parameters COMMA declaration_type ID','parameters',4,'p_parameters','sintactico.py',352),
  ('parameters -> declaration_type ID','parameters',2,'p_parameters','sintactico.py',353),
  ('parameters -> empty','parameters',1,'p_parameters','sintactico.py',354),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','sintactico.py',364),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','sintactico.py',365),
  ('body -> instructions','body',1,'p_body','sintactico.py',375),
  ('if_else -> IF LPAREN expression RPAREN instruction','if_else',5,'p_if_else','sintactico.py',384),
  ('if_else -> IF LPAREN expression RPAREN instruction ELSE instruction','if_else',7,'p_if_else','sintactico.py',385),
  ('while_loop -> WHILE LPAREN expression RPAREN instruction','while_loop',5,'p_while_loop','sintactico.py',393),
  ('for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction','for_loop',9,'p_for_loop','sintactico.py',398),
  ('for_initializer -> variable_declaration','for_initializer',1,'p_for_initializer','sintactico.py',402),
  ('for_initializer -> expression','for_initializer',1,'p_for_initializer','sintactico.py',403),
  ('for_initializer -> empty','for_initializer',1,'p_for_initializer','sintactico.py',404),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','sintactico.py',408),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','sintactico.py',409),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array','sintactico.py',415),
  ('expression -> LBRACE set_or_map_contents RBRACE','expression',3,'p_expression_set_or_map','sintactico.py',421),
  ('set_or_map_contents -> expression set_or_map_tail','set_or_map_contents',2,'p_set_or_map_contents','sintactico.py',425),
  ('set_or_map_contents -> empty','set_or_map_contents',1,'p_set_or_map_contents','sintactico.py',426),
  ('set_or_map_tail -> COLON expression map_tail','set_or_map_tail',3,'p_set_or_map_tail','sintactico.py',441),
  ('set_or_map_tail -> set_tail','set_or_map_tail',1,'p_set_or_map_tail','sintactico.py',442),
  ('map_tail -> COMMA map_entries','map_tail',2,'p_map_tail','sintactico.py',449),
  ('map_tail -> empty','map_tail',1,'p_map_tail','sintactico.py',450),
  ('map_entries -> map_entries COMMA map_entry','map_entries',3,'p_map_entries','sintactico.py',454),
  ('map_entries -> map_entry','map_entries',1,'p_map_entries','sintactico.py',455),
  ('map_entry -> expression COLON expression','map_entry',3,'p_map_entry','sintactico.py',462),
  ('set_tail -> COMMA expression_list','set_tail',2,'p_set_tail','sintactico.py',466),
  ('set_tail -> empty','set_tail',1,'p_set_tail','sintactico.py',467),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','sintactico.py',471),
  ('expression_list -> expression','expression_list',1,'p_expression_list','sintactico.py',472),
  ('expression_list -> empty','expression_list',1,'p_expression_list','sintactico.py',473),
  ('break_statement -> BREAK SEMICOLON','break_statement',2,'p_break_statement','sintactico.py',482),
  ('continue_statement -> CONTINUE SEMICOLON','continue_statement',2,'p_continue_statement','sintactico.py',486),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',491),
]
