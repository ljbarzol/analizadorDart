
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programrightEQUALSPLUSEQMINUSEQTIMESEQDIVEQNULLASSIGNleftORleftANDnonassocEQEQNEQnonassocMINSIGNMAXSIGNMINSIGNEQMAXSIGNEQISleftPLUSMINUSleftTIMESDIVIDEINTDIVrightELSErightU_NOTUMINUSleftPLUSPLUSMINUSMINUSleftDOTLBRACKETleftNOTAND BOOL BREAK CASE CATCH CLASS COLON COMMA COMMENT CONST CONTINUE DIVEQ DIVIDE DOT DOUBLE DYNAMIC ELSE EQEQ EQUALS EXTENDS FINAL FINALLY FOR ID IF IMPLEMENTS IMPORT INT INTDIV IS LBRACE LBRACKET LPAREN MAIN MAXSIGN MAXSIGNEQ MINSIGN MINSIGNEQ MINUS MINUSEQ MINUSMINUS MODULE NEQ NOT NULLASSIGN NULLCOALESCING NUMBER OR PLUS PLUSEQ PLUSPLUS PRINT QMARK QMARK_DOT RBRACE RBRACKET RETURN RPAREN SEMICOLON SQUOTE STRING STRING_LITERAL SWITCH THEN THIS THROW TIMES TIMESEQ TRY VAR VOID WHILEprogram : declaration_listdeclaration_list : declaration_list declaration\n                        | emptydeclaration : class\n                   | function_declaration\n                   | variable_declaration SEMICOLON\n                   | import_statement\n                   | const_declaration SEMICOLONimport_statement : IMPORT STRING_LITERAL SEMICOLONconst_declaration : CONST declaration_type ID EQUALS expressionclass : CLASS ID LBRACE class_body RBRACEclass_body : class_member class_body\n                  | emptyclass_member : class_property\n                    | function_declaration\n                    | constructor_declarationfunction_declaration : declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACEfunction_name : ID\n                     | MAINclass_property : declaration_type ID SEMICOLONconstructor_declaration : ID LPAREN constructor_params RPAREN SEMICOLONconstructor_params : constructor_param_list\n                          | emptyconstructor_param_list : constructor_param_list COMMA constructor_param\n                              | constructor_paramconstructor_param : THIS DOT IDdeclaration_type : primitive_type\n                        | generic_type\n                        | type_nullable\n                        | IDprimitive_type : INT\n                      | DOUBLE\n                      | STRING\n                      | BOOL\n                      | VOID\n                      | VAR\n                      | DYNAMICgeneric_type : ID MINSIGN type_list MAXSIGNtype_nullable : primitive_type QMARKexpression : expression NULLCOALESCING expressiontype_list : type_list COMMA declaration_type\n                 | declaration_typeexpression : expression AND expression\n                  | expression OR expressionexpression : expression EQEQ expression\n                  | expression NEQ expression\n                  | expression MINSIGN expression\n                  | expression MAXSIGN expression\n                  | expression MINSIGNEQ expression\n                  | expression MAXSIGNEQ expressionexpression : expression IS declaration_type\n                  | expression IS NOT declaration_typeexpression : NOT expression %prec U_NOTexpression : MINUS expression %prec UMINUSexpression : expression PLUSPLUS\n                  | expression MINUSMINUSexpression : expression DOT IDexpression : expression LBRACKET expression RBRACKETexpression : expression LPAREN arguments RPARENarguments : expression_list\n                 | emptyexpression : expression NOTexpression : expression PLUS expression\n                    | expression MINUS expression\n                    | expression TIMES expression\n                    | expression DIVIDE expression\n                    | expression INTDIV expressionexpression : termterm : factorfactor : primitive_type DOT ID LPAREN arguments RPARENfactor : NUMBERfactor : STRING_LITERALfactor : IDfactor : LPAREN expression RPARENinstructions : instruction instructions\n                    | emptyinstruction : variable_declaration SEMICOLON\n                    | expression SEMICOLON\n                    | print_statement\n                    | if_else\n                    | while_loop\n                    | for_loop\n                    | return_statement\n                    | block_statement\n                    | throw_statement\n                    | try_statementblock_statement : LBRACE instructions RBRACEthrow_statement : THROW expression SEMICOLONvariable_declaration : declaration_type ID\n                            | declaration_type ID EQUALS expressionexpression : expression EQUALS expression\n                  | expression PLUSEQ expression\n                  | expression MINUSEQ expression\n                  | expression TIMESEQ expression\n                  | expression DIVEQ expression\n                  | expression NULLASSIGN expressionexpression : expression QMARK expression COLON expressionprint_statement : PRINT LPAREN expression RPAREN SEMICOLONparameters : parameters COMMA declaration_type ID\n                  | declaration_type ID\n                  | emptyreturn_statement : RETURN expression SEMICOLON\n                        | RETURN SEMICOLONbody : instructionsif_else : IF LPAREN expression RPAREN instruction\n               | IF LPAREN expression RPAREN instruction ELSE instructionwhile_loop : WHILE LPAREN expression RPAREN instructionfor_loop : FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instructionfor_initializer : variable_declaration\n                       | expression\n                       | emptyexpression_opt : expression\n                      | emptyexpression : LBRACKET expression_list RBRACKETexpression : LBRACE set_or_map_contents RBRACEset_or_map_contents : expression set_or_map_tail\n                           | emptyset_or_map_tail : COLON expression map_tail\n                       | set_tailmap_tail : COMMA map_entries\n                | emptymap_entries : map_entries COMMA map_entry\n                   | map_entrymap_entry : expression COLON expressionset_tail : COMMA expression_list\n                | emptyexpression_list : expression COMMA expression_list\n                        | expression\n                        | emptytry_statement : TRY block_statement catch_clauses\n                     | TRY block_statement catch_clauses finally_clause\n                     | TRY block_statement finally_clausecatch_clauses : catch_clauses catch_clause\n                     | catch_clausecatch_clause : CATCH LPAREN ID ID RPAREN block_statement\n                    | CATCH LPAREN ID RPAREN block_statementfinally_clause : FINALLY block_statementempty :'
    
_lr_action_items = {'CLASS':([0,2,3,4,5,6,8,25,26,40,69,207,],[-138,10,-3,-2,-4,-5,-7,-6,-8,-9,-11,-17,]),'IMPORT':([0,2,3,4,5,6,8,25,26,40,69,207,],[-138,13,-3,-2,-4,-5,-7,-6,-8,-9,-11,-17,]),'CONST':([0,2,3,4,5,6,8,25,26,40,69,207,],[-138,14,-3,-2,-4,-5,-7,-6,-8,-9,-11,-17,]),'ID':([0,2,3,4,5,6,8,10,11,12,14,15,16,17,18,19,20,21,22,23,24,25,26,28,33,34,35,38,39,40,42,44,46,47,48,49,50,51,52,57,58,59,60,62,67,69,75,76,77,78,79,80,81,82,83,84,85,86,90,91,92,93,94,95,96,97,98,99,100,101,102,103,113,120,121,122,134,152,156,158,163,164,165,168,172,173,174,175,176,177,178,179,180,185,186,188,193,197,198,205,206,207,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,251,252,253,254,255,256,260,263,264,267,270,271,272,273,],[-138,11,-3,-2,-4,-5,-7,27,-30,30,11,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-6,-8,11,41,-39,42,11,55,-9,-30,42,-14,-15,-16,71,-38,11,73,55,55,55,55,55,55,-11,11,55,55,55,55,55,55,55,55,55,55,11,135,55,55,55,55,55,55,55,55,55,55,55,55,55,160,-20,180,189,11,55,55,55,200,201,205,180,-79,-80,-81,-82,-83,-84,-85,-86,-30,55,55,-27,55,55,-21,-30,-27,-17,-77,-78,55,55,55,180,-103,180,55,-87,-102,-88,-130,-132,-134,180,180,55,-131,-133,-137,260,55,55,-98,-105,-107,265,180,55,-106,-136,180,-135,-108,]),'INT':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,67,69,75,76,77,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,120,121,134,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,193,197,198,207,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,252,253,254,255,256,263,264,267,270,271,272,273,],[-138,18,-3,-2,-4,-5,-7,18,-6,-8,18,18,18,18,-9,18,-14,-15,-16,18,18,18,18,18,18,18,-11,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-20,18,18,18,18,18,18,18,-79,-80,-81,-82,-83,-84,-85,-86,18,18,18,18,-21,-17,-77,-78,18,18,18,18,-103,18,18,-87,-102,-88,-130,-132,-134,18,18,18,-131,-133,-137,18,18,-98,-105,-107,18,18,-106,-136,18,-135,-108,]),'DOUBLE':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,67,69,75,76,77,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,120,121,134,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,193,197,198,207,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,252,253,254,255,256,263,264,267,270,271,272,273,],[-138,19,-3,-2,-4,-5,-7,19,-6,-8,19,19,19,19,-9,19,-14,-15,-16,19,19,19,19,19,19,19,-11,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-20,19,19,19,19,19,19,19,-79,-80,-81,-82,-83,-84,-85,-86,19,19,19,19,-21,-17,-77,-78,19,19,19,19,-103,19,19,-87,-102,-88,-130,-132,-134,19,19,19,-131,-133,-137,19,19,-98,-105,-107,19,19,-106,-136,19,-135,-108,]),'STRING':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,67,69,75,76,77,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,120,121,134,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,193,197,198,207,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,252,253,254,255,256,263,264,267,270,271,272,273,],[-138,20,-3,-2,-4,-5,-7,20,-6,-8,20,20,20,20,-9,20,-14,-15,-16,20,20,20,20,20,20,20,-11,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-20,20,20,20,20,20,20,20,-79,-80,-81,-82,-83,-84,-85,-86,20,20,20,20,-21,-17,-77,-78,20,20,20,20,-103,20,20,-87,-102,-88,-130,-132,-134,20,20,20,-131,-133,-137,20,20,-98,-105,-107,20,20,-106,-136,20,-135,-108,]),'BOOL':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,67,69,75,76,77,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,120,121,134,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,193,197,198,207,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,252,253,254,255,256,263,264,267,270,271,272,273,],[-138,21,-3,-2,-4,-5,-7,21,-6,-8,21,21,21,21,-9,21,-14,-15,-16,21,21,21,21,21,21,21,-11,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-20,21,21,21,21,21,21,21,-79,-80,-81,-82,-83,-84,-85,-86,21,21,21,21,-21,-17,-77,-78,21,21,21,21,-103,21,21,-87,-102,-88,-130,-132,-134,21,21,21,-131,-133,-137,21,21,-98,-105,-107,21,21,-106,-136,21,-135,-108,]),'VOID':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,67,69,75,76,77,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,120,121,134,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,193,197,198,207,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,252,253,254,255,256,263,264,267,270,271,272,273,],[-138,22,-3,-2,-4,-5,-7,22,-6,-8,22,22,22,22,-9,22,-14,-15,-16,22,22,22,22,22,22,22,-11,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-20,22,22,22,22,22,22,22,-79,-80,-81,-82,-83,-84,-85,-86,22,22,22,22,-21,-17,-77,-78,22,22,22,22,-103,22,22,-87,-102,-88,-130,-132,-134,22,22,22,-131,-133,-137,22,22,-98,-105,-107,22,22,-106,-136,22,-135,-108,]),'VAR':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,67,69,75,76,77,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,120,121,134,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,193,197,198,207,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,252,253,254,255,256,263,264,267,270,271,272,273,],[-138,23,-3,-2,-4,-5,-7,23,-6,-8,23,23,23,23,-9,23,-14,-15,-16,23,23,23,23,23,23,23,-11,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-20,23,23,23,23,23,23,23,-79,-80,-81,-82,-83,-84,-85,-86,23,23,23,23,-21,-17,-77,-78,23,23,23,23,-103,23,23,-87,-102,-88,-130,-132,-134,23,23,23,-131,-133,-137,23,23,-98,-105,-107,23,23,-106,-136,23,-135,-108,]),'DYNAMIC':([0,2,3,4,5,6,8,14,25,26,28,35,38,39,40,44,46,47,48,51,57,58,59,60,62,67,69,75,76,77,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,120,121,134,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,193,197,198,207,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,252,253,254,255,256,263,264,267,270,271,272,273,],[-138,24,-3,-2,-4,-5,-7,24,-6,-8,24,24,24,24,-9,24,-14,-15,-16,24,24,24,24,24,24,24,-11,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-20,24,24,24,24,24,24,24,-79,-80,-81,-82,-83,-84,-85,-86,24,24,24,24,-21,-17,-77,-78,24,24,24,24,-103,24,24,-87,-102,-88,-130,-132,-134,24,24,24,-131,-133,-137,24,24,-98,-105,-107,24,24,-106,-136,24,-135,-108,]),'$end':([0,1,2,3,4,5,6,8,25,26,40,69,207,],[-138,0,-1,-3,-2,-4,-5,-7,-6,-8,-9,-11,-17,]),'SEMICOLON':([7,9,11,15,16,17,18,19,20,21,22,23,24,30,32,34,50,55,56,61,63,65,66,71,87,88,89,104,105,114,123,124,125,126,127,128,129,130,131,132,133,135,140,141,142,143,144,145,146,147,148,149,151,153,154,161,170,171,180,185,190,191,192,201,203,205,214,215,217,220,229,230,231,232,243,244,247,257,258,259,],[25,26,-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-89,40,-39,-38,-73,-90,-68,-69,-71,-72,120,-62,-55,-56,-53,-54,-10,-91,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,-63,-64,-65,-66,-67,-92,-93,-94,-95,-96,-114,-74,-115,198,209,210,-73,216,-52,-58,-59,-89,210,-73,-138,233,234,-97,247,-109,-110,-111,-70,254,-138,264,-112,-113,]),'MAIN':([11,12,15,16,17,18,19,20,21,22,23,24,34,42,49,50,],[-30,31,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-30,31,-38,]),'MAXSIGN':([11,15,16,17,18,19,20,21,22,23,24,34,36,37,50,55,56,61,63,65,66,72,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,50,-42,-38,-73,83,-68,-69,-71,-72,-41,-62,-55,-56,-53,-54,83,83,83,83,83,83,83,83,83,83,None,None,None,None,-51,-57,83,-63,-64,-65,-66,-67,83,83,83,83,83,83,-114,-74,-115,83,-73,-52,-58,-59,83,83,-73,83,83,83,83,83,83,83,83,-70,83,83,]),'COMMA':([11,15,16,17,18,19,20,21,22,23,24,34,36,37,38,50,53,54,55,61,63,65,66,72,73,87,88,89,104,105,107,111,116,118,123,124,125,126,127,128,129,130,131,132,133,135,140,141,142,143,144,145,146,147,148,149,151,153,154,189,190,191,192,195,199,200,203,205,220,240,241,243,261,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,51,-42,-138,-38,75,-101,-73,-68,-69,-71,-72,-41,-100,-62,-55,-56,-53,-54,152,158,162,-25,-91,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,-63,-64,-65,-66,-67,-92,-93,-94,-95,-96,-114,-74,-115,-99,-52,-58,-59,222,-24,-26,158,-73,-97,252,-123,-70,-122,-124,]),'NULLCOALESCING':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,77,-68,-69,-71,-72,-62,-55,-56,-53,-54,77,77,77,77,-91,77,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,77,-63,-64,-65,-66,-67,-92,-93,-94,-95,-96,77,-114,-74,-115,77,-73,-52,-58,-59,77,77,-73,77,77,77,77,77,77,77,77,-70,77,77,]),'AND':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,78,-68,-69,-71,-72,-62,-55,-56,-53,-54,78,78,78,78,78,78,-43,78,-45,-46,-47,-48,-49,-50,-51,-57,78,-63,-64,-65,-66,-67,78,78,78,78,78,78,-114,-74,-115,78,-73,-52,-58,-59,78,78,-73,78,78,78,78,78,78,78,78,-70,78,78,]),'OR':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,79,-68,-69,-71,-72,-62,-55,-56,-53,-54,79,79,79,79,79,79,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,79,-63,-64,-65,-66,-67,79,79,79,79,79,79,-114,-74,-115,79,-73,-52,-58,-59,79,79,-73,79,79,79,79,79,79,79,79,-70,79,79,]),'EQEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,80,-68,-69,-71,-72,-62,-55,-56,-53,-54,80,80,80,80,80,80,80,80,None,None,-47,-48,-49,-50,-51,-57,80,-63,-64,-65,-66,-67,80,80,80,80,80,80,-114,-74,-115,80,-73,-52,-58,-59,80,80,-73,80,80,80,80,80,80,80,80,-70,80,80,]),'NEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,81,-68,-69,-71,-72,-62,-55,-56,-53,-54,81,81,81,81,81,81,81,81,None,None,-47,-48,-49,-50,-51,-57,81,-63,-64,-65,-66,-67,81,81,81,81,81,81,-114,-74,-115,81,-73,-52,-58,-59,81,81,-73,81,81,81,81,81,81,81,81,-70,81,81,]),'MINSIGN':([11,15,16,17,18,19,20,21,22,23,24,34,42,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[28,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,28,-38,-73,82,-68,-69,-71,-72,-62,-55,-56,-53,-54,82,82,82,82,82,82,82,82,82,82,None,None,None,None,-51,-57,82,-63,-64,-65,-66,-67,82,82,82,82,82,82,-114,-74,-115,82,28,-52,-58,-59,82,82,28,82,82,82,82,82,82,82,82,-70,82,82,]),'MINSIGNEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,84,-68,-69,-71,-72,-62,-55,-56,-53,-54,84,84,84,84,84,84,84,84,84,84,None,None,None,None,-51,-57,84,-63,-64,-65,-66,-67,84,84,84,84,84,84,-114,-74,-115,84,-73,-52,-58,-59,84,84,-73,84,84,84,84,84,84,84,84,-70,84,84,]),'MAXSIGNEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,85,-68,-69,-71,-72,-62,-55,-56,-53,-54,85,85,85,85,85,85,85,85,85,85,None,None,None,None,-51,-57,85,-63,-64,-65,-66,-67,85,85,85,85,85,85,-114,-74,-115,85,-73,-52,-58,-59,85,85,-73,85,85,85,85,85,85,85,85,-70,85,85,]),'IS':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,86,-68,-69,-71,-72,-62,-55,-56,-53,-54,86,86,86,86,86,86,86,86,86,86,86,86,86,86,-51,-57,86,-63,-64,-65,-66,-67,86,86,86,86,86,86,-114,-74,-115,86,-73,-52,-58,-59,86,86,-73,86,86,86,86,86,86,86,86,-70,86,86,]),'PLUSPLUS':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,88,-68,-69,-71,-72,-62,-55,-56,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-51,-57,88,88,88,88,88,88,88,88,88,88,88,88,-114,-74,-115,88,-73,-52,-58,-59,88,88,-73,88,88,88,88,88,88,88,88,-70,88,88,]),'MINUSMINUS':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,89,-68,-69,-71,-72,-62,-55,-56,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-51,-57,89,89,89,89,89,89,89,89,89,89,89,89,-114,-74,-115,89,-73,-52,-58,-59,89,89,-73,89,89,89,89,89,89,89,89,-70,89,89,]),'DOT':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,64,65,66,87,88,89,104,105,107,109,111,114,119,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,188,190,191,192,195,203,205,206,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,90,-68,-69,113,-71,-72,-62,-55,-56,90,90,90,90,90,90,163,90,90,90,90,90,90,90,90,90,90,-51,-57,90,90,90,90,90,90,90,90,90,90,90,90,-114,-74,-115,90,-73,113,-52,-58,-59,90,90,-73,113,90,90,90,90,90,90,90,90,-70,90,90,]),'LBRACKET':([11,15,16,17,18,19,20,21,22,23,24,34,39,50,55,56,57,58,59,60,61,62,63,65,66,67,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,109,111,114,121,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,158,165,168,171,172,173,174,175,176,177,178,179,180,185,186,190,191,192,193,195,197,203,205,209,210,211,212,213,214,215,216,217,219,220,222,225,226,227,228,231,233,234,235,236,237,242,243,245,246,247,248,249,250,252,253,254,255,256,258,262,263,264,267,270,271,272,273,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,59,-38,-73,91,59,59,59,59,-68,59,-69,-71,-72,59,59,59,59,59,59,59,59,59,59,59,-62,-55,-56,59,59,59,59,59,59,59,59,59,59,59,59,59,91,91,91,91,91,91,59,91,91,91,91,91,91,91,91,91,91,-51,-57,91,91,91,91,91,91,91,91,91,91,91,91,-114,59,-74,-115,59,59,59,59,91,-79,-80,-81,-82,-83,-84,-85,-86,-73,59,59,-52,-58,-59,59,91,59,91,-73,-77,-78,59,59,59,59,91,-103,91,59,91,59,-87,91,91,91,91,-102,-88,-130,-132,-134,91,-70,59,59,59,-131,-133,-137,59,59,-98,-105,-107,91,91,59,59,-106,-136,59,-135,-108,]),'LPAREN':([11,15,16,17,18,19,20,21,22,23,24,29,30,31,34,39,42,50,55,56,57,58,59,60,61,62,63,65,66,67,71,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,109,111,114,121,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,158,160,165,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,190,191,192,193,195,197,203,205,209,210,211,212,213,214,215,216,217,219,220,222,225,226,227,228,231,233,234,235,236,237,239,242,243,245,246,247,248,249,250,252,253,254,255,256,258,262,263,264,267,270,271,272,273,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,38,-18,-19,-39,60,68,-38,-73,92,60,60,60,60,-68,60,-69,-71,-72,60,-18,60,60,60,60,60,60,60,60,60,60,-62,-55,-56,60,60,60,60,60,60,60,60,60,60,60,60,60,-53,-54,92,92,92,92,60,-91,92,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,92,-63,-64,-65,-66,-67,-92,-93,-94,-95,-96,92,-114,60,-74,-115,60,60,197,60,60,92,-79,-80,-81,-82,-83,-84,-85,-86,-73,211,212,213,214,60,60,-52,-58,-59,60,92,60,92,-73,-77,-78,60,60,60,60,92,-103,92,60,92,60,-87,92,92,92,92,-102,-88,-130,-132,-134,251,92,-70,60,60,60,-131,-133,-137,60,60,-98,-105,-107,92,92,60,60,-106,-136,60,-135,-108,]),'NOT':([11,15,16,17,18,19,20,21,22,23,24,34,39,50,55,56,57,58,59,60,61,62,63,65,66,67,76,77,78,79,80,81,82,83,84,85,86,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,109,111,114,121,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,158,165,168,171,172,173,174,175,176,177,178,179,180,185,186,190,191,192,193,195,197,203,205,209,210,211,212,213,214,215,216,217,219,220,222,225,226,227,228,231,233,234,235,236,237,242,243,245,246,247,248,249,250,252,253,254,255,256,258,262,263,264,267,270,271,272,273,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,57,-38,-73,87,57,57,57,57,-68,57,-69,-71,-72,57,57,57,57,57,57,57,57,57,57,57,134,-62,-55,-56,57,57,57,57,57,57,57,57,57,57,57,57,57,87,87,87,87,87,87,57,87,87,87,87,87,87,87,87,87,87,-51,-57,87,87,87,87,87,87,87,87,87,87,87,87,-114,57,-74,-115,57,57,57,57,87,-79,-80,-81,-82,-83,-84,-85,-86,-73,57,57,-52,-58,-59,57,87,57,87,-73,-77,-78,57,57,57,57,87,-103,87,57,87,57,-87,87,87,87,87,-102,-88,-130,-132,-134,87,-70,57,57,57,-131,-133,-137,57,57,-98,-105,-107,87,87,57,57,-106,-136,57,-135,-108,]),'PLUS':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,93,-68,-69,-71,-72,-62,-55,-56,-53,-54,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-51,-57,93,-63,-64,-65,-66,-67,93,93,93,93,93,93,-114,-74,-115,93,-73,-52,-58,-59,93,93,-73,93,93,93,93,93,93,93,93,-70,93,93,]),'MINUS':([11,15,16,17,18,19,20,21,22,23,24,34,39,50,55,56,57,58,59,60,61,62,63,65,66,67,76,77,78,79,80,81,82,83,84,85,87,88,89,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,109,111,114,121,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,156,158,165,168,171,172,173,174,175,176,177,178,179,180,185,186,190,191,192,193,195,197,203,205,209,210,211,212,213,214,215,216,217,219,220,222,225,226,227,228,231,233,234,235,236,237,242,243,245,246,247,248,249,250,252,253,254,255,256,258,262,263,264,267,270,271,272,273,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,58,-38,-73,94,58,58,58,58,-68,58,-69,-71,-72,58,58,58,58,58,58,58,58,58,58,58,-62,-55,-56,58,58,58,58,58,58,58,58,58,58,58,58,58,-53,-54,94,94,94,94,58,94,94,94,94,94,94,94,94,94,94,-51,-57,94,-63,-64,-65,-66,-67,94,94,94,94,94,94,-114,58,-74,-115,58,58,58,58,94,-79,-80,-81,-82,-83,-84,-85,-86,-73,58,58,-52,-58,-59,58,94,58,94,-73,-77,-78,58,58,58,58,94,-103,94,58,94,58,-87,94,94,94,94,-102,-88,-130,-132,-134,94,-70,58,58,58,-131,-133,-137,58,58,-98,-105,-107,94,94,58,58,-106,-136,58,-135,-108,]),'TIMES':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,95,-68,-69,-71,-72,-62,-55,-56,-53,-54,95,95,95,95,95,95,95,95,95,95,95,95,95,95,-51,-57,95,95,95,-65,-66,-67,95,95,95,95,95,95,-114,-74,-115,95,-73,-52,-58,-59,95,95,-73,95,95,95,95,95,95,95,95,-70,95,95,]),'DIVIDE':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,96,-68,-69,-71,-72,-62,-55,-56,-53,-54,96,96,96,96,96,96,96,96,96,96,96,96,96,96,-51,-57,96,96,96,-65,-66,-67,96,96,96,96,96,96,-114,-74,-115,96,-73,-52,-58,-59,96,96,-73,96,96,96,96,96,96,96,96,-70,96,96,]),'INTDIV':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,97,-68,-69,-71,-72,-62,-55,-56,-53,-54,97,97,97,97,97,97,97,97,97,97,97,97,97,97,-51,-57,97,97,97,-65,-66,-67,97,97,97,97,97,97,-114,-74,-115,97,-73,-52,-58,-59,97,97,-73,97,97,97,97,97,97,97,97,-70,97,97,]),'EQUALS':([11,15,16,17,18,19,20,21,22,23,24,30,34,41,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,201,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,39,-39,67,-38,-73,76,-68,-69,-71,-72,-62,-55,-56,-53,-54,76,76,76,76,76,76,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,76,-63,-64,-65,-66,-67,76,76,76,76,76,76,-114,-74,-115,76,-73,-52,-58,-59,76,39,76,-73,76,76,76,76,76,76,76,76,-70,76,76,]),'PLUSEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,98,-68,-69,-71,-72,-62,-55,-56,-53,-54,98,98,98,98,98,98,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,98,-63,-64,-65,-66,-67,98,98,98,98,98,98,-114,-74,-115,98,-73,-52,-58,-59,98,98,-73,98,98,98,98,98,98,98,98,-70,98,98,]),'MINUSEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,99,-68,-69,-71,-72,-62,-55,-56,-53,-54,99,99,99,99,99,99,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,99,-63,-64,-65,-66,-67,99,99,99,99,99,99,-114,-74,-115,99,-73,-52,-58,-59,99,99,-73,99,99,99,99,99,99,99,99,-70,99,99,]),'TIMESEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,100,-68,-69,-71,-72,-62,-55,-56,-53,-54,100,100,100,100,100,100,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,100,-63,-64,-65,-66,-67,100,100,100,100,100,100,-114,-74,-115,100,-73,-52,-58,-59,100,100,-73,100,100,100,100,100,100,100,100,-70,100,100,]),'DIVEQ':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,101,-68,-69,-71,-72,-62,-55,-56,-53,-54,101,101,101,101,101,101,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,101,-63,-64,-65,-66,-67,101,101,101,101,101,101,-114,-74,-115,101,-73,-52,-58,-59,101,101,-73,101,101,101,101,101,101,101,101,-70,101,101,]),'NULLASSIGN':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,190,191,192,195,203,205,215,217,220,226,227,228,231,242,243,258,262,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,102,-68,-69,-71,-72,-62,-55,-56,-53,-54,102,102,102,102,102,102,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,102,-63,-64,-65,-66,-67,102,102,102,102,102,102,-114,-74,-115,102,-73,-52,-58,-59,102,102,-73,102,102,102,102,102,102,102,102,-70,102,102,]),'QMARK':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,56,61,63,65,66,87,88,89,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,150,151,153,154,171,180,188,190,191,192,195,203,205,206,215,217,220,226,227,228,231,242,243,258,262,],[-30,34,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,103,-68,-69,-71,-72,-62,-55,-56,-53,-54,103,103,103,103,-91,103,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,103,-63,-64,-65,-66,-67,-92,-93,-94,-95,-96,103,-114,-74,-115,103,-73,34,-52,-58,-59,103,103,-73,34,103,103,103,103,103,103,103,103,-70,103,103,]),'RBRACKET':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,59,61,63,65,66,87,88,89,104,105,106,107,108,123,124,125,126,127,128,129,130,131,132,133,135,136,140,141,142,143,144,145,146,147,148,149,151,152,153,154,190,191,192,194,220,243,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,-138,-68,-69,-71,-72,-62,-55,-56,-53,-54,151,-128,-129,-91,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,191,-63,-64,-65,-66,-67,-92,-93,-94,-95,-96,-114,-138,-74,-115,-52,-58,-59,-127,-97,-70,]),'RPAREN':([11,15,16,17,18,19,20,21,22,23,24,34,38,50,53,54,55,61,63,65,66,68,73,87,88,89,92,104,105,107,108,109,115,116,117,118,123,124,125,126,127,128,129,130,131,132,133,135,137,138,139,140,141,142,143,144,145,146,147,148,149,151,152,153,154,189,190,191,192,194,197,199,200,220,224,226,227,228,243,258,259,260,264,265,268,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-138,-38,74,-101,-73,-68,-69,-71,-72,-138,-100,-62,-55,-56,-138,-53,-54,-128,-129,153,161,-22,-23,-25,-91,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,192,-60,-61,-63,-64,-65,-66,-67,-92,-93,-94,-95,-96,-114,-138,-74,-115,-99,-52,-58,-59,-127,-138,-24,-26,-97,243,244,245,246,-70,-112,-113,266,-138,269,271,]),'COLON':([11,15,16,17,18,19,20,21,22,23,24,34,50,55,61,63,65,66,87,88,89,104,105,111,123,124,125,126,127,128,129,130,131,132,133,135,140,141,142,143,144,145,146,147,148,149,150,151,153,154,190,191,192,203,205,220,242,243,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-38,-73,-68,-69,-71,-72,-62,-55,-56,-53,-54,156,-91,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,-63,-64,-65,-66,-67,-92,-93,-94,-95,-96,193,-114,-74,-115,-52,-58,-59,156,-73,-97,253,-70,]),'RBRACE':([11,15,16,17,18,19,20,21,22,23,24,34,35,43,44,45,46,47,48,50,55,61,62,63,65,66,70,87,88,89,104,105,107,108,110,111,112,120,121,123,124,125,126,127,128,129,130,131,132,133,135,140,141,142,143,144,145,146,147,148,149,151,152,153,154,155,157,158,159,165,166,167,168,169,172,173,174,175,176,177,178,179,190,191,192,194,195,196,198,202,203,204,205,207,208,209,210,216,219,220,221,223,225,233,234,235,236,237,240,241,243,248,249,250,254,255,256,261,262,267,270,272,273,],[-30,-27,-28,-29,-31,-32,-33,-34,-35,-36,-37,-39,-138,69,-138,-13,-14,-15,-16,-38,-73,-68,-138,-69,-71,-72,-12,-62,-55,-56,-53,-54,-128,-129,154,-138,-117,-20,-138,-91,-40,-43,-44,-45,-46,-47,-48,-49,-50,-51,-57,-63,-64,-65,-66,-67,-92,-93,-94,-95,-96,-114,-138,-74,-115,-116,-119,-138,-126,-138,207,-104,-138,-76,-79,-80,-81,-82,-83,-84,-85,-86,-52,-58,-59,-127,-138,-125,-21,225,-138,-76,-73,-17,-75,-77,-78,-103,-138,-97,-118,-121,-87,-102,-88,-130,-132,-134,-120,-123,-70,-131,-133,-137,-98,-105,-107,-122,-124,-106,-136,-135,-108,]),'STRING_LITERAL':([13,39,57,58,59,60,62,67,76,77,78,79,80,81,82,83,84,85,91,92,93,94,95,96,97,98,99,100,101,102,103,121,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,193,197,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,252,253,254,255,256,263,264,267,270,271,272,273,],[32,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,-79,-80,-81,-82,-83,-84,-85,-86,66,66,66,66,-77,-78,66,66,66,66,-103,66,66,-87,-102,-88,-130,-132,-134,66,66,66,-131,-133,-137,66,66,-98,-105,-107,66,66,-106,-136,66,-135,-108,]),'LBRACE':([27,39,57,58,59,60,62,67,74,76,77,78,79,80,81,82,83,84,85,91,92,93,94,95,96,97,98,99,100,101,102,103,121,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,187,193,197,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,238,245,246,247,248,249,250,252,253,254,255,256,263,264,266,267,269,270,271,272,273,],[35,62,62,62,62,62,62,62,121,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,165,62,62,62,165,165,-79,-80,-81,-82,-83,-84,-85,-86,62,62,219,62,62,-77,-78,62,62,62,62,-103,165,62,-87,-102,-88,-130,-132,-134,219,165,165,62,-131,-133,-137,62,62,-98,-105,-107,165,62,219,-106,219,-136,165,-135,-108,]),'NUMBER':([39,57,58,59,60,62,67,76,77,78,79,80,81,82,83,84,85,91,92,93,94,95,96,97,98,99,100,101,102,103,121,152,156,158,165,168,172,173,174,175,176,177,178,179,185,186,193,197,209,210,211,212,213,214,216,219,222,225,233,234,235,236,237,245,246,247,248,249,250,252,253,254,255,256,263,264,267,270,271,272,273,],[65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,-79,-80,-81,-82,-83,-84,-85,-86,65,65,65,65,-77,-78,65,65,65,65,-103,65,65,-87,-102,-88,-130,-132,-134,65,65,65,-131,-133,-137,65,65,-98,-105,-107,65,65,-106,-136,65,-135,-108,]),'THIS':([68,162,],[119,119,]),'PRINT':([121,165,168,172,173,174,175,176,177,178,179,209,210,216,219,225,233,234,235,236,237,245,246,248,249,250,254,255,256,263,267,270,271,272,273,],[181,181,181,-79,-80,-81,-82,-83,-84,-85,-86,-77,-78,-103,181,-87,-102,-88,-130,-132,-134,181,181,-131,-133,-137,-98,-105,-107,181,-106,-136,181,-135,-108,]),'IF':([121,165,168,172,173,174,175,176,177,178,179,209,210,216,219,225,233,234,235,236,237,245,246,248,249,250,254,255,256,263,267,270,271,272,273,],[182,182,182,-79,-80,-81,-82,-83,-84,-85,-86,-77,-78,-103,182,-87,-102,-88,-130,-132,-134,182,182,-131,-133,-137,-98,-105,-107,182,-106,-136,182,-135,-108,]),'WHILE':([121,165,168,172,173,174,175,176,177,178,179,209,210,216,219,225,233,234,235,236,237,245,246,248,249,250,254,255,256,263,267,270,271,272,273,],[183,183,183,-79,-80,-81,-82,-83,-84,-85,-86,-77,-78,-103,183,-87,-102,-88,-130,-132,-134,183,183,-131,-133,-137,-98,-105,-107,183,-106,-136,183,-135,-108,]),'FOR':([121,165,168,172,173,174,175,176,177,178,179,209,210,216,219,225,233,234,235,236,237,245,246,248,249,250,254,255,256,263,267,270,271,272,273,],[184,184,184,-79,-80,-81,-82,-83,-84,-85,-86,-77,-78,-103,184,-87,-102,-88,-130,-132,-134,184,184,-131,-133,-137,-98,-105,-107,184,-106,-136,184,-135,-108,]),'RETURN':([121,165,168,172,173,174,175,176,177,178,179,209,210,216,219,225,233,234,235,236,237,245,246,248,249,250,254,255,256,263,267,270,271,272,273,],[185,185,185,-79,-80,-81,-82,-83,-84,-85,-86,-77,-78,-103,185,-87,-102,-88,-130,-132,-134,185,185,-131,-133,-137,-98,-105,-107,185,-106,-136,185,-135,-108,]),'THROW':([121,165,168,172,173,174,175,176,177,178,179,209,210,216,219,225,233,234,235,236,237,245,246,248,249,250,254,255,256,263,267,270,271,272,273,],[186,186,186,-79,-80,-81,-82,-83,-84,-85,-86,-77,-78,-103,186,-87,-102,-88,-130,-132,-134,186,186,-131,-133,-137,-98,-105,-107,186,-106,-136,186,-135,-108,]),'TRY':([121,165,168,172,173,174,175,176,177,178,179,209,210,216,219,225,233,234,235,236,237,245,246,248,249,250,254,255,256,263,267,270,271,272,273,],[187,187,187,-79,-80,-81,-82,-83,-84,-85,-86,-77,-78,-103,187,-87,-102,-88,-130,-132,-134,187,187,-131,-133,-137,-98,-105,-107,187,-106,-136,187,-135,-108,]),'ELSE':([172,173,174,175,176,177,178,179,209,210,216,225,233,234,235,236,237,248,249,250,254,255,256,267,270,272,273,],[-79,-80,-81,-82,-83,-84,-85,-86,-77,-78,-103,-87,-102,-88,-130,-132,-134,-131,-133,-137,-98,263,-107,-106,-136,-135,-108,]),'FINALLY':([218,225,235,237,249,270,272,],[238,-87,238,-134,-133,-136,-135,]),'CATCH':([218,225,235,237,249,270,272,],[239,-87,239,-134,-133,-136,-135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'declaration_list':([0,],[2,]),'empty':([0,35,38,44,59,62,68,92,111,121,152,158,165,168,195,197,203,214,219,247,264,],[3,45,54,45,108,112,117,139,159,169,108,108,204,169,223,139,159,232,169,259,259,]),'declaration':([2,],[4,]),'class':([2,],[5,]),'function_declaration':([2,35,44,],[6,47,47,]),'variable_declaration':([2,121,165,168,214,219,245,246,263,271,],[7,170,170,170,230,170,170,170,170,170,]),'import_statement':([2,],[8,]),'const_declaration':([2,],[9,]),'declaration_type':([2,14,28,35,38,44,51,75,86,121,134,165,168,214,219,245,246,263,271,],[12,33,37,49,52,49,72,122,133,164,190,164,164,164,164,164,164,164,164,]),'primitive_type':([2,14,28,35,38,39,44,51,57,58,59,60,62,67,75,76,77,78,79,80,81,82,83,84,85,86,91,92,93,94,95,96,97,98,99,100,101,102,103,121,134,152,156,158,165,168,185,186,193,197,211,212,213,214,219,222,245,246,247,252,253,263,264,271,],[15,15,15,15,15,64,15,15,64,64,64,64,64,64,15,64,64,64,64,64,64,64,64,64,64,15,64,64,64,64,64,64,64,64,64,64,64,64,64,188,15,64,64,64,206,188,64,64,64,64,64,64,64,188,188,64,188,188,64,64,64,188,64,188,]),'generic_type':([2,14,28,35,38,44,51,75,86,121,134,165,168,214,219,245,246,263,271,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'type_nullable':([2,14,28,35,38,44,51,75,86,121,134,165,168,214,219,245,246,263,271,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'function_name':([12,49,],[29,29,]),'type_list':([28,],[36,]),'class_body':([35,44,],[43,70,]),'class_member':([35,44,],[44,44,]),'class_property':([35,44,],[46,46,]),'constructor_declaration':([35,44,],[48,48,]),'parameters':([38,],[53,]),'expression':([39,57,58,59,60,62,67,76,77,78,79,80,81,82,83,84,85,91,92,93,94,95,96,97,98,99,100,101,102,103,121,152,156,158,165,168,185,186,193,197,211,212,213,214,219,222,245,246,247,252,253,263,264,271,],[56,104,105,107,109,111,114,123,124,125,126,127,128,129,130,131,132,136,107,140,141,142,143,144,145,146,147,148,149,150,171,107,195,107,203,171,215,217,220,107,226,227,228,231,171,242,171,171,258,242,262,171,258,171,]),'term':([39,57,58,59,60,62,67,76,77,78,79,80,81,82,83,84,85,91,92,93,94,95,96,97,98,99,100,101,102,103,121,152,156,158,165,168,185,186,193,197,211,212,213,214,219,222,245,246,247,252,253,263,264,271,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'factor':([39,57,58,59,60,62,67,76,77,78,79,80,81,82,83,84,85,91,92,93,94,95,96,97,98,99,100,101,102,103,121,152,156,158,165,168,185,186,193,197,211,212,213,214,219,222,245,246,247,252,253,263,264,271,],[63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'expression_list':([59,92,152,158,197,],[106,138,194,196,138,]),'set_or_map_contents':([62,165,],[110,110,]),'constructor_params':([68,],[115,]),'constructor_param_list':([68,],[116,]),'constructor_param':([68,162,],[118,199,]),'arguments':([92,197,],[137,224,]),'set_or_map_tail':([111,203,],[155,155,]),'set_tail':([111,203,],[157,157,]),'body':([121,],[166,]),'instructions':([121,165,168,219,],[167,202,208,202,]),'instruction':([121,165,168,219,245,246,263,271,],[168,168,168,168,255,256,267,273,]),'print_statement':([121,165,168,219,245,246,263,271,],[172,172,172,172,172,172,172,172,]),'if_else':([121,165,168,219,245,246,263,271,],[173,173,173,173,173,173,173,173,]),'while_loop':([121,165,168,219,245,246,263,271,],[174,174,174,174,174,174,174,174,]),'for_loop':([121,165,168,219,245,246,263,271,],[175,175,175,175,175,175,175,175,]),'return_statement':([121,165,168,219,245,246,263,271,],[176,176,176,176,176,176,176,176,]),'block_statement':([121,165,168,187,219,238,245,246,263,266,269,271,],[177,177,177,218,177,250,177,177,177,270,272,177,]),'throw_statement':([121,165,168,219,245,246,263,271,],[178,178,178,178,178,178,178,178,]),'try_statement':([121,165,168,219,245,246,263,271,],[179,179,179,179,179,179,179,179,]),'map_tail':([195,],[221,]),'for_initializer':([214,],[229,]),'catch_clauses':([218,],[235,]),'finally_clause':([218,235,],[236,248,]),'catch_clause':([218,235,],[237,249,]),'map_entries':([222,],[240,]),'map_entry':([222,252,],[241,261,]),'expression_opt':([247,264,],[257,268,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> declaration_list','program',1,'p_program','sintactico.py',14),
  ('declaration_list -> declaration_list declaration','declaration_list',2,'p_declaration_list','sintactico.py',18),
  ('declaration_list -> empty','declaration_list',1,'p_declaration_list','sintactico.py',19),
  ('declaration -> class','declaration',1,'p_declaration','sintactico.py',26),
  ('declaration -> function_declaration','declaration',1,'p_declaration','sintactico.py',27),
  ('declaration -> variable_declaration SEMICOLON','declaration',2,'p_declaration','sintactico.py',28),
  ('declaration -> import_statement','declaration',1,'p_declaration','sintactico.py',29),
  ('declaration -> const_declaration SEMICOLON','declaration',2,'p_declaration','sintactico.py',30),
  ('import_statement -> IMPORT STRING_LITERAL SEMICOLON','import_statement',3,'p_import_statement','sintactico.py',34),
  ('const_declaration -> CONST declaration_type ID EQUALS expression','const_declaration',5,'p_const_declaration','sintactico.py',39),
  ('class -> CLASS ID LBRACE class_body RBRACE','class',5,'p_class','sintactico.py',62),
  ('class_body -> class_member class_body','class_body',2,'p_class_body','sintactico.py',66),
  ('class_body -> empty','class_body',1,'p_class_body','sintactico.py',67),
  ('class_member -> class_property','class_member',1,'p_class_member','sintactico.py',74),
  ('class_member -> function_declaration','class_member',1,'p_class_member','sintactico.py',75),
  ('class_member -> constructor_declaration','class_member',1,'p_class_member','sintactico.py',76),
  ('function_declaration -> declaration_type function_name LPAREN parameters RPAREN LBRACE body RBRACE','function_declaration',8,'p_function_declaration','sintactico.py',80),
  ('function_name -> ID','function_name',1,'p_function_name','sintactico.py',84),
  ('function_name -> MAIN','function_name',1,'p_function_name','sintactico.py',85),
  ('class_property -> declaration_type ID SEMICOLON','class_property',3,'p_class_property','sintactico.py',89),
  ('constructor_declaration -> ID LPAREN constructor_params RPAREN SEMICOLON','constructor_declaration',5,'p_constructor_declaration','sintactico.py',93),
  ('constructor_params -> constructor_param_list','constructor_params',1,'p_constructor_params','sintactico.py',97),
  ('constructor_params -> empty','constructor_params',1,'p_constructor_params','sintactico.py',98),
  ('constructor_param_list -> constructor_param_list COMMA constructor_param','constructor_param_list',3,'p_constructor_param_list','sintactico.py',102),
  ('constructor_param_list -> constructor_param','constructor_param_list',1,'p_constructor_param_list','sintactico.py',103),
  ('constructor_param -> THIS DOT ID','constructor_param',3,'p_constructor_param','sintactico.py',110),
  ('declaration_type -> primitive_type','declaration_type',1,'p_declaration_type','sintactico.py',114),
  ('declaration_type -> generic_type','declaration_type',1,'p_declaration_type','sintactico.py',115),
  ('declaration_type -> type_nullable','declaration_type',1,'p_declaration_type','sintactico.py',116),
  ('declaration_type -> ID','declaration_type',1,'p_declaration_type','sintactico.py',117),
  ('primitive_type -> INT','primitive_type',1,'p_primitive_type','sintactico.py',121),
  ('primitive_type -> DOUBLE','primitive_type',1,'p_primitive_type','sintactico.py',122),
  ('primitive_type -> STRING','primitive_type',1,'p_primitive_type','sintactico.py',123),
  ('primitive_type -> BOOL','primitive_type',1,'p_primitive_type','sintactico.py',124),
  ('primitive_type -> VOID','primitive_type',1,'p_primitive_type','sintactico.py',125),
  ('primitive_type -> VAR','primitive_type',1,'p_primitive_type','sintactico.py',126),
  ('primitive_type -> DYNAMIC','primitive_type',1,'p_primitive_type','sintactico.py',127),
  ('generic_type -> ID MINSIGN type_list MAXSIGN','generic_type',4,'p_generic_type','sintactico.py',131),
  ('type_nullable -> primitive_type QMARK','type_nullable',2,'p_type_nullable','sintactico.py',135),
  ('expression -> expression NULLCOALESCING expression','expression',3,'p_expression_nullcoalescing','sintactico.py',139),
  ('type_list -> type_list COMMA declaration_type','type_list',3,'p_type_list','sintactico.py',143),
  ('type_list -> declaration_type','type_list',1,'p_type_list','sintactico.py',144),
  ('expression -> expression AND expression','expression',3,'p_expression_logical','sintactico.py',154),
  ('expression -> expression OR expression','expression',3,'p_expression_logical','sintactico.py',155),
  ('expression -> expression EQEQ expression','expression',3,'p_expression_relational','sintactico.py',159),
  ('expression -> expression NEQ expression','expression',3,'p_expression_relational','sintactico.py',160),
  ('expression -> expression MINSIGN expression','expression',3,'p_expression_relational','sintactico.py',161),
  ('expression -> expression MAXSIGN expression','expression',3,'p_expression_relational','sintactico.py',162),
  ('expression -> expression MINSIGNEQ expression','expression',3,'p_expression_relational','sintactico.py',163),
  ('expression -> expression MAXSIGNEQ expression','expression',3,'p_expression_relational','sintactico.py',164),
  ('expression -> expression IS declaration_type','expression',3,'p_expression_type_check','sintactico.py',168),
  ('expression -> expression IS NOT declaration_type','expression',4,'p_expression_type_check','sintactico.py',169),
  ('expression -> NOT expression','expression',2,'p_expression_not','sintactico.py',176),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','sintactico.py',180),
  ('expression -> expression PLUSPLUS','expression',2,'p_expression_postfix','sintactico.py',184),
  ('expression -> expression MINUSMINUS','expression',2,'p_expression_postfix','sintactico.py',185),
  ('expression -> expression DOT ID','expression',3,'p_expression_member_access','sintactico.py',189),
  ('expression -> expression LBRACKET expression RBRACKET','expression',4,'p_expression_subscript','sintactico.py',193),
  ('expression -> expression LPAREN arguments RPAREN','expression',4,'p_expression_call','sintactico.py',197),
  ('arguments -> expression_list','arguments',1,'p_arguments','sintactico.py',201),
  ('arguments -> empty','arguments',1,'p_arguments','sintactico.py',202),
  ('expression -> expression NOT','expression',2,'p_expression_null_assert','sintactico.py',206),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binaria','sintactico.py',210),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binaria','sintactico.py',211),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binaria','sintactico.py',212),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binaria','sintactico.py',213),
  ('expression -> expression INTDIV expression','expression',3,'p_expression_binaria','sintactico.py',214),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',218),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',222),
  ('factor -> primitive_type DOT ID LPAREN arguments RPAREN','factor',6,'p_factor_static_call','sintactico.py',226),
  ('factor -> NUMBER','factor',1,'p_factor_number','sintactico.py',230),
  ('factor -> STRING_LITERAL','factor',1,'p_factor_string','sintactico.py',234),
  ('factor -> ID','factor',1,'p_factor_id','sintactico.py',238),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr_group','sintactico.py',242),
  ('instructions -> instruction instructions','instructions',2,'p_instructions','sintactico.py',247),
  ('instructions -> empty','instructions',1,'p_instructions','sintactico.py',248),
  ('instruction -> variable_declaration SEMICOLON','instruction',2,'p_instruction','sintactico.py',255),
  ('instruction -> expression SEMICOLON','instruction',2,'p_instruction','sintactico.py',256),
  ('instruction -> print_statement','instruction',1,'p_instruction','sintactico.py',257),
  ('instruction -> if_else','instruction',1,'p_instruction','sintactico.py',258),
  ('instruction -> while_loop','instruction',1,'p_instruction','sintactico.py',259),
  ('instruction -> for_loop','instruction',1,'p_instruction','sintactico.py',260),
  ('instruction -> return_statement','instruction',1,'p_instruction','sintactico.py',261),
  ('instruction -> block_statement','instruction',1,'p_instruction','sintactico.py',262),
  ('instruction -> throw_statement','instruction',1,'p_instruction','sintactico.py',263),
  ('instruction -> try_statement','instruction',1,'p_instruction','sintactico.py',264),
  ('block_statement -> LBRACE instructions RBRACE','block_statement',3,'p_block_statement','sintactico.py',268),
  ('throw_statement -> THROW expression SEMICOLON','throw_statement',3,'p_throw_statement','sintactico.py',272),
  ('variable_declaration -> declaration_type ID','variable_declaration',2,'p_variable_declaration','sintactico.py',277),
  ('variable_declaration -> declaration_type ID EQUALS expression','variable_declaration',4,'p_variable_declaration','sintactico.py',278),
  ('expression -> expression EQUALS expression','expression',3,'p_expression_assignment','sintactico.py',285),
  ('expression -> expression PLUSEQ expression','expression',3,'p_expression_assignment','sintactico.py',286),
  ('expression -> expression MINUSEQ expression','expression',3,'p_expression_assignment','sintactico.py',287),
  ('expression -> expression TIMESEQ expression','expression',3,'p_expression_assignment','sintactico.py',288),
  ('expression -> expression DIVEQ expression','expression',3,'p_expression_assignment','sintactico.py',289),
  ('expression -> expression NULLASSIGN expression','expression',3,'p_expression_assignment','sintactico.py',290),
  ('expression -> expression QMARK expression COLON expression','expression',5,'p_expression_ternary','sintactico.py',294),
  ('print_statement -> PRINT LPAREN expression RPAREN SEMICOLON','print_statement',5,'p_print_statement','sintactico.py',300),
  ('parameters -> parameters COMMA declaration_type ID','parameters',4,'p_parameters','sintactico.py',305),
  ('parameters -> declaration_type ID','parameters',2,'p_parameters','sintactico.py',306),
  ('parameters -> empty','parameters',1,'p_parameters','sintactico.py',307),
  ('return_statement -> RETURN expression SEMICOLON','return_statement',3,'p_return_statement','sintactico.py',317),
  ('return_statement -> RETURN SEMICOLON','return_statement',2,'p_return_statement','sintactico.py',318),
  ('body -> instructions','body',1,'p_body','sintactico.py',328),
  ('if_else -> IF LPAREN expression RPAREN instruction','if_else',5,'p_if_else','sintactico.py',337),
  ('if_else -> IF LPAREN expression RPAREN instruction ELSE instruction','if_else',7,'p_if_else','sintactico.py',338),
  ('while_loop -> WHILE LPAREN expression RPAREN instruction','while_loop',5,'p_while_loop','sintactico.py',346),
  ('for_loop -> FOR LPAREN for_initializer SEMICOLON expression_opt SEMICOLON expression_opt RPAREN instruction','for_loop',9,'p_for_loop','sintactico.py',351),
  ('for_initializer -> variable_declaration','for_initializer',1,'p_for_initializer','sintactico.py',355),
  ('for_initializer -> expression','for_initializer',1,'p_for_initializer','sintactico.py',356),
  ('for_initializer -> empty','for_initializer',1,'p_for_initializer','sintactico.py',357),
  ('expression_opt -> expression','expression_opt',1,'p_expression_opt','sintactico.py',361),
  ('expression_opt -> empty','expression_opt',1,'p_expression_opt','sintactico.py',362),
  ('expression -> LBRACKET expression_list RBRACKET','expression',3,'p_expression_array','sintactico.py',368),
  ('expression -> LBRACE set_or_map_contents RBRACE','expression',3,'p_expression_set_or_map','sintactico.py',374),
  ('set_or_map_contents -> expression set_or_map_tail','set_or_map_contents',2,'p_set_or_map_contents','sintactico.py',378),
  ('set_or_map_contents -> empty','set_or_map_contents',1,'p_set_or_map_contents','sintactico.py',379),
  ('set_or_map_tail -> COLON expression map_tail','set_or_map_tail',3,'p_set_or_map_tail','sintactico.py',394),
  ('set_or_map_tail -> set_tail','set_or_map_tail',1,'p_set_or_map_tail','sintactico.py',395),
  ('map_tail -> COMMA map_entries','map_tail',2,'p_map_tail','sintactico.py',402),
  ('map_tail -> empty','map_tail',1,'p_map_tail','sintactico.py',403),
  ('map_entries -> map_entries COMMA map_entry','map_entries',3,'p_map_entries','sintactico.py',407),
  ('map_entries -> map_entry','map_entries',1,'p_map_entries','sintactico.py',408),
  ('map_entry -> expression COLON expression','map_entry',3,'p_map_entry','sintactico.py',415),
  ('set_tail -> COMMA expression_list','set_tail',2,'p_set_tail','sintactico.py',419),
  ('set_tail -> empty','set_tail',1,'p_set_tail','sintactico.py',420),
  ('expression_list -> expression COMMA expression_list','expression_list',3,'p_expression_list','sintactico.py',424),
  ('expression_list -> expression','expression_list',1,'p_expression_list','sintactico.py',425),
  ('expression_list -> empty','expression_list',1,'p_expression_list','sintactico.py',426),
  ('try_statement -> TRY block_statement catch_clauses','try_statement',3,'p_try_statement','sintactico.py',436),
  ('try_statement -> TRY block_statement catch_clauses finally_clause','try_statement',4,'p_try_statement','sintactico.py',437),
  ('try_statement -> TRY block_statement finally_clause','try_statement',3,'p_try_statement','sintactico.py',438),
  ('catch_clauses -> catch_clauses catch_clause','catch_clauses',2,'p_catch_clauses','sintactico.py',450),
  ('catch_clauses -> catch_clause','catch_clauses',1,'p_catch_clauses','sintactico.py',451),
  ('catch_clause -> CATCH LPAREN ID ID RPAREN block_statement','catch_clause',6,'p_catch_clause','sintactico.py',458),
  ('catch_clause -> CATCH LPAREN ID RPAREN block_statement','catch_clause',5,'p_catch_clause','sintactico.py',459),
  ('finally_clause -> FINALLY block_statement','finally_clause',2,'p_finally_clause','sintactico.py',466),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',472),
]
