
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOL BREAK CASE CLASS COLON COMMA COMMENT CONST CONTINUE DIVEQ DIVIDE DOT DOUBLE ELSE EQEQ EQUALS EXTENDS FINAL FOR ID IF IMPLEMENTS IMPORT INT INTDIV LBRACES LBRACKET LPAREN MAXSIGN MAXSIGNEQ MINSIGN MINSIGNEQ MINUS MINUSEQ MODULE NEQ NOT NULLASSIGN NULLCOALESCING NUMBER OR PLUS PLUSEQ QMARK_DOT RBRACES RBRACKET RETURN RPAREN SEMICOLON SQUOTE STRING STRING_LITERAL SWITCH THEN TIMES TIMESEQ VAR WHILEprogram : function_list\n               | function_list : function function_list\n                     | function : type ID LPAREN parameters RPAREN blockparameters : parameter_list\n                  | parameter_list : parameter COMMA parameter_list\n                      | parameter\n                      | parameter : type IDexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : term DIVIDE factorterm : factorfactor : NUMBERfactor : LPAREN expression RPARENblock : LBRACES statements RBRACESstatements : statement statements\n                  | statement : expression SEMICOLONtype : INT\n            | DOUBLE\n            | BOOL\n            | STRING\n            | VAR'
    
_lr_action_items = {'$end':([0,1,2,3,10,20,30,],[-2,0,-1,-4,-3,-5,-20,]),'INT':([0,3,12,19,20,30,],[5,5,5,5,-5,-20,]),'DOUBLE':([0,3,12,19,20,30,],[6,6,6,6,-5,-20,]),'BOOL':([0,3,12,19,20,30,],[7,7,7,7,-5,-20,]),'STRING':([0,3,12,19,20,30,],[8,8,8,8,-5,-20,]),'VAR':([0,3,12,19,20,30,],[9,9,9,9,-5,-20,]),'ID':([4,5,6,7,8,9,13,],[11,-24,-25,-26,-27,-28,17,]),'LPAREN':([11,21,24,29,32,33,34,35,36,],[12,29,29,29,-23,29,29,29,29,]),'RPAREN':([12,14,15,16,17,19,22,26,27,28,37,38,39,40,41,42,],[-7,18,-6,-9,-11,-10,-8,-14,-17,-18,42,-12,-13,-15,-16,-19,]),'COMMA':([16,17,],[19,-11,]),'LBRACES':([18,],[21,]),'RBRACES':([21,23,24,31,32,],[-22,30,-22,-21,-23,]),'NUMBER':([21,24,29,32,33,34,35,36,],[28,28,28,-23,28,28,28,28,]),'SEMICOLON':([25,26,27,28,38,39,40,41,42,],[32,-14,-17,-18,-12,-13,-15,-16,-19,]),'PLUS':([25,26,27,28,37,38,39,40,41,42,],[33,-14,-17,-18,33,-12,-13,-15,-16,-19,]),'MINUS':([25,26,27,28,37,38,39,40,41,42,],[34,-14,-17,-18,34,-12,-13,-15,-16,-19,]),'TIMES':([26,27,28,38,39,40,41,42,],[35,-17,-18,35,35,-15,-16,-19,]),'DIVIDE':([26,27,28,38,39,40,41,42,],[36,-17,-18,36,36,-15,-16,-19,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'function_list':([0,3,],[2,10,]),'function':([0,3,],[3,3,]),'type':([0,3,12,19,],[4,4,13,13,]),'parameters':([12,],[14,]),'parameter_list':([12,19,],[15,22,]),'parameter':([12,19,],[16,16,]),'block':([18,],[20,]),'statements':([21,24,],[23,31,]),'statement':([21,24,],[24,24,]),'expression':([21,24,29,],[25,25,37,]),'term':([21,24,29,33,34,],[26,26,26,38,39,]),'factor':([21,24,29,33,34,35,36,],[27,27,27,27,27,40,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> function_list','program',1,'p_program','main.py',5),
  ('program -> <empty>','program',0,'p_program','main.py',6),
  ('function_list -> function function_list','function_list',2,'p_function_list','main.py',13),
  ('function_list -> <empty>','function_list',0,'p_function_list','main.py',14),
  ('function -> type ID LPAREN parameters RPAREN block','function',6,'p_function','main.py',21),
  ('parameters -> parameter_list','parameters',1,'p_parameters','main.py',25),
  ('parameters -> <empty>','parameters',0,'p_parameters','main.py',26),
  ('parameter_list -> parameter COMMA parameter_list','parameter_list',3,'p_parameter_list','main.py',33),
  ('parameter_list -> parameter','parameter_list',1,'p_parameter_list','main.py',34),
  ('parameter_list -> <empty>','parameter_list',0,'p_parameter_list','main.py',35),
  ('parameter -> type ID','parameter',2,'p_parameter','main.py',44),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','main.py',57),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','main.py',61),
  ('expression -> term','expression',1,'p_expression_term','main.py',65),
  ('term -> term TIMES factor','term',3,'p_term_times','main.py',69),
  ('term -> term DIVIDE factor','term',3,'p_term_div','main.py',73),
  ('term -> factor','term',1,'p_term_factor','main.py',77),
  ('factor -> NUMBER','factor',1,'p_factor_num','main.py',81),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','main.py',85),
  ('block -> LBRACES statements RBRACES','block',3,'p_block','main.py',89),
  ('statements -> statement statements','statements',2,'p_statements','main.py',93),
  ('statements -> <empty>','statements',0,'p_statements','main.py',94),
  ('statement -> expression SEMICOLON','statement',2,'p_statement','main.py',101),
  ('type -> INT','type',1,'p_type','main.py',105),
  ('type -> DOUBLE','type',1,'p_type','main.py',106),
  ('type -> BOOL','type',1,'p_type','main.py',107),
  ('type -> STRING','type',1,'p_type','main.py',108),
  ('type -> VAR','type',1,'p_type','main.py',109),
]
